{"version":3,"sources":["../../../../../../webpack/bootstrap","../../../../../../external \"react\"","../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","../../../node_modules/css-loader/dist/runtime/api.js","../../../../../../src/components/Icons/icon.scss?831a","../../../../../../src/components/Input/Input.tsx","../../../../../../src/components/Input/Multiselect.tsx","../../../../../../src/components/Input/RadioButton.tsx","../../../../../../src/components/Text/TextHeadingLarge.tsx","../../../../../../src/components/Text/TextHeadingMedium.tsx","../../../../../../src/components/Text/TextHeadingSmall.tsx","../../../../../../src/components/Text/TextMedium.tsx","../../../../../../src/components/Text/TextSmall.tsx","../../../../../../src/components/Text/index.ts","../../../../../../src/components/Buttons/BareButton.tsx","../../../../../../src/components/Buttons/PrimaryButton.tsx","../../../../../../src/components/Buttons/index.ts","../../../../../../src/components/Input/Checkbox.tsx","../../../../../../src/components/Input/ValidationMessage.tsx","../../../../../../src/components/Input/RadioButtonGroup.tsx","../../../../../../src/components/Input/Select.tsx","../../../../../../src/components/Input/SearchableMultiselect.tsx","../../../../../../src/components/LoadingSpinner/LoadingSpinner.tsx","../../../../../../src/validation/index.ts","../../../../../../src/validation/required.validation.ts","../../../../../../src/components/Icons/ArrowIcon.tsx","../../../../../../src/components/Icons/BurgerIcon.tsx","../../../../../../src/components/Icons/CrossIcon.tsx","../../../../../../src/components/Icons/MagnifyingGlassIcon.tsx","../../../../../../src/components/Icons/index.ts","../../../../../../src/components/Buttons/BareButton.scss?7861","../../../../../../src/components/Buttons/BareButton.scss","../../../../../../src/components/Buttons/PrimaryButton.scss?c70f","../../../../../../src/components/Buttons/PrimaryButton.scss","../../../../../../src/components/Icons/icon.scss","../../../../../../src/components/Text/TextHeadingLarge.scss?4a82","../../../../../../src/components/Text/TextHeadingLarge.scss","../../../../../../src/components/Text/TextHeadingMedium.scss?9b20","../../../../../../src/components/Text/TextHeadingMedium.scss","../../../../../../src/components/Text/TextHeadingSmall.scss?4c22","../../../../../../src/components/Text/TextHeadingSmall.scss","../../../../../../src/components/Text/TextMedium.scss?4e5d","../../../../../../src/components/Text/TextMedium.scss","../../../../../../src/components/Text/TextSmall.scss?2f44","../../../../../../src/components/Text/TextSmall.scss","../../../../../../src/components/Input/ValidationMessage.scss?5c15","../../../../../../src/components/Input/ValidationMessage.scss","../../../../../../src/components/Input/Input.scss?064a","../../../../../../src/components/Input/Input.scss","../../../../../../src/components/Input/Multiselect.scss?68b2","../../../../../../src/components/Input/Multiselect.scss","../../../../../../src/components/Input/RadioButton.scss?6c4e","../../../../../../src/components/Input/RadioButton.scss","../../../../../../src/components/Input/RadioButtonGroup.scss?539f","../../../../../../src/components/Input/RadioButtonGroup.scss","../../../../../../src/components/Input/Select.scss?8d55","../../../../../../src/components/Input/Select.scss","../../../../../../src/components/Input/SearchableMultiselect.scss?19f6","../../../../../../src/components/Input/SearchableMultiselect.scss","../../../../../../src/components/LoadingSpinner/LoadingSpinner.scss?8219","../../../../../../src/components/LoadingSpinner/LoadingSpinner.scss","../../src/index.ts","../../src/get-nearest-region-from-lat-lng.ts","../../src/name-search.ts","../../src/retrieve-backend-data.ts","../../../src/enums/index.ts","../../../src/enums/diet-type.enum.ts","../../../src/enums/user-roles.enum.ts","../../../src/config/index.ts","config/api-urls.ts","config/routes.ts","consts/form-button-text.ts","components-main/DataForm/DataForm.tsx","components-main/BaseFormCountry/BaseFormCountry.tsx","services/access-token.ts","services/make-authorized-request.ts","services/create-country-food-name-map.ts","services/create-country-recipe-name-map.ts","services/create-country.ts","services/create-food.ts","services/create-recipe.ts","services/create-region-food-season-map.ts","services/create-region.ts","services/create-user.ts","services/delete-country-food-name-map.ts","services/delete-country-recipe-name-map.ts","services/delete-country.ts","services/delete-food.ts","services/delete-recipe.ts","services/delete-region-food-season-map.ts","services/delete-region.ts","services/delete-user.ts","services/get-all-countries.ts","services/get-all-country-food-name-map.ts","services/get-all-country-recipe-name-map.ts","services/get-all-food.ts","services/get-all-recipes.ts","services/get-all-region-food-season-map.ts","services/get-all-regions.ts","services/get-all-users.ts","services/get-single-country.ts","services/get-single-country-food-name-map.ts","services/get-single-country-recipe-name-map.ts","services/get-single-food.ts","services/get-single-recipe.ts","services/get-single-region.ts","services/get-single-user.ts","services/login-request.ts","services/update-country.ts","services/update-country-food-name-map.ts","services/update-country-recipe-name-map.ts","services/update-food.ts","services/update-recipe.ts","services/update-region.ts","services/update-user.ts","components-main/BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap.tsx","components-main/BaseFormFood/BaseFormFood.tsx","components-main/BaseFormRecipe/BaseFormRecipe.tsx","components-main/BaseFormRegion/BaseFormRegion.tsx","components-main/BaseFormRegionFoodSeasonMap/BaseFormRegionFoodSeasonMap.tsx","components-main/BaseFormRegionSeasonFoodMap/BaseFormRegionSeasonFoodMap.tsx","components-main/BaseFormUser/BaseFormUser.tsx","components-main/BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap.tsx","components-layouts/LayoutWithTitle/LayoutWithTitle.tsx","components-layouts/MainPageLayout/MainPageLayout.tsx","components-layouts/ModalLayout/ModalLayout.tsx","components-main/CreateCountryFoodNameMapForm/CreateCountryFoodNameMapForm.tsx","components-main/CreateCountryForm/CreateCountryForm.tsx","components-main/CreateCountryRecipeNameMapForm/CreateCountryRecipeNameMapForm.tsx","components-main/CreateFoodForm/CreateFoodForm.tsx","components-main/CreateRecipeForm/CreateRecipeForm.tsx","components-main/CreateRegionForm/CreateRegionForm.tsx","components-main/CreateUserForm/CreateUserForm.tsx","components-main/GetAuthorizedBackendData/GetAuthorizedBackendData.tsx","components-main/EditCountryFoodNameMapForm/EditCountryFoodNameMapForm.tsx","components-main/EditCountryForm/EditCountryForm.tsx","components-main/EditCountryRecipeNameMapForm/EditCountryRecipeNameMapForm.tsx","components-main/EditFoodForm/EditFoodForm.tsx","components-main/EditRecipeForm/EditRecipeForm.tsx","components-main/EditRegionFoodSeasonMap/EditRegionFoodSeasonMap.tsx","components-main/EditRegionForm/EditRegionForm.tsx","components-main/EditUserForm/EditUserForm.tsx","components-main/DeleteModal/DeleteModal.tsx","components-main/FullList/FullList.tsx","components-main/FullListCountries/FullListCountries.tsx","components-main/FullListCountryFoodNameMaps/FullListCountryFoodNameMaps.tsx","components-main/FullListCountryRecipeNameMaps/FullListCountryRecipeNameMaps.tsx","components-main/FullListFood/FullListFood.tsx","components-main/FullListRecipes/FullListRecipes.tsx","components-main/FullListRegions/FullListRegions.tsx","components-main/FullListUsers/FullListUsers.tsx","components-main/LoginForm/LoginForm.tsx","components-main/MainLinks/MainLinks.tsx","components-pages/HomePage/HomePage.tsx","components-pages/LoginPage/LoginPage.tsx","consts/main-links.tsx","components-pages/CreateCountryPage/CreateCountryPage.tsx","components-pages/EditCountryPage/EditCountryPage.tsx","components-pages/ViewCountriesPage/ViewCountriesPage.tsx","components-pages/CreateCountryFoodNameMapPage/CreateCountryFoodNameMapPage.tsx","components-pages/EditCountryFoodNameMapPage/EditCountryFoodNameMapPage.tsx","components-pages/ViewCountryFoodNameMapsPage/ViewCountryFoodNameMapsPage.tsx","components-pages/CreateCountryRecipeNameMapPage/CreateCountryRecipeNameMapPage.tsx","components-pages/EditCountryRecipeNameMapPage/EditCountryRecipeNameMapPage.tsx","components-pages/ViewCountryRecipeNameMapsPage/ViewCountryRecipeNameMapsPage.tsx","components-pages/CreateFoodPage/CreateFoodPage.tsx","components-pages/EditFoodPage/EditFoodPage.tsx","components-pages/ViewFoodPage/ViewFoodPage.tsx","components-pages/CreateRecipePage/CreateRecipePage.tsx","components-pages/EditRecipePage/EditRecipePage.tsx","components-pages/ViewRecipesPage/ViewRecipesPage.tsx","components-pages/CreateRegionPage/CreateRegionPage.tsx","components-pages/EditRegionPage/EditRegionPage.tsx","components-pages/ViewRegionsPage/ViewRegionsPage.tsx","components-pages/EditRegionFoodSeasonMapPage/EditRegionFoodSeasonMapPage.tsx","components-pages/CreateUserPage/CreateUserPage.tsx","components-pages/EditUserPage/EditUserPage.tsx","components-pages/ViewUsersPage/ViewUsersPage.tsx","index.tsx","components-app/App.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","memo","getTarget","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","newObj","all","atob","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","content","base64","data","cssMapping","sourceMapping","sourceURLs","sources","source","sourceRoot","mediaQuery","dedupe","alreadyImportedModules","api","default","exported","locals","Input","children","className","type","placeholder","onChange","onKeyDown","data-e2e","rest","event","Multiselect","isSelected","optionValue","includes","option","onClick","selectedValue","newValue","innerValue","label","RadioButton","defaulToChecked","groupName","htmlFor","defaultChecked","Checkbox","checked","ValidationMessage","RadioButtonGroup","radioButtonClassName","radioButtons","Select","SearchableMultiselect","inputs","useState","filteredOptions","setFilteredOptions","Fragment","keyCode","visibleOptions","every","withOptionsRemoved","optionsToAdd","searchValue","filtered","toLowerCase","LoadingSpinner","requiredValidation","ArrowIcon","viewBox","strokeLinecap","strokeWidth","stroke","x1","y1","x2","y2","BurgerIcon","height","width","y","CrossIcon","points","MagnifyingGlassIcon","___CSS_LOADER_API_IMPORT___","convertDegressToRadians","getQueryString","ADMIN_BACKEND_URL","process","REACT_APP_ADMIN_BACKEND_URL","LOGIN_URL","REACT_APP_LOGIN_URL","COUNTRY_URL","REACT_APP_COUNTRY_URL","COUNTRY_FOOD_NAME_MAP_URL","REACT_APP_COUNTRY_FOOD_NAME_MAP_URL","REGION_FOOD_SEASON_MAP_URL","REACT_APP_REGION_FOOD_SEASON_MAP_URL","COUNTRY_RECIPE_NAME_MAP_URL","REACT_APP_COUNTRY_RECIPE_NAME_MAP_URL","FOOD_URL","REACT_APP_FOOD_URL","RECIPE_URL","REACT_APP_RECIPE_URL","REGION_URL","REACT_APP_REGION_URL","USER_URL","REACT_APP_USER_URL","ROUTES","FORM_BUTTON_TEXT","DataForm","sendData","formConfig","processItem","buttonText","UPDATE","goBackOnUpdate","itemState","setItemState","useEffect","selectFields","entries","field","newItem","reduce","builtItem","matchingField","find","fieldKey","selectOptions","errorState","setErrorState","validationState","setValidationState","isLoadingState","setIsLoadingState","updateItem","processedItem","submit","a","updatedItem","history","back","message","formField","validation","prop","toUpperCase","replace","slice","changedValue","errors","validationFunction","updateField","validationErrors","countryFormConfig","BaseFormCountry","items","updateMethod","getAccessTokenHeaders","token","sessionStorage","accessToken","Authorization","makeAuthorizedRequest","url","requestOptions","fetch","headers","response","status","location","href","json","error","createCountryFoodNameMap","country","body","method","createCountryRecipeNameMap","createCountry","createFood","food","createRecipe","recipe","createRegionFoodSeasonMap","regionFoodSeasonMap","createRegion","region","createUser","user","deleteCountryToFoodNameMap","deleteCountryToRecipeNameMap","deleteCountry","deleteFood","deleteRecipe","deleteRegionFoodSeasonMap","deleteRegion","deleteUser","getAllCountries","getAllCountryFoodNameMap","getAllCountryRecipeNameMap","getAllFood","getAllRecipes","getAllRegionFoodSeasonMap","getAllRegions","getAllUsers","getSingleCountry","getSingleCountryFoodNameMap","getSingleCountryRecipeNameMap","getSingleFood","getSingleRecipe","getSingleRegion","getSingleUser","loginRequest","username","password","updateCountry","updateCountryFoodNameMap","countryFoodNameMap","updateCountryRecipeNameMap","countryRecipeNameMap","updateFood","updateRecipe","updateRegion","updateUser","initialCountryRecipeNameMapFormConfig","BaseFormCountryRecipeNameMap","config","setConfig","Promise","then","countries","recipes","countryOptions","recipeOptions","foodItem","countryId","recipeId","updateConfigWithDropdowns","initialFoodFormConfig","imageUrlSmall","description","BaseFormFood","substituteFoodIds","updateConfigWithFoodDropdowns","initialRecipeFormConfig","linkUrl","isVegan","isVegetarian","BaseFormRecipe","primaryFoodInRecipeIds","secondaryFoodInRecipeIds","initialRegionFormConfig","isDisabled","lat","lng","BaseFormRegion","additionalConfig","BaseFormRegionFoodSeasonMap","itemData","setItemData","allRegionFoodSeasonMaps","setAllRegionFoodSeasonMaps","updateRegionFoodSeasonMap","form","existingItemsForRegionAndSeason","regionId","foodId","toCreate","seasonIds","seasonId","generateItems","allRegionFoodSeasonMap","updateSeasonIds","previousItem","allRegionFoodSeasonMapsResult","regionFoodSeason","undefined","getAllSeasons","regions","seasons","regionOptions","code","foodOptions","seasonOptions","season","currentConfig","BaseFormRegionSeasonFoodMap","foodIds","updateFoodIds","userFormConfig","roles","values","USER_ROLES","role","BaseFormUser","initialCountryFoodNameMapFormConfig","BaseFormCountryFoodNameMap","LayoutWithTitle","title","MainPageLayout","ModalLayout","CreateCountryFoodNameMapForm","CREATE","CreateCountryForm","CreateCountryRecipeNameMapForm","CreateFoodForm","CreateRecipeForm","createOnlyFields","CreateRegionForm","CreateUserForm","InnerAuthorizedComponent","InnerComponent","requestDataMethod","isLoading","state","setState","requestNewData","catch","reload","GetAuthorizedBackendData","EditCountryFoodNameMapForm","useParams","CreatedComponent","EditCountryForm","EditCountryRecipeNameMapForm","EditFoodForm","EditRecipeForm","EditRegionFoodSeasonMap","isInFoodFirstMode","setIsInFoodFirstMode","EditRegionForm","EditUserForm","DeleteModal","deleteItem","cancel","setIsLoading","deleteButtonPressed","FullList","getItemId","getItemName","getItemEditUrl","deleteItemFunc","goToEditLink","setGoToEditLink","deleteItemModalId","setDeleteItemModalId","to","FullListCountries","COUNTRY","EDIT","FullListCountryFoodNameMaps","countryName","foodName","COUNTRY_FOOD_NAME_MAP","foodNameMaps","foodNameMap","matchingFood","matchingCountry","sort","b","FullListCountryRecipeNameMaps","recipeName","COUNTRY_RECIPE_NAME_MAP","recipeNameMaps","recipeNameMap","matchingRecipe","FullListFood","FOOD","FullListRecipes","RECIPE","FullListRegions","REGION","countryItem","FullListUsers","USER","loginFormConfig","LoginForm","redirectToNextPageState","setRedirectToNextPageState","handleSubmit","SingleLink","MainLinks","mainLinks","link","viewUrl","sectionName","createPageComponent","createLinkUrl","HomePage","LoginPage","editPageComponent","viewPageComponent","REGION_FOOD_SEASON_MAP","editLinkUrl","rootElement","getElementById","render","exact","path","LOGIN","HOME","component"],"mappings":"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","file":"static/js/main.4fef5b91.chunk.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"react\");","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./icon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React, { FC, KeyboardEventHandler } from 'react';\nimport './Input.scss';\n\nexport const Input: FC<{\n  className?: string,\n  type?: 'text' | 'number' | 'password',\n  placeholder?: string,\n  onChange: (newValue: string) => void,\n  onKeyDown?: KeyboardEventHandler,\n  value?: string | number,\n  'data-e2e'?: string\n}> = ({\n  children,\n  className,\n  type = 'text',\n  placeholder,\n  onChange,\n  onKeyDown,\n  value,\n  ...rest\n}) => (\n  <input\n    data-e2e={rest['data-e2e']}\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    value={value}\n    onKeyDown={onKeyDown}\n    onChange={(event) => onChange(event.target.value)}>\n    { children }\n  </input>\n);\n","import React, { FC } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport './Multiselect.scss';\nimport { BareButton } from '../Buttons';\n\nexport const Multiselect: FC<{\n  className?: string,\n  onChange: (newValue: Array<(string | number)>) => void,\n  options: ISelectOption[],\n  value: Array<(string | number)>\n}> = ({\n  className,\n  onChange,\n  options,\n  value\n}) => {\n\n  const isSelected = (optionValue: string | number) =>\n    value && value.includes(optionValue);\n  const onOptionClicked = (selectedValue: string | number) => {\n    const newValue = isSelected(selectedValue)\n      ? value.filter((innerValue) => innerValue !== selectedValue)\n      : [...value, selectedValue];\n    onChange(newValue);\n  };\n\n  return <div\n    className={`c-multiselect ${(className || '')}`}>\n      {\n        options && options.map((option) =>\n          <BareButton key={option.value}\n            className={\n              'c-multi-select-option' + (\n                isSelected(option.value)\n                  ? ' c-multi-select-option--selected'\n                  : ''\n              )\n            }\n            onClick={() => onOptionClicked(option.value)}>\n              {option.label}\n          </BareButton>\n        )\n      }\n  </div>;\n};\n","import React, { FC } from 'react';\nimport './RadioButton.scss';\n\nexport const RadioButton: FC<{\n  className?: string,\n  defaulToChecked?: boolean,\n  groupName: string,\n  value: string,\n  label: string\n}> = ({\n  className,\n  defaulToChecked,\n  groupName,\n  value,\n  label\n}) => (\n  <label\n    data-e2e={`radio-btn-${value}`}\n    htmlFor={value}\n    className={`${(className || '')} c-radio-button ${\n      defaulToChecked ? 'c-radio-button--selected' : ''\n    }`}>\n    <input\n      className='c-radio-button__input'\n      defaultChecked={defaulToChecked}\n      id={value}\n      type='radio'\n      name={groupName}\n      value={value} />\n    {label}\n  </label>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingLarge.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingLarge: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-large`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingMedium.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingMedium: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-medium`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingSmall.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingSmall: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-small`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextMedium.scss';\nimport { IText } from './Text.interface';\n\nexport const TextMedium: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-medium`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextSmall.scss';\nimport { IText } from './Text.interface';\n\nexport const TextSmall: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-small`}>\n    { children }\n  </span>\n);\n","export * from './TextHeadingLarge';\n\nexport * from './TextHeadingMedium';\n\nexport * from './TextHeadingSmall';\n\nexport * from './TextMedium';\n\nexport * from './TextSmall';\n","import React, { FC } from 'react';\nimport './BareButton.scss';\nimport { IButton } from './Button.interface';\n\nexport const BareButton: FC<IButton> = ({\n  className,\n  children,\n  onClick,\n  type = 'button',\n  ...rest\n}) => (\n  <button\n    data-e2e={rest['data-e2e']}\n    type={type}\n    className={`${(className || '')} c-bare-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","import React, { FC } from 'react';\nimport './PrimaryButton.scss';\nimport { IButton } from './Button.interface';\n\nexport const PrimaryButton: FC<IButton> = ({\n  className,\n  children,\n  onClick,\n  type = 'button',\n  ...rest\n}) => (\n  <button\n    data-e2e={rest['data-e2e']}\n    type={type} className={`${(className || '')} c-primary-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","export * from './BareButton';\n\nexport * from './PrimaryButton';\n","import React, { FC } from 'react';\n\nexport const Checkbox: FC<{\n  className?: string,\n  onChange: (newValue: boolean) => void,\n  value: boolean\n}> = ({\n  className,\n  onChange,\n  value\n}) => (\n  <input\n    className={`${(className || '')}`}\n    type='checkbox'\n    checked={value}\n    onChange={(event) => onChange(event.target.checked)} />\n);\n","import React, { FC } from 'react';\nimport { TextMedium } from '../Text';\nimport './ValidationMessage.scss';\n\nexport const ValidationMessage: FC<{\n  className?: string\n}> = ({\n  className,\n  children\n}) => (\n  <TextMedium\n    className={`${(className || '')} c-validation-message`}>\n      {children}\n  </TextMedium>\n);\n","import React, { FC } from 'react';\n\nimport { RadioButton } from './RadioButton';\n\nimport './RadioButtonGroup.scss';\n\nexport const RadioButtonGroup: FC<{\n  className?: string,\n  radioButtonClassName?: string,\n  groupName: string,\n  radioButtons: Array<{\n    value: string,\n    label: string\n  }>,\n  selectedValue?: string,\n  onChange: (newValue: string) => void\n}> = ({\n  className,\n  radioButtonClassName,\n  selectedValue,\n  groupName,\n  radioButtons,\n  onChange\n}) => (\n  <div\n    className={`${(className || '')} c-radio-button-group`}\n    onChange={\n      (event) => onChange((event.target as HTMLInputElement).value)\n    }>\n    {\n      radioButtons.map(({ value, label }) => (\n        <RadioButton\n          key={value}\n          className={radioButtonClassName}\n          defaulToChecked={selectedValue === value}\n          groupName={groupName}\n          value={value}\n          label={label}\n        />\n      ))\n    }\n  </div>\n);\n","import React, { FC } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport './Select.scss';\n\nexport const Select: FC<{\n  className?: string,\n  onChange: (newValue: string) => void,\n  options: ISelectOption[],\n  value: string | number\n}> = ({\n  className,\n  onChange,\n  options,\n  value\n}) => (\n  <select\n    className={`${(className || '')} c-select`}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}>\n      {\n        options.map((option) =>\n          <option key={option.value} value={option.value}>{option.label}</option>\n        )\n      }\n  </select>\n);\n","import React, { FC, Fragment, useState, KeyboardEventHandler } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport { Multiselect } from './Multiselect';\nimport { Input } from './Input';\nimport './SearchableMultiselect.scss';\n\nexport const SearchableMultiselect: FC<{\n  className?: string,\n  onChange: (newValue: Array<(string | number)>) => void,\n  options: ISelectOption[],\n  value: Array<(string | number)>\n}> = (inputs) => {\n\n  const [filteredOptions, setFilteredOptions] =\n    useState<ISelectOption[]>(inputs.options);\n\n  const searchUpdated = (searchValue: string) => {\n    const filtered = inputs.options\n      .filter((option) => option.label\n        .toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredOptions(filtered);\n  };\n\n  const handleKeyPress: KeyboardEventHandler = (\n    event\n  ) => {\n    if (event.keyCode === 13) {\n      const visibleOptions = filteredOptions.map((option) => option.value);\n      const areAllOptionsSelected = visibleOptions\n        .every((option) => inputs.value.includes(option));\n      if (areAllOptionsSelected) {\n        const withOptionsRemoved = inputs.value\n          .filter((value) => !visibleOptions.includes(value));\n        inputs.onChange(withOptionsRemoved);\n      } else {\n        const optionsToAdd = visibleOptions\n          .filter((value) => !inputs.value.includes(value));\n        inputs.onChange([\n          ...inputs.value,\n          ...optionsToAdd\n        ]);\n      }\n    }\n  };\n\n  return <Fragment>\n    <Input\n      className='c-searchable-multiselect__search'\n      placeholder='Search'\n      onKeyDown={handleKeyPress}\n      onChange={searchUpdated} />\n    <Multiselect {...{\n      ...inputs,\n      className: (inputs.className || '')\n        + ' c-searchable-multiselect__multi-select',\n      options: filteredOptions\n    }} />\n  </Fragment>;\n};\n","import React, { FC } from 'react';\n\nimport './LoadingSpinner.scss';\n\nexport const LoadingSpinner: FC<{}> = () => (\n  <div className='c-loading-spinner' data-e2e='loading-spinner'>\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n  </div>\n);\n","export * from './required.validation';\n\nexport * from './validation.interface';\n","import { IValidation } from './validation.interface';\n\nexport const requiredValidation: IValidation = (\n  value: string | string[] | number | boolean\n): string | null => (\n  value === null\n  || value === undefined\n  || value === ''\n  || ((value as string[]).length && (value as string[]).length === 0)\n  ? 'Required'\n  : null\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const ArrowIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon${className ? ` ${className}` : ''}`} viewBox='0 0 24 24'>\n    <g strokeLinecap='round' strokeWidth='2' stroke='#000'>\n      <line x1='1' y1='11' x2='6' y2='5' />\n      <line x1='1' y1='11' x2='6' y2='17' />\n      <line x1='2' y1='11' x2='22' y2='11' />\n    </g>\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const BurgerIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg viewBox='0 0 24 24' className={`c-icon${className ? ` ${className}` : ''}`} >\n    <rect height='2' width='24' y='5'></rect>\n    <rect height='2' width='24' y='11'></rect>\n    <rect height='2' width='24' y='17'></rect>\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const CrossIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon ${className ? ` ${className}` : ''}`}  viewBox='0 0 24 24'>\n    {/* tslint:disable-next-line */}\n    <polygon points='19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12' />\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const MagnifyingGlassIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon${className ? ` ${className}` : ''}`} viewBox='0 0 32 32'>\n    {/* tslint:disable-next-line */}\n    <path d='M19.4271164,21.4271164 C18.0372495,22.4174803 16.3366522,23 14.5,23 C9.80557939,23 6,19.1944206 6,14.5 C6,9.80557939 9.80557939,6 14.5,6 C19.1944206,6 23,9.80557939 23,14.5 C23,16.3366522 22.4174803,18.0372495 21.4271164,19.4271164 L27.0119176,25.0119176 C27.5621186,25.5621186 27.5575313,26.4424687 27.0117185,26.9882815 L26.9882815,27.0117185 C26.4438648,27.5561352 25.5576204,27.5576204 25.0119176,27.0119176 L19.4271164,21.4271164 L19.4271164,21.4271164 Z M14.5,21 C18.0898511,21 21,18.0898511 21,14.5 C21,10.9101489 18.0898511,8 14.5,8 C10.9101489,8 8,10.9101489 8,14.5 C8,18.0898511 10.9101489,21 14.5,21 L14.5,21 Z' />\n  </svg>\n);\n","export * from './ArrowIcon';\n\nexport * from './BurgerIcon';\n\nexport * from './CrossIcon';\n\nexport * from './MagnifyingGlassIcon';\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./BareButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-bare-button{border:none;cursor:pointer;font-family:\\\"Roboto\\\",sans-serif}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./PrimaryButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-primary-button{cursor:pointer;background-color:#5CB5CD;border:none;padding:1rem;color:#fff;border-radius:5px;box-shadow:1px 1px 3px 1px rgba(0,0,0,0.2);font-family:\\\"Roboto\\\",sans-serif;transition:background-color .2s;font-size:1.125rem;min-width:175px}.c-primary-button:hover{transition-duration:0s;background-color:#83c7d9}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-icon{width:100%}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingLarge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-large{font-size:2rem;font-weight:300}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingMedium.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-medium{font-weight:500;font-size:1.5rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingSmall.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-small{font-weight:500;font-size:1.2rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextMedium.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-medium{font-weight:300;font-size:0.9rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextSmall.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-small{font-weight:300;font-size:0.75rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./ValidationMessage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-validation-message{color:#E34040;margin-top:0.5rem;display:inline-block}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Input.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-input{border:1px solid #d1cdcd;border-radius:5px;padding:0.5rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Multiselect.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-multiselect{cursor:pointer;height:200px;overflow-y:auto;border:1px solid #d1cdcd;border-radius:5px;padding:0.25rem 0}.c-multi-select-option{padding:0.25rem;color:rgba(0,0,0,0.85);display:block;width:100%;text-align:left}.c-multi-select-option--selected{background-color:#5CB5CD;color:#fff}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./RadioButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-radio-button{display:block;width:100%;display:flex;justify-content:center;align-items:center;cursor:pointer;min-height:30px;transition:background-color .2s}.c-radio-button:hover{transition-duration:0s;background-color:rgba(238,238,238,0.5)}.c-radio-button--selected{background-color:#eee}.c-radio-button__input{display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./RadioButtonGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-radio-button-group{width:100%;display:flex;justify-content:space-between}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Select.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-select{border:1px solid #d1cdcd;border-radius:5px;color:rgba(0,0,0,0.85);background:none;height:2.375rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./SearchableMultiselect.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-searchable-multiselect__search{width:100%;border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.c-searchable-multiselect__multi-select{border-top-left-radius:0;border-top-right-radius:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./LoadingSpinner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"@keyframes growAnimation{0%,80%,100%{transform:scale(.5);background:#80888b}20%{transform:scale(1);background:#D0D3D4}}.c-loading-spinner{display:inline-block}.c-loading-spinner__dot{display:inline-block;width:12px;height:12px;background-color:#D0D3D4;border-radius:50%;animation-name:growAnimation;animation-duration:1.75s;animation-iteration-count:infinite}.c-loading-spinner__dot:nth-child(1){animation-delay:0s}.c-loading-spinner__dot:nth-child(2){animation-delay:.23s}.c-loading-spinner__dot:nth-child(3){animation-delay:.46s}.c-loading-spinner__dot:nth-child(4){animation-delay:.69s}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./enums\"));\n__export(require(\"./config\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst convertDegressToRadians = (deg) => deg * (Math.PI / 180);\nconst distanceBetweenLatLngInKm = (latLng1, latLng2) => {\n    const dLat = convertDegressToRadians(latLng2.lat - latLng1.lat);\n    const dLng = convertDegressToRadians(latLng2.lng - latLng1.lng);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        + Math.cos(convertDegressToRadians(latLng1.lat))\n            * Math.cos(convertDegressToRadians(latLng2.lat))\n            * Math.sin(dLng / 2)\n            * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const radiusOfEarthInKm = 6371;\n    return radiusOfEarthInKm * c;\n};\nexports.getNearestRegionFromLatLng = (regions, latLng) => regions && regions.reduce((prevRegion, nextRegion) => (distanceBetweenLatLngInKm(latLng, prevRegion.latLng)\n    < distanceBetweenLatLngInKm(latLng, nextRegion.latLng)\n    ? prevRegion\n    : nextRegion));\n//# sourceMappingURL=get-nearest-region-from-lat-lng.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDataThatContainsSearchTerm = (searchTerm, data) => data && data.filter(({ name }) => (!searchTerm || name.toLowerCase().includes(searchTerm)));\n//# sourceMappingURL=name-search.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst getQueryString = (isVegetarian, isVegan, countryCode) => {\n    const query = [\n        isVegetarian && 'is-vegetarian=true',\n        isVegan && 'is-vegan=true',\n        countryCode && `country-code=${countryCode}`\n    ].filter(Boolean).join('&');\n    const queryString = query && `?${query}`;\n    return queryString;\n};\nconst handleErrors = (resp) => __awaiter(void 0, void 0, void 0, function* () {\n    const result = yield resp.json();\n    if (resp.status !== 200) {\n        throw result;\n    }\n    return result;\n});\nexports.getCurrentSeasonIndex = () => new Date().getUTCMonth();\nexports.getAllSeasons = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_URL}${queryString}`).then(handleErrors);\n};\nexports.getSeasonWithFood = (seasonIndex, countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}/${seasonIndex}${queryString}`).then(handleErrors);\n};\nexports.getAllSeasonsWithFood = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}${queryString}`)\n        .then(handleErrors);\n};\nexports.getSeasonWithRecipes = (seasonIndex, isVegetarian, isVegan, countryCode) => {\n    const queryString = getQueryString(isVegetarian, isVegan, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}/${seasonIndex}${queryString}`).then(handleErrors);\n};\nexports.getAllSeasonsWithRecipes = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}${queryString}`)\n        .then(handleErrors);\n};\nexports.getFoodDetailsData = (foodId, isVegetarian, isVegan, countryCode) => {\n    const queryString = getQueryString(isVegetarian, isVegan, countryCode);\n    return fetch(`${seasonal_shared_models_1.FOOD_DETAILS_URL}/${foodId}${queryString}`)\n        .then(handleErrors);\n};\nexports.getCountries = () => fetch(seasonal_shared_models_1.COUNTRY_URL).then(handleErrors);\n//# sourceMappingURL=retrieve-backend-data.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./diet-type.enum\"));\n__export(require(\"./user-roles.enum\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DIET_TYPE;\n(function (DIET_TYPE) {\n    DIET_TYPE[\"VEGETARIAN\"] = \"VEGETARIAN\";\n    DIET_TYPE[\"VEGAN\"] = \"VEGAN\";\n    DIET_TYPE[\"ALL\"] = \"ALL\";\n})(DIET_TYPE = exports.DIET_TYPE || (exports.DIET_TYPE = {}));\n//# sourceMappingURL=diet-type.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar USER_ROLES;\n(function (USER_ROLES) {\n    USER_ROLES[\"ADMIN\"] = \"admin\";\n    USER_ROLES[\"EDITOR\"] = \"editor\";\n})(USER_ROLES = exports.USER_ROLES || (exports.USER_ROLES = {}));\n//# sourceMappingURL=user-roles.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL\n    || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/v2';\nexports.SEASON_URL = process.env.SEASON_URL || `${BACKEND_URL}/season`;\nexports.FOOD_DETAILS_URL = process.env.FOOD_DETAILS_URL || `${BACKEND_URL}/food`;\nexports.SEASON_WITH_FOOD_URL = process.env.SEASON_WITH_FOOD_URL || `${BACKEND_URL}/season-with-food`;\nexports.SEASON_WITH_RECIPES_URL = process.env.SEASON_WITH_RECIPES_URL || `${BACKEND_URL}/season-with-recipes`;\nexports.COUNTRY_URL = process.env.COUNTRY_URL || `${BACKEND_URL}/country`;\n//# sourceMappingURL=index.js.map","const ADMIN_BACKEND_URL = process.env.REACT_APP_ADMIN_BACKEND_URL\n  || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/admin';\n\nexport const LOGIN_URL =\n  process.env.REACT_APP_LOGIN_URL || `${ADMIN_BACKEND_URL}/login`;\n\nexport const COUNTRY_URL =\n  process.env.REACT_APP_COUNTRY_URL || `${ADMIN_BACKEND_URL}/country`;\n\nexport const COUNTRY_FOOD_NAME_MAP_URL =\n  process.env.REACT_APP_COUNTRY_FOOD_NAME_MAP_URL || `${ADMIN_BACKEND_URL}/country-food-name-map`;\n\nexport const REGION_FOOD_SEASON_MAP_URL =\n  process.env.REACT_APP_REGION_FOOD_SEASON_MAP_URL || `${ADMIN_BACKEND_URL}/region-food-season-map`;\n\nexport const COUNTRY_RECIPE_NAME_MAP_URL =\n  process.env.REACT_APP_COUNTRY_RECIPE_NAME_MAP_URL || `${ADMIN_BACKEND_URL}/country-recipe-name-map`;\n\nexport const FOOD_URL =\n  process.env.REACT_APP_FOOD_URL || `${ADMIN_BACKEND_URL}/food`;\n\nexport const RECIPE_URL =\n  process.env.REACT_APP_RECIPE_URL || `${ADMIN_BACKEND_URL}/recipe`;\n\nexport const REGION_URL =\n  process.env.REACT_APP_REGION_URL || `${ADMIN_BACKEND_URL}/region`;\n\nexport const USER_URL =\n  process.env.REACT_APP_USER_URL || `${ADMIN_BACKEND_URL}/user`;\n","export enum ROUTES {\n  CREATE = 'create',\n  COUNTRY = 'country',\n  COUNTRY_FOOD_NAME_MAP = 'country-food-name-map',\n  COUNTRY_RECIPE_NAME_MAP = 'country-recipe-name-map',\n  EDIT = 'edit',\n  FOOD = 'food',\n  HOME = 'home',\n  LOGIN = '',\n  RECIPE = 'recipe',\n  REGION = 'region',\n  REGION_FOOD_SEASON_MAP = 'region-food-season-map',\n  USER = 'user'\n}\n","export enum FORM_BUTTON_TEXT {\n  CREATE = 'Create',\n  UPDATE = 'Update'\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Checkbox,\n  Input,\n  ISelectOption,\n  Multiselect,\n  SearchableMultiselect,\n  Select,\n  IValidation,\n  LoadingSpinner,\n  PrimaryButton,\n  TextMedium,\n  ValidationMessage\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './DataForm.scss';\nimport { FORM_BUTTON_TEXT } from '../../consts';\n\nexport interface IFormField {\n  name?: string;\n  options?: ISelectOption[];\n  type: 'text' | 'number' | 'password' | 'checkbox' | 'select'\n    | 'multiselect'| 'searchable-multiselect';\n  validation?: IValidation[];\n}\nexport type IDataFormConfigProps<T> = { [key in keyof T & string]?: IFormField };\nexport interface IDateFormProps<T> {\n  item: Partial<T>;\n  sendData?: (data: T) => Promise<T | void>;\n  formConfig: IDataFormConfigProps<T> | null;\n  processItem?: (\n    item: Partial<T>,\n    previousItem: Partial<T> | null\n  ) => Partial<T>;\n  buttonText?: string;\n  goBackOnUpdate?: boolean;\n}\n\nexport function DataForm<T>({\n  item,\n  sendData,\n  formConfig,\n  processItem,\n  buttonText = FORM_BUTTON_TEXT.UPDATE,\n  goBackOnUpdate = true\n}: IDateFormProps<T>) {\n  const [itemState, setItemState] = useState<Partial<T>>(item);\n\n  useEffect(() => {\n    // Select first item from select if not set\n    if (formConfig && item) {\n      const selectFields = Object.entries(formConfig)\n        .filter(([, field]) => (field as IFormField).type === 'select');\n      const newItem = Object.entries(item).reduce((builtItem, [key, value]) => {\n        const matchingField = selectFields\n          .find(([fieldKey]) => fieldKey === key);\n        const selectOptions = matchingField\n          && (matchingField[1] as IFormField).options!.map((option) => option.value);\n        return {\n          ...builtItem,\n          [key]: selectOptions && !selectOptions.includes(value as string | number)\n            ? selectOptions[0]\n            : value\n        };\n      }, {} as T);\n      setItemState(newItem);\n    }\n  }, [item, formConfig]);\n\n  const [errorState, setErrorState] = useState<string | null>(null);\n  const [validationState, setValidationState] = useState<\n    { [key in keyof T]?: string[] }\n  >({});\n  const [isLoadingState, setIsLoadingState] = useState<boolean>(false);\n\n  const updateItem = (\n    newItem: Partial<T>\n  ) => {\n    if (processItem) {\n      const processedItem = processItem(newItem, itemState);\n      setItemState(processedItem);\n    } else {\n      setItemState(newItem);\n    }\n  };\n\n  const submit = async () => {\n    try {\n      setIsLoadingState(true);\n      const updatedItem = await sendData!(itemState as T);\n      if (updatedItem) {\n        updateItem(updatedItem);\n        setIsLoadingState(false);\n        if (goBackOnUpdate) {\n          window.history.back();\n        }\n      }\n    } catch (error) {\n      setIsLoadingState(false);\n      setErrorState(error.message);\n    }\n  };\n\n  const updateField = (\n    name: keyof T,\n    value: string | string[] | number | boolean,\n    validation: IValidation[] | undefined\n  ) => {\n    if (validation) {\n      const errors = validation.map((validationFunction) =>\n        validationFunction(value)\n      );\n      setValidationState({\n        ...validationState,\n        name: errors\n      });\n    }\n    const newItem = {\n      ...itemState,\n      [name]: value\n    };\n    updateItem(newItem);\n  };\n\n  return (\n    <div className='c-data-form'>\n      <div>\n        {\n          formConfig && Object.entries(formConfig).map(([key, formField]) => {\n            const { options, type, validation } = formField as IFormField;\n            const prop = key as keyof T;\n            const value = itemState[prop] as any;\n            const placeholder = key[0].toUpperCase()\n              + key.replace( /([A-Z])/g, ' $1').slice(1);\n            const inputs = {\n              className: 'c-data-form__input',\n              onChange: (\n                changedValue: number | string | string[] | boolean\n              ) => updateField(prop, changedValue, validation),\n              options,\n              placeholder,\n              type,\n              value\n            };\n            const validationErrors = validationState[prop];\n            return (\n              <label key={key} className='c-data-form__field'>\n                <TextMedium className='c-data-form__label'>{placeholder}</TextMedium>\n                {\n                  (() => {\n                    switch (type) {\n                      case 'number':\n                      case 'text':\n                      case 'password':\n                        return <Input {...{\n                          ...inputs,\n                          type: inputs.type as 'text' | 'number' }\n                        } />;\n                      case 'checkbox':\n                        return <Checkbox {...inputs} />;\n                      case 'multiselect':\n                        return <Multiselect {...{\n                          ...inputs,\n                          options: inputs.options!\n                        } as any} />;\n                      case 'searchable-multiselect':\n                        return <SearchableMultiselect {...{\n                          ...inputs,\n                          options: inputs.options!\n                        } as any} />;\n                      case 'select':\n                        return <Select {...{\n                          ...inputs,\n                          options: inputs.options!\n                        }} />;\n                    }\n                  })()\n                }\n                <div>\n                  {\n                    validationErrors\n                    && validationErrors[0]\n                    && <ValidationMessage>{validationErrors[0]}</ValidationMessage>\n                  }\n                </div>\n              </label>\n            );\n          })\n        }\n      </div>\n      <PrimaryButton className='c-data-form__submit-btn' onClick={submit}>\n        {buttonText}\n      </PrimaryButton>\n      {\n        errorState && <ValidationMessage>{errorState}</ValidationMessage>\n      }\n      {\n        isLoadingState\n        && <div className='c-data-form__loading-spinner'>\n            <LoadingSpinner />\n          </div>\n      }\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype ICountryFormConfigProps = IDataFormConfigProps<ICountry>;\n\nconst countryFormConfig: ICountryFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountry: FC<IGetAuthorizedBackendDataProps<ICountry>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => (\n  <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={countryFormConfig}\n    buttonText={buttonText} />\n);\n","export const setAccessToken = (token: string) => {\n  sessionStorage.accessToken = token;\n};\n\nexport const getAccessTokenHeaders = (): HeadersInit => {\n  const token = sessionStorage.accessToken;\n  return token\n  ? {\n    Authorization: `Bearer ${token}`\n  }\n  : {};\n};\n","import { getAccessTokenHeaders } from './access-token';\n\nexport const makeAuthorizedRequest = async <T>(\n  url: string,\n  requestOptions?: RequestInit\n): Promise<T> => {\n  const response = await fetch(\n    url,\n    {\n      ...requestOptions,\n      headers: {\n        ...(requestOptions && requestOptions.headers),\n        'Content-Type': 'application/json',\n        ...getAccessTokenHeaders()\n      }\n    }\n  );\n  if (response.status === 401) {\n    window.location.href = process.env.PUBLIC_URL;\n    throw new Error('Unauthorized');\n  }\n  const result = await response.json();\n  if (result.error) {\n    throw new Error(result.error);\n  }\n  return result;\n};\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\n\nexport const createCountryFoodNameMap = async (\n  country: ICountryFoodNameMap\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(COUNTRY_FOOD_NAME_MAP_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\n\nexport const createCountryRecipeNameMap = async (\n  country: ICountryRecipeNameMap\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(COUNTRY_RECIPE_NAME_MAP_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_URL } from '../config';\n\nexport const createCountry = async (country: ICountry): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(COUNTRY_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { FOOD_URL } from '../config';\n\nexport const createFood = async (food: IFood): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(FOOD_URL, {\n    body: JSON.stringify(food),\n    method: 'POST'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { RECIPE_URL } from '../config';\n\nexport const createRecipe = async (recipe: IRecipe): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(RECIPE_URL, {\n    body: JSON.stringify(recipe),\n    method: 'POST'\n  });\n","import { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_FOOD_SEASON_MAP_URL } from '../config';\n\nexport const createRegionFoodSeasonMap = async (\n  regionFoodSeasonMap: IRegionFoodSeasonMap\n): Promise<IRegionFoodSeasonMap> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap>(REGION_FOOD_SEASON_MAP_URL, {\n    body: JSON.stringify(regionFoodSeasonMap),\n    method: 'POST'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_URL } from '../config';\n\nexport const createRegion = async (region: IDbRegion): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(REGION_URL, {\n    body: JSON.stringify(region),\n    method: 'POST'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { USER_URL } from '../config';\n\nexport const createUser = async (user: IUser): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(USER_URL, {\n    body: JSON.stringify(user),\n    method: 'POST'\n  });\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountryToFoodNameMap = async (\n  id: string\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(`${COUNTRY_FOOD_NAME_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountryToRecipeNameMap = async (\n  id: string\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(`${COUNTRY_RECIPE_NAME_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountry = async (id: string): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(`${COUNTRY_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteFood = async (id: string): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(`${FOOD_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRecipe = async (id: string): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(`${RECIPE_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_FOOD_SEASON_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRegionFoodSeasonMap = async (\n  id: string\n): Promise<IRegionFoodSeasonMap> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap>(`${REGION_FOOD_SEASON_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRegion = async (id: string): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(`${REGION_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteUser = async (id: string): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(`${USER_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountries = async (): Promise<ICountry[]> =>\n  makeAuthorizedRequest<ICountry[]>(COUNTRY_URL);\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountryFoodNameMap = async (): Promise<ICountryFoodNameMap[]> =>\n  makeAuthorizedRequest<ICountryFoodNameMap[]>(COUNTRY_FOOD_NAME_MAP_URL);\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountryRecipeNameMap = async (): Promise<ICountryRecipeNameMap[]> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap[]>(COUNTRY_RECIPE_NAME_MAP_URL);\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllFood = async (): Promise<IFood[]> =>\n  makeAuthorizedRequest<IFood[]>(FOOD_URL);\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllRecipes = async (): Promise<IRecipe[]> =>\n  makeAuthorizedRequest<IRecipe[]>(RECIPE_URL);\n","import { REGION_FOOD_SEASON_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport const getAllRegionFoodSeasonMap = async (): Promise<IRegionFoodSeasonMap[]> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap[]>(\n    REGION_FOOD_SEASON_MAP_URL\n  );\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllRegions = async (): Promise<IDbRegion[]> =>\n  makeAuthorizedRequest<IDbRegion[]>(REGION_URL);\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllUsers = async (): Promise<IUser[]> =>\n  makeAuthorizedRequest<IUser[]>(USER_URL);\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleCountry = async (id: string): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(`${COUNTRY_URL}/${id}`);\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleCountryFoodNameMap = async (id: string): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(`${COUNTRY_FOOD_NAME_MAP_URL}/${id}`);\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleCountryRecipeNameMap = async (id: string): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(`${COUNTRY_RECIPE_NAME_MAP_URL}/${id}`);\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleFood = async (id: string): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(`${FOOD_URL}/${id}`);\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleRecipe = async (id: string): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(`${RECIPE_URL}/${id}`);\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleRegion = async (id: string): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(`${REGION_URL}/${id}`);\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getSingleUser = async (id: string): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(`${USER_URL}/${id}`);\n","import { LOGIN_URL } from '../config';\nimport { setAccessToken } from './access-token';\n\nexport const loginRequest = async (\n  username: string, password: string\n): Promise<void> => {\n  const response = await fetch(LOGIN_URL, {\n    body: JSON.stringify({\n      password,\n      username\n    }),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const result = await response.json();\n  if (result.error) {\n    throw new Error(result.error);\n  }\n  setAccessToken(result.token);\n  return;\n};\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_URL } from '../config';\n\nexport const updateCountry = async (country: ICountry): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(COUNTRY_URL, {\n    body: JSON.stringify(country),\n    method: 'PATCH'\n  });\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\n\nexport const updateCountryFoodNameMap = async (\n  countryFoodNameMap: ICountryFoodNameMap\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(COUNTRY_FOOD_NAME_MAP_URL, {\n    body: JSON.stringify(countryFoodNameMap),\n    method: 'PATCH'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\n\nexport const updateCountryRecipeNameMap = async (\n  countryRecipeNameMap: ICountryRecipeNameMap\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(COUNTRY_RECIPE_NAME_MAP_URL, {\n    body: JSON.stringify(countryRecipeNameMap),\n    method: 'PATCH'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { FOOD_URL } from '../config';\n\nexport const updateFood = async (food: IFood): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(FOOD_URL, {\n    body: JSON.stringify(food),\n    method: 'PATCH'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const updateRecipe = async (recipe: IRecipe): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(RECIPE_URL, {\n    body: JSON.stringify(recipe),\n    method: 'PATCH'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_URL } from '../config';\n\nexport const updateRegion = async (region: IDbRegion): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(REGION_URL, {\n    body: JSON.stringify(region),\n    method: 'PATCH'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { USER_URL } from '../config';\n\nexport const updateUser = async (user: IUser): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(USER_URL, {\n    body: JSON.stringify(user),\n    method: 'PATCH'\n  });\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryRecipeNameMap, ICountry, IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { getAllCountries, getAllRecipes } from '../../services';\n\ntype ICountryRecipeNameMapFormConfigProps =\n  IDataFormConfigProps<ICountryRecipeNameMap>;\n\nconst initialCountryRecipeNameMapFormConfig: ICountryRecipeNameMapFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountryRecipeNameMap: FC<\n  IGetAuthorizedBackendDataProps<ICountryRecipeNameMap>\n> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [\n    config,\n    setConfig\n  ] = useState<ICountryRecipeNameMapFormConfigProps | null>(null);\n\n  const updateConfigWithDropdowns = (\n    countries: ICountry[],\n    recipes: IRecipe[]\n  ) => {\n    const countryOptions = countries.map((country) => ({\n      label: country.name,\n      value: country.id\n    }));\n    const recipeOptions = recipes.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialCountryRecipeNameMapFormConfig,\n      countryId: {\n        options: countryOptions,\n        type: 'select'\n      },\n      recipeId: {\n        options: recipeOptions,\n        type: 'select'\n      }\n    });\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllCountries(),\n      getAllRecipes()\n    ]).then(([countries, recipes]) =>\n      updateConfigWithDropdowns(countries, recipes)\n    );\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllFood } from '../../services';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IFoodFormConfigProps = IDataFormConfigProps<IFood>;\n\nconst initialFoodFormConfig: IFoodFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  imageUrlSmall: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  description: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormFood: FC<IGetAuthorizedBackendDataProps<IFood>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [config, setConfig] = useState<IFoodFormConfigProps | null>(null);\n\n  const updateConfigWithFoodDropdowns = (food: IFood[]) => {\n    const options = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialFoodFormConfig,\n      substituteFoodIds: {\n        options,\n        type: 'searchable-multiselect'\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllFood()\n      .then((food) => updateConfigWithFoodDropdowns(food));\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { getAllFood } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IRecipe, IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { DataForm, IDataFormConfigProps } from '../DataForm/DataForm';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IRecipeFormConfigProps = IDataFormConfigProps<IRecipe>;\n\nconst initialRecipeFormConfig: IRecipeFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  linkUrl: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  imageUrlSmall: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  isVegan: {\n    type: 'checkbox'\n  },\n\n  isVegetarian: {\n    type: 'checkbox'\n  }\n};\n\nexport const BaseFormRecipe: FC<IGetAuthorizedBackendDataProps<IRecipe>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [config, setConfig] = useState<IRecipeFormConfigProps | null>(null);\n\n  const updateConfigWithFoodDropdowns = (food: IFood[]) => {\n    const options = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialRecipeFormConfig,\n      primaryFoodInRecipeIds: {\n        options,\n        type: 'searchable-multiselect'\n      },\n      secondaryFoodInRecipeIds: {\n        options,\n        type: 'searchable-multiselect'\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllFood()\n      .then((food) => updateConfigWithFoodDropdowns(food));\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllCountries } from '../../services';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport type IDbRegionFormConfigProps = IDataFormConfigProps<IDbRegion>;\n\nconst initialRegionFormConfig: IDbRegionFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  isDisabled: {\n    type: 'checkbox'\n  },\n\n  lat: {\n    type: 'number',\n    validation: [requiredValidation]\n  },\n  lng: {\n    type: 'number',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormRegion: FC<IGetAuthorizedBackendDataProps<IDbRegion>> = ({\n  items,\n  updateMethod,\n  buttonText,\n  additionalConfig\n}) => {\n  const [config, setConfig] = useState<IDbRegionFormConfigProps | null>(null);\n\n  useEffect(() => {\n    getAllCountries()\n      .then((countries) => {\n        const options = countries.map((country) => ({\n          label: country.name,\n          value: country.id\n        }));\n        setConfig({\n          ...additionalConfig,\n          ...initialRegionFormConfig,\n          countryId: {\n            options,\n            type: 'select',\n            validation: [requiredValidation]\n          }\n        });\n      });\n  }, [additionalConfig]);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllSeasons } from '@chrisb-dev/seasonal-shared-frontend-utilities';\nimport {\n  getAllFood,\n  getAllRegions,\n  deleteRegionFoodSeasonMap,\n  createRegionFoodSeasonMap,\n  getAllRegionFoodSeasonMap\n} from '../../services';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport interface IRegionFoodSeasonMapForm {\n  regionId: string;\n  foodId: string;\n  seasonIds: string[];\n}\n\ntype IRegionFoodSeasonMapFormConfigProps =\n  IDataFormConfigProps<IRegionFoodSeasonMapForm>;\n\nexport const BaseFormRegionFoodSeasonMap: FC<{}> = () => {\n  const [itemData, setItemData] =\n    useState<Partial<IRegionFoodSeasonMapForm | null>>(null);\n  const [config, setConfig] =\n    useState<IRegionFoodSeasonMapFormConfigProps | null>(null);\n  const [allRegionFoodSeasonMaps, setAllRegionFoodSeasonMaps] =\n    useState<IRegionFoodSeasonMap[] | null>(null);\n\n  const updateRegionFoodSeasonMap = async (\n    form: IRegionFoodSeasonMapForm\n  ) => {\n    const existingItemsForRegionAndSeason =\n      allRegionFoodSeasonMaps!\n        .filter((item) =>\n          item.regionId === form.regionId\n          && item.foodId === form.foodId\n        ).map((item) => item.id);\n    const generateItems = (seasonIds: string[]): IRegionFoodSeasonMap[] =>\n      seasonIds.map((seasonId) => ({\n        foodId: form.foodId,\n        regionId: form.regionId,\n        seasonId\n      }) as IRegionFoodSeasonMap);\n    const toCreate = generateItems(form.seasonIds);\n\n    for (const id of existingItemsForRegionAndSeason) {\n      await deleteRegionFoodSeasonMap(id);\n    }\n    for (const item of toCreate) {\n      await createRegionFoodSeasonMap(item);\n    }\n    const allRegionFoodSeasonMap = await getAllRegionFoodSeasonMap();\n    setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n    return form;\n  };\n\n  const updateSeasonIds = (\n    item: Partial<IRegionFoodSeasonMap>,\n    previousItem: Partial<IRegionFoodSeasonMap> | null,\n    allRegionFoodSeasonMapsResult: IRegionFoodSeasonMap[] | null\n  ) => {\n    if (\n      previousItem === null\n      || item.foodId !== previousItem.foodId\n      || item.regionId !== previousItem.regionId\n    ) {\n      const seasonIds = allRegionFoodSeasonMapsResult\n        ? allRegionFoodSeasonMapsResult.filter((regionFoodSeason) =>\n          regionFoodSeason.regionId === item.regionId\n          && regionFoodSeason.foodId === item.foodId\n        ).map((regionFoodSeason) => regionFoodSeason.seasonId)\n        : undefined;\n      return {\n        ...item,\n        seasonIds\n      };\n    }\n    return item;\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllRegions(),\n      getAllFood(),\n      getAllSeasons(),\n      getAllRegionFoodSeasonMap()\n    ]).then(([\n      regions, food, seasons,\n      allRegionFoodSeasonMap\n    ]) => {\n      setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n      const regionOptions = regions.map((region) => ({\n        label: region.name,\n        value: region.code\n      }));\n      const foodOptions = food.map((foodItem) => ({\n        label: foodItem.name,\n        value: foodItem.id\n      }));\n      const seasonOptions = seasons.map((season) => ({\n        label: season.name,\n        value: season.id\n      }));\n      setItemData((item) => updateSeasonIds({\n        ...item,\n        regionId: regionOptions[0].value,\n\n        foodId: foodOptions[0].value\n      }, null, allRegionFoodSeasonMap));\n      setConfig((currentConfig) => ({\n        ...currentConfig,\n        regionId: {\n          options: regionOptions,\n          type: 'select'\n        },\n\n        foodId: {\n          options: foodOptions,\n          type: 'select'\n        },\n\n        seasonIds: {\n          options: seasonOptions,\n          type: 'multiselect'\n        }\n      }));\n    });\n  }, [setAllRegionFoodSeasonMaps]);\n\n  return itemData && <DataForm item={itemData}\n    sendData={updateRegionFoodSeasonMap}\n    formConfig={config}\n    processItem={(item, previousItem) => updateSeasonIds(\n      item, previousItem, allRegionFoodSeasonMaps\n    )}\n    buttonText='Create'\n    goBackOnUpdate={false} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllSeasons } from '@chrisb-dev/seasonal-shared-frontend-utilities';\nimport {\n  getAllFood,\n  getAllRegions,\n  deleteRegionFoodSeasonMap,\n  createRegionFoodSeasonMap,\n  getAllRegionFoodSeasonMap\n} from '../../services';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport interface IRegionSeasonFoodMapForm {\n  regionId: string;\n  seasonId: string;\n  foodIds: string[];\n}\n\ntype IRegionSeasonFoodMapFormConfigProps =\n  IDataFormConfigProps<IRegionSeasonFoodMapForm>;\n\nexport const BaseFormRegionSeasonFoodMap: FC<{}> = () => {\n  const [itemData, setItemData] =\n    useState<Partial<IRegionSeasonFoodMapForm | null>>(null);\n  const [config, setConfig] =\n    useState<IRegionSeasonFoodMapFormConfigProps | null>(null);\n  const [allRegionFoodSeasonMaps, setAllRegionFoodSeasonMaps] =\n    useState<IRegionFoodSeasonMap[] | null>(null);\n\n  const updateRegionFoodSeasonMap = async (\n    form: IRegionSeasonFoodMapForm\n  ) => {\n    const existingItemsForRegionAndSeason =\n      allRegionFoodSeasonMaps!\n        .filter((item) =>\n          item.regionId === form.regionId\n          && item.seasonId === form.seasonId\n        ).map((item) => item.id);\n    const generateItems = (foodIds: string[]): IRegionFoodSeasonMap[] =>\n    foodIds.map((foodId) => ({\n        foodId,\n        regionId: form.regionId,\n        seasonId: form.seasonId\n      }) as IRegionFoodSeasonMap);\n    const toCreate = generateItems(form.foodIds);\n\n    for (const id of existingItemsForRegionAndSeason) {\n      await deleteRegionFoodSeasonMap(id);\n    }\n    for (const item of toCreate) {\n      await createRegionFoodSeasonMap(item);\n    }\n    const allRegionFoodSeasonMap = await getAllRegionFoodSeasonMap();\n    setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n    return form;\n  };\n\n  const updateFoodIds = (\n    item: Partial<IRegionFoodSeasonMap>,\n    previousItem: Partial<IRegionFoodSeasonMap> | null,\n    allRegionFoodSeasonMapsResult: IRegionFoodSeasonMap[] | null\n  ) => {\n    if (\n      previousItem === null\n      || item.seasonId !== previousItem.seasonId\n      || item.regionId !== previousItem.regionId\n    ) {\n      const foodIds = allRegionFoodSeasonMapsResult\n        ? allRegionFoodSeasonMapsResult.filter((regionFoodSeason) =>\n          regionFoodSeason.regionId === item.regionId\n          && regionFoodSeason.seasonId === item.seasonId\n        ).map((regionFoodSeason) => regionFoodSeason.foodId)\n        : undefined;\n      return {\n        ...item,\n        foodIds\n      };\n    }\n    return item;\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllRegions(),\n      getAllFood(),\n      getAllSeasons(),\n      getAllRegionFoodSeasonMap()\n    ]).then(([\n      regions, food, seasons,\n      allRegionFoodSeasonMap\n    ]) => {\n      setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n      const regionOptions = regions.map((region) => ({\n        label: region.name,\n        value: region.code\n      }));\n      const foodOptions = food.map((foodItem) => ({\n        label: foodItem.name,\n        value: foodItem.id\n      }));\n      const seasonOptions = seasons.map((season) => ({\n        label: season.name,\n        value: season.id\n      }));\n      setItemData((data) => updateFoodIds({\n        ...data,\n        regionId: regionOptions[0].value,\n\n        seasonId: seasonOptions[0].value\n      }, null, allRegionFoodSeasonMap));\n      setConfig((currentConfig) => ({\n        ...currentConfig,\n        regionId: {\n          options: regionOptions,\n          type: 'select'\n        },\n\n        seasonId: {\n          options: seasonOptions,\n          type: 'select'\n        },\n\n        foodIds: {\n          options: foodOptions,\n          type: 'searchable-multiselect'\n        }\n      }));\n    });\n  }, [setAllRegionFoodSeasonMaps]);\n\n  return itemData && <DataForm item={itemData}\n    sendData={updateRegionFoodSeasonMap}\n    formConfig={config}\n    processItem={(item, previousItem) => updateFoodIds(\n      item, previousItem, allRegionFoodSeasonMaps\n    )}\n    buttonText='Create'\n    goBackOnUpdate={false} />;\n};\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IUser, USER_ROLES } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IUserFormConfigProps = IDataFormConfigProps<IUser>;\n\nconst userFormConfig: IUserFormConfigProps = {\n  username: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  password: {\n    type: 'password',\n    validation: [requiredValidation]\n  },\n\n  roles: {\n    options: Object.values(USER_ROLES).map((role) => ({\n      label: role,\n      value: role\n    })),\n    type: 'multiselect'\n  }\n};\n\nexport const BaseFormUser: FC<IGetAuthorizedBackendDataProps<IUser>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => (\n  <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={userFormConfig}\n    buttonText={buttonText} />\n);\n","import React, { FC, useEffect, useState } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryFoodNameMap, ICountry, IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { getAllCountries, getAllFood } from '../../services';\n\ntype ICountryFoodNameMapFormConfigProps =\n  IDataFormConfigProps<ICountryFoodNameMap>;\n\nconst initialCountryFoodNameMapFormConfig: ICountryFoodNameMapFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountryFoodNameMap: FC<\n  IGetAuthorizedBackendDataProps<ICountryFoodNameMap>\n> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [\n    config,\n    setConfig\n  ] = useState<ICountryFoodNameMapFormConfigProps | null>(null);\n\n  const updateConfigWithDropdowns = (\n    countries: ICountry[],\n    food: IFood[]\n  ) => {\n    const countryOptions = countries.map((country) => ({\n      label: country.name,\n      value: country.id\n    }));\n    const foodOptions = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialCountryFoodNameMapFormConfig,\n      countryId: {\n        options: countryOptions,\n        type: 'select'\n      },\n      foodId: {\n        options: foodOptions,\n        type: 'select'\n      }\n    });\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllCountries(),\n      getAllFood()\n    ]).then(([countries, food]) =>\n      updateConfigWithDropdowns(countries, food)\n    );\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, Fragment } from 'react';\nimport './LayoutWithTitle.scss';\nimport { TextHeadingMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\n\ninterface ILayoutWithTitle {\n  title?: string;\n}\n\nexport const LayoutWithTitle: FC<ILayoutWithTitle> = ({\n  children,\n  title\n}) => (\n  <Fragment>\n    {\n      title\n      && <TextHeadingMedium className='c-form-layout__title'>\n        {title}\n      </TextHeadingMedium>\n    }\n    { children }\n  </Fragment>\n);\n","import React, { FC } from 'react';\nimport './MainPageLayout.scss';\n\nexport const MainPageLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-main-page-layout'>\n    { children }\n  </div>\n);\n","import React, { FC } from 'react';\nimport './ModalLayout.scss';\n\nexport const ModalLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-modal-layout'>\n    { children }\n  </div>\n);\n","import React, { FC } from 'react';\nimport { createCountryFoodNameMap } from '../../services';\nimport { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport {\n  BaseFormCountryFoodNameMap\n} from '../BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryFoodNameMapItem = (): ICountryFoodNameMap => ({\n  countryId: '',\n  foodId: '',\n  name: ''\n} as ICountryFoodNameMap);\n\nexport const CreateCountryFoodNameMapForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country Food Name Map'>\n    <BaseFormCountryFoodNameMap\n        items={createEmptyCountryFoodNameMapItem()}\n        updateMethod={createCountryFoodNameMap}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createCountry } from '../../services';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormCountry } from '../BaseFormCountry/BaseFormCountry';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryItem = (): ICountry => ({\n  name: ''\n} as ICountry);\n\nexport const CreateCountryForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country'>\n    <BaseFormCountry\n      items={createEmptyCountryItem()}\n      updateMethod={createCountry}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createCountryRecipeNameMap } from '../../services';\nimport { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport {\n  BaseFormCountryRecipeNameMap\n} from '../BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryRecipeNameMapItem = (): ICountryRecipeNameMap => ({\n  countryId: '',\n  name: '',\n  recipeId: ''\n} as ICountryRecipeNameMap);\n\nexport const CreateCountryRecipeNameMapForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country Recipe Name Map'>\n    <BaseFormCountryRecipeNameMap\n      items={createEmptyCountryRecipeNameMapItem()}\n      updateMethod={createCountryRecipeNameMap}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createFood } from '../../services';\nimport { BaseFormFood } from '../BaseFormFood/BaseFormFood';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyFoodItem = (): IFood => ({\n  description: '',\n  imageUrlSmall: '',\n  name: '',\n  substituteFoodIds: [] as string[]\n} as IFood);\n\nexport const CreateFoodForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Food'>\n    <BaseFormFood items={createEmptyFoodItem()}\n      updateMethod={createFood}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createRecipe } from '../../services';\nimport { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormRecipe } from '../BaseFormRecipe/BaseFormRecipe';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyRecipeItem = (): IRecipe => ({\n  imageUrlSmall: '',\n  isVegan: false,\n  isVegetarian: false,\n  linkUrl: '',\n  name: '',\n  primaryFoodInRecipeIds: [] as string[],\n  secondaryFoodInRecipeIds: [] as string[]\n} as IRecipe);\n\nexport const CreateRecipeForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Recipe'>\n    <BaseFormRecipe items={createEmptyRecipeItem()}\n        updateMethod={createRecipe}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createRegion } from '../../services';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormRegion, IDbRegionFormConfigProps } from '../BaseFormRegion/BaseFormRegion';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst createEmptyRegionItem = (): IDbRegion => ({\n  code: '',\n  countryId: undefined,\n  isDisabled: false,\n  lat: 0,\n  lng: 0,\n  name: ''\n} as IDbRegion);\n\nconst createOnlyFields: IDbRegionFormConfigProps = {\n  code: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const CreateRegionForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Region'>\n    <BaseFormRegion items={createEmptyRegionItem()}\n      updateMethod={createRegion}\n      buttonText={FORM_BUTTON_TEXT.CREATE}\n      additionalConfig={createOnlyFields} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createUser } from '../../services';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormUser } from '../BaseFormUser/BaseFormUser';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyUserItem = (): IUser => ({\n  password: '',\n  roles: [] as string[],\n  username: ''\n} as IUser);\n\nexport const CreateUserForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create User'>\n    <BaseFormUser items={createEmptyUserItem()}\n        updateMethod={createUser}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps } from '../DataForm/DataForm';\nimport { LoadingSpinner } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './GetAuthorizedBackendData.css';\n\nexport interface IGetAuthorizedBackendDataProps<T> {\n  items: T;\n  reload?: () => void;\n  updateMethod?: (item: T) => Promise<T>;\n  buttonText?: string;\n  additionalConfig?: IDataFormConfigProps<T>;\n}\n\ninterface IGetAuthorizedBackendDataState<T> {\n  isLoading: boolean;\n  items: T | null;\n  error: string | null;\n}\n\nfunction InnerAuthorizedComponent<T>({\n  InnerComponent,\n  requestDataMethod,\n  updateMethod,\n  buttonText,\n  additionalConfig\n}: {\n  InnerComponent: FC<IGetAuthorizedBackendDataProps<T>>,\n  requestDataMethod: () => Promise<T>,\n  updateMethod?: (item: T) => Promise<T>,\n  buttonText?: string,\n  additionalConfig?: IDataFormConfigProps<T>\n}) {\n  const [state, setState] = useState<IGetAuthorizedBackendDataState<T>>({\n    error: null,\n    isLoading: true,\n    items: null\n  });\n\n  const requestNewData = () => {\n    requestDataMethod()\n      .then((items) => setState({\n        error: null,\n        isLoading: false,\n        items\n      })).catch((error) => setState({\n        error: error.message,\n        isLoading: false,\n        items: null\n      }));\n  };\n\n  useEffect(requestNewData, []);\n\n  return (\n    <div>\n      {\n        state.isLoading\n          ? <div className='c-get-authorized-backend-data__loading'>\n            <LoadingSpinner />\n          </div>\n          : <div>\n            {\n              !state.error && state.items\n                ? <InnerComponent\n                    items={state.items}\n                    reload={requestNewData}\n                    updateMethod={updateMethod}\n                    buttonText={buttonText}\n                    additionalConfig={additionalConfig}\n                  />\n                : <div>{state.error}</div>\n            }\n          </div>\n      }\n    </div>\n  );\n}\n\nexport function GetAuthorizedBackendData<T>(\n  InnerComponent: FC<IGetAuthorizedBackendDataProps<T>>,\n  requestDataMethod: () => Promise<T>,\n  updateMethod?: (item: T) => Promise<T>,\n  buttonText?: string,\n  additionalConfig?: IDataFormConfigProps<T>\n) {\n  return () =>\n    <InnerAuthorizedComponent\n      InnerComponent={InnerComponent}\n      requestDataMethod={requestDataMethod}\n      updateMethod={updateMethod}\n      buttonText={buttonText}\n      additionalConfig={additionalConfig} />;\n}\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleCountryFoodNameMap, updateCountryFoodNameMap } from '../../services';\nimport { BaseFormCountryFoodNameMap } from '../BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryFoodNameMapForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<ICountryFoodNameMap>(\n    BaseFormCountryFoodNameMap,\n    () => {\n      return getSingleCountryFoodNameMap(id as string);\n    },\n    updateCountryFoodNameMap\n  );\n  return (\n    <LayoutWithTitle title='Edit Country Food Name Map'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleCountry, updateCountry } from '../../services';\nimport { BaseFormCountry } from '../BaseFormCountry/BaseFormCountry';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<ICountry>(\n    BaseFormCountry,\n    () => {\n      return getSingleCountry(id as string);\n    },\n    updateCountry\n  );\n  return (\n    <LayoutWithTitle title='Edit Country'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleCountryRecipeNameMap, updateCountryRecipeNameMap } from '../../services';\nimport { BaseFormCountryRecipeNameMap } from '../BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryRecipeNameMapForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<ICountryRecipeNameMap>(\n    BaseFormCountryRecipeNameMap,\n    () => {\n      return getSingleCountryRecipeNameMap(id as string);\n    },\n    updateCountryRecipeNameMap\n  );\n  return (\n    <LayoutWithTitle title='Edit Country Recipe Name Map'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleFood, updateFood } from '../../services';\nimport { BaseFormFood } from '../BaseFormFood/BaseFormFood';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditFoodForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<IFood>(\n    BaseFormFood,\n    () => {\n      return getSingleFood(id as string);\n    },\n    updateFood\n  );\n  return (\n    <LayoutWithTitle title='Edit Food'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport { getSingleRecipe, updateRecipe } from '../../services';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { BaseFormRecipe } from '../BaseFormRecipe/BaseFormRecipe';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditRecipeForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<IRecipe>(\n    BaseFormRecipe,\n    () => {\n      return getSingleRecipe(id as string);\n    },\n    updateRecipe\n  );\n  return (\n    <LayoutWithTitle title='Edit Recipe'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { BaseFormRegionFoodSeasonMap } from '../BaseFormRegionFoodSeasonMap/BaseFormRegionFoodSeasonMap';\nimport { BaseFormRegionSeasonFoodMap } from '../BaseFormRegionSeasonFoodMap/BaseFormRegionSeasonFoodMap';\nimport { BareButton } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './EditRegionFoodSeasonMap.scss';\n\nexport const EditRegionFoodSeasonMap: FC = () => {\n  const [isInFoodFirstMode, setIsInFoodFirstMode] = useState(true);\n\n  const flipForm = () => setIsInFoodFirstMode(!isInFoodFirstMode);\n\n  return (\n    <div>\n      <BareButton\n        className='c-edit-region-food-season-map__flip-btn'\n        onClick={flipForm}>\n          {isInFoodFirstMode ? 'Select by season' : 'Select by food'}\n        </BareButton>\n      {\n        isInFoodFirstMode\n          ? <BaseFormRegionFoodSeasonMap />\n          : <BaseFormRegionSeasonFoodMap />\n      }\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleRegion, updateRegion } from '../../services';\nimport { BaseFormRegion } from '../BaseFormRegion/BaseFormRegion';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditRegionForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<IDbRegion>(\n    BaseFormRegion,\n    () => {\n      return getSingleRegion(id as string);\n    },\n    updateRegion\n  );\n  return (\n    <LayoutWithTitle title='Edit Region'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { useParams } from 'react-router-dom';\nimport { getSingleUser, updateUser } from '../../services';\nimport { BaseFormUser } from '../BaseFormUser/BaseFormUser';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditUserForm: FC<{}> = () => {\n  const { id } = useParams();\n  const CreatedComponent = GetAuthorizedBackendData<IUser>(\n    BaseFormUser,\n    async () => {\n      const user = await getSingleUser(id as string);\n      return {\n        ...user,\n        password: ''\n      };\n    },\n    updateUser\n  );\n  return (\n    <LayoutWithTitle title='Edit User'>\n      <CreatedComponent />\n    </LayoutWithTitle>\n  );\n};\n","import React, { useState } from 'react';\nimport './DeleteModal.scss';\nimport { LoadingSpinner, BareButton, TextSmall, TextMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { ModalLayout } from '../../components-layouts';\n\nexport interface IDeleteModal<T> {\n  deleteItem: () => Promise<T>;\n  cancel: () => void;\n}\n\nexport const DeleteModal = <T extends {}> ({\n  deleteItem,\n  cancel\n}: IDeleteModal<T>) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const deleteButtonPressed = async () => {\n    setIsLoading(true);\n    await deleteItem();\n    setIsLoading(false);\n  };\n\n  return (\n    <ModalLayout>\n      <div className='c-delete-modal'>\n        <TextMedium>Are you sure you want to delete this item?</TextMedium>\n        <div className='c-delete-modal__btns'>\n          <BareButton onClick={cancel}>\n            <TextSmall>Cancel</TextSmall>\n          </BareButton>\n          <BareButton onClick={(deleteButtonPressed)}>\n            <TextSmall>Delete</TextSmall>\n          </BareButton>\n        </div>\n        {\n          isLoading\n          && <div className='c-delete-modal__spinner'><LoadingSpinner /></div>\n        }\n      </div>\n    </ModalLayout>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextSmall, TextMedium, BareButton } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { Redirect } from 'react-router-dom';\nimport './FullList.scss';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { DeleteModal } from '../DeleteModal/DeleteModal';\n\nexport interface IFullListProps<T> {\n  title: string;\n  items: T[] | undefined;\n  getItemId: (item: T) => string;\n  getItemName: (item: T) => string;\n  getItemEditUrl: (item: T) => string;\n  deleteItemFunc: (item: T) => Promise<T>;\n}\n\nexport const FullList = <T extends {}>({\n  title,\n  items,\n  getItemId,\n  getItemName,\n  getItemEditUrl,\n  deleteItemFunc\n}: IFullListProps<T>) => {\n  const [goToEditLink, setGoToEditLink] = useState<null | string>(null);\n  const [\n    deleteItemModalId,\n    setDeleteItemModalId\n  ] = useState<string | null>();\n\n  if (goToEditLink) {\n    return <Redirect to={goToEditLink} push={true} />;\n  }\n\n  return (\n    <div className='c-full-list'>\n      <LayoutWithTitle title={title}>\n        {\n          items && items.map((item) =>\n            <div className='c-full-list__item' key={getItemId(item)}>\n              <TextMedium className='c-full-list__item-name'>{getItemName(item)}</TextMedium>\n              <div className='c-full-list-item__options'>\n                <BareButton className='c-full-list-item__edit'\n                  onClick={() => setGoToEditLink(getItemEditUrl(item))}>\n                  <TextSmall>\n                    Edit\n                  </TextSmall>\n                </BareButton>\n                <BareButton\n                  onClick={() => setDeleteItemModalId(getItemId(item))}>\n                  <TextSmall>\n                    Delete\n                  </TextSmall>\n                </BareButton>\n              </div>\n              {\n                deleteItemModalId\n                && deleteItemModalId === getItemId(item)\n                && <DeleteModal\n                    cancel={() => setDeleteItemModalId(null)}\n                    deleteItem={() => deleteItemFunc(item)} />\n              }\n            </div>\n          )\n        }\n      </LayoutWithTitle>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { getAllCountries, deleteCountry } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListCountriesInner: FC<IGetAuthorizedBackendDataProps<ICountry[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Countries'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountry(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country;\n    })}\n  />\n);\n\nexport const FullListCountries = GetAuthorizedBackendData<ICountry[]>(\n  FullListCountriesInner,\n  getAllCountries\n);\n","import React, { FC } from 'react';\nimport { getAllCountryFoodNameMap, deleteCountryToFoodNameMap, getAllFood, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\ninterface ICountryFoodNameMapViewItem extends ICountryFoodNameMap {\n  countryName: string | undefined;\n  foodName: string | undefined;\n}\n\nconst FullListCountryFoodNameMapInner: FC<IGetAuthorizedBackendDataProps<ICountryFoodNameMapViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Country Food Name Map'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => `${item.countryName} - ${item.foodName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY_FOOD_NAME_MAP}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountryToFoodNameMap(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country as ICountryFoodNameMapViewItem;\n    })}\n  />\n);\n\nexport const FullListCountryFoodNameMaps = GetAuthorizedBackendData<ICountryFoodNameMapViewItem[]>(\n  FullListCountryFoodNameMapInner,\n  async () => {\n    const [\n      foodNameMaps,\n      food,\n      countries\n    ] = await Promise.all([\n      getAllCountryFoodNameMap(),\n      getAllFood(),\n      getAllCountries()\n    ]);\n    return foodNameMaps.map((foodNameMap) => {\n      const matchingFood =\n        food.find((foodItem) => foodNameMap.foodId === foodItem.id);\n      const matchingCountry =\n        countries.find((country) => foodNameMap.countryId === country.id);\n      return {\n        ...foodNameMap,\n        countryName: matchingCountry && matchingCountry.name,\n        foodName: matchingFood && matchingFood.name\n      };\n    }).sort((a, b) => (\n      (a && a.countryName ? a.countryName : '') < (b && b.countryName ? b.countryName : '')\n        ? -1 : (\n          a.foodName && a.foodName ? a.foodName : ''\n        ) < (b && b.foodName ? b.foodName : '')\n          ? -1 : 1\n    ));\n  }\n);\n","import React, { FC } from 'react';\nimport { getAllCountryRecipeNameMap, deleteCountryToRecipeNameMap, getAllRecipes, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\ninterface ICountryRecipeNameMapViewItem extends ICountryRecipeNameMap {\n  countryName: string | undefined;\n  recipeName: string | undefined;\n}\n\nconst FullListCountryRecipeNameMapInner: FC<IGetAuthorizedBackendDataProps<ICountryRecipeNameMapViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Country Recipe Name Map'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => `${item.countryName} - ${item.recipeName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY_RECIPE_NAME_MAP}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountryToRecipeNameMap(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country as ICountryRecipeNameMapViewItem;\n    })}\n  />\n);\n\nexport const FullListCountryRecipeNameMaps = GetAuthorizedBackendData<ICountryRecipeNameMapViewItem[]>(\n  FullListCountryRecipeNameMapInner,\n  async () => {\n    const [\n      recipeNameMaps,\n      recipes,\n      countries\n    ] = await Promise.all([\n      getAllCountryRecipeNameMap(),\n      getAllRecipes(),\n      getAllCountries()\n    ]);\n    return recipeNameMaps.map((recipeNameMap) => {\n      const matchingRecipe =\n        recipes.find((recipe) => recipeNameMap.recipeId === recipe.id);\n      const matchingCountry =\n        countries.find((country) => recipeNameMap.countryId === country.id);\n      return {\n        ...recipeNameMap,\n        countryName: matchingCountry && matchingCountry.name,\n        recipeName: matchingRecipe && matchingRecipe.name\n      };\n    }).sort((a, b) => (\n      (a && a.countryName ? a.countryName : '') < (b && b.countryName ? b.countryName : '')\n        ? -1\n          : (\n            a.recipeName && a.recipeName ? a.recipeName : ''\n          ) < (b && b.recipeName ? b.recipeName : '')\n            ? -1 : 1\n    ));\n  }\n);\n","import React, { FC } from 'react';\nimport { getAllFood, deleteFood } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListFoodInner: FC<IGetAuthorizedBackendDataProps<IFood[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Food'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.FOOD}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteFood(item.id).then((food) => {\n      if (reload) {\n        reload();\n      }\n      return food;\n    })}\n  />\n);\nexport const FullListFood = GetAuthorizedBackendData<IFood[]>(\n  FullListFoodInner,\n  getAllFood\n);\n","import React, { FC } from 'react';\nimport { getAllRecipes, deleteRecipe } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListRecipesInner: FC<IGetAuthorizedBackendDataProps<IRecipe[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Recipes'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.RECIPE}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteRecipe(item.id).then((recipe) => {\n      if (reload) {\n        reload();\n      }\n      return recipe;\n    })}\n  />\n);\nexport const FullListRecipes = GetAuthorizedBackendData<IRecipe[]>(\n  FullListRecipesInner,\n  getAllRecipes\n);\n","import React, { FC } from 'react';\nimport { getAllRegions, deleteRegion, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\ninterface IRegionViewItem extends IDbRegion {\n  countryName: string | undefined;\n}\n\nconst FullListRegionsInner: FC<IGetAuthorizedBackendDataProps<IRegionViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Regions'\n    items={items}\n    getItemId={(item) => item.code}\n    getItemName={(item) => `${item.countryName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.REGION}/${ROUTES.EDIT}/${item.code}`}\n    deleteItemFunc={(item) => deleteRegion(item.code).then((region) => {\n      if (reload) {\n        reload();\n      }\n      return region as IRegionViewItem;\n    })}\n  />\n);\nexport const FullListRegions = GetAuthorizedBackendData<IRegionViewItem[]>(\n  FullListRegionsInner,\n  async () => {\n    const [regions, countries] = await Promise.all([\n      getAllRegions(), getAllCountries()\n    ]);\n    return regions.map((region) => {\n      const country =\n        countries.find((countryItem) => countryItem.id === region.countryId);\n      return {\n        ...region,\n        countryName: country && country.name\n      };\n    }).sort((a, b) =>\n      (a.countryName || '') < (b.countryName || '')\n        ? -1\n        : a.name < b.name ? -1 : 1\n      );\n  }\n);\n","import React, { FC } from 'react';\nimport { getAllUsers, deleteUser } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListUsersInner: FC<IGetAuthorizedBackendDataProps<IUser[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Users'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.username}\n    getItemEditUrl={(item) => `${ROUTES.USER}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => (\n      deleteUser(item.id).then((user) => {\n        if (reload) {\n          reload();\n        }\n        return user;\n      })\n    )}\n  />\n);\n\nexport const FullListUsers = GetAuthorizedBackendData<IUser[]>(\n  FullListUsersInner,\n  getAllUsers\n);\n","import React, { FC, useState } from 'react';\nimport { loginRequest } from '../../services';\nimport { Redirect } from 'react-router';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { DataForm, IDataFormConfigProps } from '../DataForm/DataForm';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\n\ntype ILoginFormConfigProps = IDataFormConfigProps<IUser>;\n\nconst loginFormConfig: ILoginFormConfigProps = {\n  username: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  password: {\n    type: 'password',\n    validation: [requiredValidation]\n  }\n};\n\nexport const LoginForm: FC<{}> = () => {\n  const [redirectToNextPageState, setRedirectToNextPageState] = useState(\n    false\n  );\n\n  const handleSubmit = async (user: IUser) => {\n    await loginRequest(user.username, user.password);\n    setRedirectToNextPageState(true);\n    return;\n  };\n\n  if (redirectToNextPageState) {\n    return <Redirect push to='/home' />;\n  }\n  return (\n    <LayoutWithTitle title='Login'>\n      <DataForm\n        item={{ username: '', password: '' } as IUser}\n        sendData={handleSubmit}\n        formConfig={loginFormConfig}\n        buttonText='Login' />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { mainLinks } from '../../consts';\nimport './MainLinks.scss';\nimport { TextMedium, TextHeadingSmall } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst SingleLink: FC<{\n  url: string\n}> = ({\n  children,\n  url\n}) => (\n  <Link className='c-main-links__link' to={`/${url}`}>\n    <TextMedium>{children}</TextMedium>\n  </Link>\n);\n\nexport const MainLinks: FC<{}> = () => (\n  <LayoutWithTitle title='Update Data'>\n    {\n      mainLinks.map((link) =>\n        <div key={link.viewUrl} className='c-main-links__section'>\n          <TextHeadingSmall className='c-main-links__section-heading'>{ link.sectionName }</TextHeadingSmall>\n          <div className='c-main-links__options'>\n            {\n              link.createPageComponent\n                && (\n                  <Fragment>\n                    <SingleLink url={link.createLinkUrl}>\n                      Create\n                    </SingleLink>\n                    <TextMedium>\n                      -\n                    </TextMedium>\n                  </Fragment>\n                )\n            }\n            <SingleLink url={link.viewUrl}>\n              View\n            </SingleLink>\n          </div>\n        </div>\n      )\n    }\n  </LayoutWithTitle>\n);\n","import React, { FC } from 'react';\nimport { MainLinks } from '../../components-main';\n\nexport const HomePage: FC<{}> = () => (\n  <MainLinks />\n);\n","import React, { FC } from 'react';\n\nimport { LoginForm } from '../../components-main';\n\nexport const LoginPage: FC<{}> = () => <LoginForm />;\n","import { ROUTES } from '../config';\nimport {\n  CreateCountryPage,\n  EditCountryPage,\n  ViewCountriesPage,\n  CreateFoodPage,\n  EditFoodPage,\n  ViewFoodPage,\n  CreateRecipePage,\n  EditRecipePage,\n  CreateRegionPage,\n  EditRegionPage,\n  ViewRegionsPage,\n  CreateUserPage,\n  EditUserPage,\n  ViewUsersPage,\n  ViewRecipesPage,\n  ViewCountryFoodNameMapsPage,\n  ViewCountryRecipeNameMapsPage,\n  CreateCountryFoodNameMapPage,\n  CreateCountryRecipeNameMapPage,\n  EditCountryFoodNameMapPage,\n  EditCountryRecipeNameMapPage,\n  EditRegionFoodSeasonMapPage\n} from '../components-pages';\n\nexport const mainLinks = [\n  {\n    createPageComponent: CreateCountryPage,\n    editPageComponent: EditCountryPage,\n    sectionName: 'Countries',\n    viewPageComponent: ViewCountriesPage,\n    viewUrl: ROUTES.COUNTRY\n  },\n  {\n    createPageComponent: CreateCountryFoodNameMapPage,\n    editPageComponent: EditCountryFoodNameMapPage,\n    sectionName: 'Country Food Name Maps',\n    viewPageComponent: ViewCountryFoodNameMapsPage,\n    viewUrl: ROUTES.COUNTRY_FOOD_NAME_MAP\n  },\n  {\n    createPageComponent: CreateCountryRecipeNameMapPage,\n    editPageComponent: EditCountryRecipeNameMapPage,\n    sectionName: 'Country Recipe Name Maps',\n    viewPageComponent: ViewCountryRecipeNameMapsPage,\n    viewUrl: ROUTES.COUNTRY_RECIPE_NAME_MAP\n  },\n  {\n    createPageComponent: CreateFoodPage,\n    editPageComponent: EditFoodPage,\n    sectionName: 'Food',\n    viewPageComponent: ViewFoodPage,\n    viewUrl: ROUTES.FOOD\n  },\n  {\n    createPageComponent: CreateRecipePage,\n    editPageComponent: EditRecipePage,\n    sectionName: 'Recipes',\n    viewPageComponent: ViewRecipesPage,\n    viewUrl: ROUTES.RECIPE\n  },\n  {\n    createPageComponent: CreateRegionPage,\n    editPageComponent: EditRegionPage,\n    sectionName: 'Regions',\n    viewPageComponent: ViewRegionsPage,\n    viewUrl: ROUTES.REGION\n  },\n  {\n    sectionName: 'Region Food Season Maps',\n    viewPageComponent: EditRegionFoodSeasonMapPage,\n    viewUrl: ROUTES.REGION_FOOD_SEASON_MAP\n  },\n  {\n    createPageComponent: CreateUserPage,\n    editPageComponent: EditUserPage,\n    sectionName: 'Users',\n    viewPageComponent: ViewUsersPage,\n    viewUrl: ROUTES.USER\n  }\n].map((link) => ({\n  ...link,\n  createLinkUrl: `${link.viewUrl}/${ROUTES.CREATE}`,\n  editLinkUrl: `${link.viewUrl}/${ROUTES.EDIT}/:id`\n}));\n","import React, { FC } from 'react';\nimport { CreateCountryForm } from '../../components-main';\n\nexport const CreateCountryPage: FC<{}> = () => <CreateCountryForm />;\n","import React, { FC } from 'react';\nimport { EditCountryForm } from '../../components-main';\n\nexport const EditCountryPage: FC<{}> = () => <EditCountryForm />;\n","import React, { FC } from 'react';\nimport { FullListCountries } from '../../components-main';\n\nexport const ViewCountriesPage: FC<{}> = () => <FullListCountries />;\n","import React, { FC } from 'react';\nimport { CreateCountryFoodNameMapForm } from '../../components-main';\n\nexport const CreateCountryFoodNameMapPage: FC<{}> = () =>\n  <CreateCountryFoodNameMapForm />;\n","import React, { FC } from 'react';\nimport { EditCountryFoodNameMapForm } from '../../components-main';\n\nexport const EditCountryFoodNameMapPage: FC<{}> = () => <EditCountryFoodNameMapForm />;\n","import React, { FC } from 'react';\nimport { FullListCountryFoodNameMaps } from '../../components-main';\n\nexport const ViewCountryFoodNameMapsPage: FC<{}> = () => <FullListCountryFoodNameMaps />;\n","import React, { FC } from 'react';\nimport { CreateCountryRecipeNameMapForm } from '../../components-main';\n\nexport const CreateCountryRecipeNameMapPage: FC<{}> = () =>\n  <CreateCountryRecipeNameMapForm />;\n","import React, { FC } from 'react';\nimport { EditCountryRecipeNameMapForm } from '../../components-main';\n\nexport const EditCountryRecipeNameMapPage: FC<{}> = () => <EditCountryRecipeNameMapForm />;\n","import React, { FC } from 'react';\nimport { FullListCountryRecipeNameMaps } from '../../components-main';\n\nexport const ViewCountryRecipeNameMapsPage: FC<{}> = () => <FullListCountryRecipeNameMaps />;\n","import React, { FC } from 'react';\nimport { CreateFoodForm } from '../../components-main';\n\nexport const CreateFoodPage: FC<{}> = () => <CreateFoodForm />;\n","import React, { FC } from 'react';\nimport { EditFoodForm } from '../../components-main';\n\nexport const EditFoodPage: FC<{}> = () => <EditFoodForm />;\n","import React, { FC } from 'react';\nimport { FullListFood } from '../../components-main';\n\nexport const ViewFoodPage: FC<{}> = () => <FullListFood />;\n","import React, { FC } from 'react';\nimport { CreateRecipeForm } from '../../components-main';\n\nexport const CreateRecipePage: FC<{}> = () => <CreateRecipeForm />;\n","import React, { FC } from 'react';\nimport { EditRecipeForm } from '../../components-main';\n\nexport const EditRecipePage: FC<{}> = () => <EditRecipeForm />;\n","import React, { FC } from 'react';\nimport { FullListRecipes } from '../../components-main';\n\nexport const ViewRecipesPage: FC<{}> = () => <FullListRecipes />;\n","\nimport React, { FC } from 'react';\nimport { CreateRegionForm } from '../../components-main';\n\nexport const CreateRegionPage: FC<{}> = () => <CreateRegionForm />;\n","import React, { FC } from 'react';\nimport { EditRegionForm } from '../../components-main';\n\nexport const EditRegionPage: FC<{}> = () => <EditRegionForm />;\n","import React, { FC } from 'react';\nimport { FullListRegions } from '../../components-main';\n\nexport const ViewRegionsPage: FC<{}> = () => <FullListRegions />;\n","import React, { FC } from 'react';\nimport { EditRegionFoodSeasonMap } from '../../components-main';\n\nexport const EditRegionFoodSeasonMapPage: FC<{}> = () =>\n  <EditRegionFoodSeasonMap />;\n","import React, { FC } from 'react';\nimport { CreateUserForm } from '../../components-main';\n\nexport const CreateUserPage: FC<{}> = () => <CreateUserForm />;\n","import React, { FC } from 'react';\nimport { EditUserForm } from '../../components-main';\n\nexport const EditUserPage: FC<{}> = () => <EditUserForm />;\n","import React, { FC } from 'react';\nimport { FullListUsers } from '../../components-main';\n\nexport const ViewUsersPage: FC<{}> = () => <FullListUsers />;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './components-app/App';\nimport './index.scss';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n","import React, { FC, Fragment } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { ROUTES } from '../config';\nimport { mainLinks } from '../consts';\nimport {\n  HomePage,\n  LoginPage\n} from '../components-pages';\nimport { MainPageLayout } from '../components-layouts';\n\nexport const App: FC<{}> = () => (\n  <MainPageLayout>\n    <HashRouter>\n      <div>\n        <Route exact path={`/${ROUTES.LOGIN}`}>\n          <LoginPage />\n        </Route>\n        <Route exact path={`/${ROUTES.HOME}`}>\n          <HomePage />\n        </Route>\n\n        {\n          mainLinks.map((link) =>\n            <Fragment key={link.viewUrl}>\n              <Route exact path={`/${link.viewUrl}`}\n                component={link.viewPageComponent} />\n              <Route exact path={`/${link.editLinkUrl}`}\n                component={link.editPageComponent} />\n              <Route exact path={`/${link.createLinkUrl}`}\n                component={link.createPageComponent} />\n            </Fragment>\n          )\n        }\n      </div>\n    </HashRouter>\n  </MainPageLayout>\n);\n"],"sourceRoot":""}