{"version":3,"sources":["../../../../../../webpack/bootstrap","../webpack:/external \"react\"","../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","../../../node_modules/css-loader/dist/runtime/api.js","../../../../../../src/components/Icons/icon.scss?831a","../../../../../../src/components/Input/Input.tsx","../../../../../../src/components/Input/Multiselect.tsx","../../../../../../src/components/Input/RadioButton.tsx","../../../../../../src/components/Text/TextHeadingLarge.tsx","../../../../../../src/components/Text/TextHeadingMedium.tsx","../../../../../../src/components/Text/TextHeadingSmall.tsx","../../../../../../src/components/Text/TextMedium.tsx","../../../../../../src/components/Text/TextSmall.tsx","../../../../../../src/components/Buttons/BareButton.tsx","../../../../../../src/components/Buttons/PrimaryButton.tsx","../../../../../../src/components/index.ts","../../../../../../src/components/Input/Checkbox.tsx","../../../../../../src/components/Input/ValidationMessage.tsx","../../../../../../src/components/Input/RadioButtonGroup.tsx","../../../../../../src/components/Input/Select.tsx","../../../../../../src/components/Input/SearchableMultiselect.tsx","../../../../../../src/components/LoadingSpinner/LoadingSpinner.tsx","../../../../../../src/validation/index.ts","../../../../../../src/validation/required.validation.ts","../../../../../../src/components/Icons/ArrowIcon.tsx","../../../../../../src/components/Icons/BurgerIcon.tsx","../../../../../../src/components/Icons/CrossIcon.tsx","../../../../../../src/components/Icons/MagnifyingGlassIcon.tsx","../../../../../../src/index.ts","../../../../../../src/components/Buttons/BareButton.scss?7861","../../../../../../src/components/Buttons/BareButton.scss","../../../../../../src/components/Buttons/PrimaryButton.scss?c70f","../../../../../../src/components/Buttons/PrimaryButton.scss","../../../../../../src/components/Icons/icon.scss","../../../../../../src/components/Text/TextHeadingLarge.scss?4a82","../../../../../../src/components/Text/TextHeadingLarge.scss","../../../../../../src/components/Text/TextHeadingMedium.scss?9b20","../../../../../../src/components/Text/TextHeadingMedium.scss","../../../../../../src/components/Text/TextHeadingSmall.scss?4c22","../../../../../../src/components/Text/TextHeadingSmall.scss","../../../../../../src/components/Text/TextMedium.scss?4e5d","../../../../../../src/components/Text/TextMedium.scss","../../../../../../src/components/Text/TextSmall.scss?2f44","../../../../../../src/components/Text/TextSmall.scss","../../../../../../src/components/Input/ValidationMessage.scss?5c15","../../../../../../src/components/Input/ValidationMessage.scss","../../../../../../src/components/Input/Input.scss?064a","../../../../../../src/components/Input/Input.scss","../../../../../../src/components/Input/Multiselect.scss?68b2","../../../../../../src/components/Input/Multiselect.scss","../../../../../../src/components/Input/RadioButton.scss?6c4e","../../../../../../src/components/Input/RadioButton.scss","../../../../../../src/components/Input/RadioButtonGroup.scss?539f","../../../../../../src/components/Input/RadioButtonGroup.scss","../../../../../../src/components/Input/Select.scss?8d55","../../../../../../src/components/Input/Select.scss","../../../../../../src/components/Input/SearchableMultiselect.scss?19f6","../../../../../../src/components/Input/SearchableMultiselect.scss","../../../../../../src/components/LoadingSpinner/LoadingSpinner.scss?8219","../../../../../../src/components/LoadingSpinner/LoadingSpinner.scss","../../src/index.ts","../../src/handle-errors.ts","../../src/get-query-string.ts","../../../src/config/endpoint-urls.ts","../../src/now.ts","../../../src/enums/index.ts","../../../src/enums/diet-type.enum.ts","../../../src/enums/user-roles.enum.ts","../../../src/config/index.ts","../../../src/config/env-vars.ts","../../src/get-all-seasons-with-food.ts","../../src/get-all-seasons-with-recipes.ts","../../src/get-all-seasons.ts","../../src/get-badge-details-data.ts","../../src/get-countries.ts","../../src/get-current-season-index.ts","../../src/get-data-that-contains-search-term.ts","../../src/get-food-details-data.ts","../../src/get-nearest-region-from-lat-lng.ts","../../src/get-season-with-food.ts","../../src/get-season-with-recipes.ts","config/routes.ts","consts/form-button-text.ts","config/api-urls.ts","components-main/DataForm/DataForm.tsx","components-main/BaseFormCountry/BaseFormCountry.tsx","services/get-access-token-headers.ts","services/make-authorized-request.ts","services/create-badge.ts","services/create-country-food-name-map.ts","services/create-country-recipe-name-map.ts","services/create-country.ts","services/create-food.ts","services/create-recipe.ts","services/create-region-food-season-map.ts","services/create-region.ts","services/create-user.ts","services/delete-badge.ts","services/delete-country-food-name-map.ts","services/delete-country-recipe-name-map.ts","services/delete-country.ts","services/delete-food.ts","services/delete-recipe.ts","services/delete-region-food-season-map.ts","services/delete-region.ts","services/delete-user.ts","services/get-all-badges.ts","services/get-all-countries.ts","services/get-all-country-food-name-map.ts","services/get-all-country-recipe-name-map.ts","services/get-all-food.ts","services/get-all-recipes.ts","services/get-all-region-food-season-map.ts","services/get-all-regions.ts","services/get-all-users.ts","services/get-one-badge.ts","services/get-one-country.ts","services/get-one-country-food-name-map.ts","services/get-one-country-recipe-name-map.ts","services/get-one-food.ts","services/get-one-recipe.ts","services/get-one-region.ts","services/get-one-user.ts","services/login-request.ts","services/set-access-token.ts","services/update-badge.ts","services/update-country.ts","services/update-country-food-name-map.ts","services/update-country-recipe-name-map.ts","services/update-food.ts","services/update-recipe.ts","services/update-region.ts","services/update-user.ts","components-main/BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap.tsx","components-main/BaseFormFood/BaseFormFood.tsx","components-main/BaseFormRecipe/BaseFormRecipe.tsx","components-main/BaseFormRegion/BaseFormRegion.tsx","components-main/BaseFormRegionFoodSeasonMap/BaseFormRegionFoodSeasonMap.tsx","components-main/BaseFormRegionSeasonFoodMap/BaseFormRegionSeasonFoodMap.tsx","components-main/BaseFormUser/BaseFormUser.tsx","components-main/BaseFormBadge/BaseFormBadge.tsx","components-layouts/LayoutWithTitle/LayoutWithTitle.tsx","components-layouts/MainPageLayout/MainPageLayout.tsx","components-layouts/ModalLayout/ModalLayout.tsx","components-main/CreateBadgeForm/CreateBadgeForm.tsx","components-main/BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap.tsx","components-main/CreateCountryFoodNameMapForm/CreateCountryFoodNameMapForm.tsx","components-main/CreateCountryForm/CreateCountryForm.tsx","components-main/CreateCountryRecipeNameMapForm/CreateCountryRecipeNameMapForm.tsx","components-main/CreateFoodForm/CreateFoodForm.tsx","components-main/CreateRecipeForm/CreateRecipeForm.tsx","components-main/CreateRegionForm/CreateRegionForm.tsx","components-main/CreateUserForm/CreateUserForm.tsx","components-main/GetAuthorizedBackendData/GetAuthorizedBackendData.tsx","components-main/EditBadgeForm/EditBadgeForm.tsx","components-main/EditCountryFoodNameMapForm/EditCountryFoodNameMapForm.tsx","components-main/EditCountryForm/EditCountryForm.tsx","components-main/EditCountryRecipeNameMapForm/EditCountryRecipeNameMapForm.tsx","components-main/EditFoodForm/EditFoodForm.tsx","components-main/EditRecipeForm/EditRecipeForm.tsx","components-main/EditRegionFoodSeasonMapForm/EditRegionFoodSeasonMapForm.tsx","components-main/EditRegionForm/EditRegionForm.tsx","components-main/EditUserForm/EditUserForm.tsx","components-main/DeleteModal/DeleteModal.tsx","components-main/FullList/FullList.tsx","components-main/FullListBadges/FullListBadges.tsx","components-main/FullListCountries/FullListCountries.tsx","components-main/FullListCountryFoodNameMaps/FullListCountryFoodNameMaps.tsx","components-main/FullListCountryRecipeNameMaps/FullListCountryRecipeNameMaps.tsx","components-main/FullListFood/FullListFood.tsx","components-main/FullListRecipes/FullListRecipes.tsx","components-main/FullListRegions/FullListRegions.tsx","components-main/FullListUsers/FullListUsers.tsx","components-main/LoginForm/LoginForm.tsx","components-main/MainLinks/MainLinks.tsx","services/get-report-food-with-no-recipes.ts","components-main/ReportFoodWithNoRecipes/ReportFoodWithNoRecipes.tsx","components-pages/HomePage/HomePage.tsx","components-pages/LoginPage/LoginPage.tsx","consts/main-links.tsx","components-pages/CreateBadgePage/CreateBadgePage.tsx","components-pages/EditBadgePage/EditBadgePage.tsx","components-pages/ViewBadgesPage/ViewBadgesPage.tsx","components-pages/CreateCountryPage/CreateCountryPage.tsx","components-pages/EditCountryPage/EditCountryPage.tsx","components-pages/ViewCountriesPage/ViewCountriesPage.tsx","components-pages/CreateCountryFoodNameMapPage/CreateCountryFoodNameMapPage.tsx","components-pages/EditCountryFoodNameMapPage/EditCountryFoodNameMapPage.tsx","components-pages/ViewCountryFoodNameMapsPage/ViewCountryFoodNameMapsPage.tsx","components-pages/CreateCountryRecipeNameMapPage/CreateCountryRecipeNameMapPage.tsx","components-pages/EditCountryRecipeNameMapPage/EditCountryRecipeNameMapPage.tsx","components-pages/ViewCountryRecipeNameMapsPage/ViewCountryRecipeNameMapsPage.tsx","components-pages/CreateFoodPage/CreateFoodPage.tsx","components-pages/EditFoodPage/EditFoodPage.tsx","components-pages/ViewFoodPage/ViewFoodPage.tsx","components-pages/CreateRecipePage/CreateRecipePage.tsx","components-pages/EditRecipePage/EditRecipePage.tsx","components-pages/ViewRecipesPage/ViewRecipesPage.tsx","components-pages/CreateRegionPage/CreateRegionPage.tsx","components-pages/EditRegionPage/EditRegionPage.tsx","components-pages/ViewRegionsPage/ViewRegionsPage.tsx","components-pages/EditRegionFoodSeasonMapPage/EditRegionFoodSeasonMapPage.tsx","components-pages/CreateUserPage/CreateUserPage.tsx","components-pages/EditUserPage/EditUserPage.tsx","components-pages/ViewUsersPage/ViewUsersPage.tsx","components-pages/ReportFoodWithNoRecipesPage/ReportFoodWithNoRecipesPage.tsx","consts/get-storage.ts","components-app/App.tsx","index.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","memo","getTarget","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","newObj","all","atob","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","content","base64","data","cssMapping","sourceMapping","sourceURLs","sources","source","sourceRoot","mediaQuery","dedupe","alreadyImportedModules","api","default","exported","locals","Input","className","type","placeholder","onChange","onKeyDown","rest","event","Multiselect","valueToUse","isSelected","optionValue","includes","option","onClick","selectedValue","newValue","innerValue","label","RadioButton","defaultToChecked","groupName","htmlFor","defaultChecked","children","Checkbox","checked","ValidationMessage","RadioButtonGroup","radioButtonClassName","radioButtons","Select","SearchableMultiselect","inputs","useState","filteredOptions","setFilteredOptions","Fragment","keyCode","inputValue","visibleOptions","every","withOptionsRemoved","optionsToAdd","searchValue","filtered","toLowerCase","LoadingSpinner","requiredValidation","ArrowIcon","viewBox","strokeLinecap","strokeWidth","stroke","x1","y1","x2","y2","BurgerIcon","height","width","y","CrossIcon","points","MagnifyingGlassIcon","___CSS_LOADER_API_IMPORT___","__export","convertDegressToRadians","ROUTES","FORM_BUTTON_TEXT","ADMIN_BACKEND_URL","process","REACT_APP_ADMIN_BACKEND_URL","LOGIN_URL","ENDPOINT_LOGIN","BADGE_URL","ENDPOINT_BADGE","COUNTRY_URL","ENDPOINT_COUNTRY","COUNTRY_FOOD_NAME_MAP_URL","ENDPOINT_COUNTRY_FOOD_NAME_MAP","REGION_FOOD_SEASON_MAP_URL","ENDPOINT_REGION_FOOD_SEASON_MAP","COUNTRY_RECIPE_NAME_MAP_URL","ENDPOINT_COUNTRY_RECIPE_NAME_MAP","FOOD_URL","ENDPOINT_FOOD_DETAILS","RECIPE_URL","ENDPOINT_RECIPE","REGION_URL","ENDPOINT_REGION","USER_URL","REACT_APP_USER_URL","ENDPOINT_USER","FOOD_WITH_NO_RECIPES_URL","ENDPOINT_REPORTS","ENDPOINT_FOOD_WITH_NO_RECIPES","DataForm","sendData","formConfig","processItem","buttonText","UPDATE","goBackOnUpdate","itemState","setItemState","useEffect","selectFields","entries","newItem","reduce","builtItem","matchingField","find","selectOptions","errorState","setErrorState","validationState","setValidationState","isLoadingState","setIsLoadingState","updateItem","processedItem","submit","a","updatedItem","history","back","message","validation","prop","toUpperCase","replace","slice","changedValue","errors","validationFunction","updateField","validationErrors","error","countryFormConfig","BaseFormCountry","items","updateMethod","getAccessTokenHeaders","token","getStorage","accessToken","Authorization","makeAuthorizedRequest","url","requestOptions","fetch","headers","response","status","location","href","json","createBadge","badge","body","method","createCountryFoodNameMap","country","createCountryRecipeNameMap","createCountry","createFood","food","createRecipe","recipe","createRegionFoodSeasonMap","regionFoodSeasonMap","createRegion","region","createUser","user","deleteBadge","deleteCountryToFoodNameMap","deleteCountryToRecipeNameMap","deleteCountry","deleteFood","deleteRecipe","deleteRegionFoodSeasonMap","deleteRegion","deleteUser","getAllBadges","getAllCountries","getAllCountryFoodNameMap","getAllCountryRecipeNameMap","getAllFood","getAllRecipes","getAllRegionFoodSeasonMap","getAllRegions","getAllUsers","getOneBadge","getOneCountry","getOneCountryFoodNameMap","getOneCountryRecipeNameMap","getOneFood","getOneRecipe","getOneRegion","getOneUser","loginRequest","username","password","updateBadge","updateCountry","updateCountryFoodNameMap","countryFoodNameMap","updateCountryRecipeNameMap","countryRecipeNameMap","updateFood","updateRecipe","updateRegion","updateUser","initialCountryRecipeNameMapFormConfig","BaseFormCountryRecipeNameMap","config","setConfig","Promise","then","countries","recipes","countryOptions","recipeOptions","foodItem","countryId","recipeId","updateConfigWithDropdowns","initialFoodFormConfig","imageUrlSmall","description","BaseFormFood","badges","foodOptions","badgeOptions","substituteFoodIds","badgeIds","updateConfig","initialRecipeFormConfig","linkUrl","isVegan","isVegetarian","BaseFormRecipe","primaryFoodInRecipeIds","secondaryFoodInRecipeIds","updateConfigWithFoodDropdowns","initialRegionFormConfig","isDisabled","lat","lng","BaseFormRegion","additionalConfig","BaseFormRegionFoodSeasonMap","itemData","setItemData","allRegionFoodSeasonMaps","setAllRegionFoodSeasonMaps","updateRegionFoodSeasonMap","form","existingItemsForRegionAndSeason","regionId","foodId","toCreate","seasonIds","seasonId","generateItems","allRegionFoodSeasonMap","updateSeasonIds","previousItem","allRegionFoodSeasonMapsResult","regionFoodSeason","undefined","getAllSeasons","regions","seasons","regionOptions","seasonOptions","season","currentConfig","BaseFormRegionSeasonFoodMap","foodIds","updateFoodIds","userFormConfig","roles","values","USER_ROLES","role","BaseFormUser","badgeFormConfig","BaseFormBadge","LayoutWithTitle","title","MainPageLayout","ModalLayout","CreateBadgeForm","CREATE","initialCountryFoodNameMapFormConfig","BaseFormCountryFoodNameMap","CreateCountryFoodNameMapForm","CreateCountryForm","CreateCountryRecipeNameMapForm","CreateFoodForm","CreateRecipeForm","createOnlyFields","code","CreateRegionForm","CreateUserForm","GetAuthorizedBackendData","InnerComponent","requestDataMethod","isLoading","state","setState","requestNewData","catch","reload","EditBadgeForm","useParams","EditCountryFoodNameMapForm","EditCountryForm","EditCountryRecipeNameMapForm","EditFoodForm","EditRecipeForm","EditRegionFoodSeasonMapForm","isInFoodFirstMode","setIsInFoodFirstMode","EditRegionForm","EditUserForm","DeleteModal","deleteItem","cancel","setIsLoading","deleteButtonPressed","FullList","getItemId","getItemName","getItemEditUrl","deleteItemFunc","goToEditLink","setGoToEditLink","deleteItemModalId","setDeleteItemModalId","to","FullListBadgesInner","BADGES","EDIT","FullListBadges","FullListCountriesInner","COUNTRY","FullListCountries","FullListCountryFoodNameMapInner","countryName","foodName","COUNTRY_FOOD_NAME_MAP","FullListCountryFoodNameMaps","foodNameMaps","foodNameMap","matchingFood","matchingCountry","sort","b","FullListCountryRecipeNameMapInner","recipeName","COUNTRY_RECIPE_NAME_MAP","FullListCountryRecipeNameMaps","recipeNameMaps","recipeNameMap","matchingRecipe","FullListFoodInner","FOOD","FullListFood","FullListRecipesInner","RECIPE","FullListRecipes","FullListRegionsInner","REGION","FullListRegions","countryItem","FullListUsersInner","USER","FullListUsers","loginFormConfig","LoginForm","redirectToNextPageState","setRedirectToNextPageState","handleSubmit","SingleLink","MainLinks","mainLinks","group","pages","link","sectionName","createPageComponent","createLinkUrl","viewUrl","getReportFoodWithNoRecipes","ReportFoodWithNoRecipesInner","ReportFoodWithNoRecipes","HomePage","LoginPage","editPageComponent","viewPageComponent","REGION_FOOD_SEASON_MAP","editLinkUrl","REPORTS_FOOD_MISSING_RECIPES","sessionStorage","App","exact","path","LOGIN","HOME","array","component","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.f4e2edb9.chunk.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"react\");","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./icon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React, { FC, KeyboardEventHandler } from 'react';\nimport './Input.scss';\n\nexport const Input: FC<{\n  className?: string,\n  type?: 'text' | 'number' | 'password',\n  placeholder?: string,\n  onChange: (newValue: string) => void,\n  onKeyDown?: KeyboardEventHandler,\n  value?: string | number,\n  'data-e2e'?: string\n}> = ({\n  className,\n  type = 'text',\n  placeholder,\n  onChange,\n  onKeyDown,\n  value,\n  ...rest\n}) => (\n  <input\n    data-e2e={rest['data-e2e']}\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    value={value}\n    onKeyDown={onKeyDown}\n    onChange={(event) => onChange(event.target.value)}>\n  </input>\n);\n","import React, { FC } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport './Multiselect.scss';\nimport { BareButton } from '../Buttons';\n\nexport const Multiselect: FC<{\n  className?: string,\n  onChange: (newValue: Array<(string | number)>) => void,\n  options: ISelectOption[],\n  value: Array<(string | number)> | null\n}> = ({\n  className,\n  onChange,\n  options,\n  value\n}) => {\n\n  const valueToUse = value || [];\n  const isSelected = (optionValue: string | number) =>\n    valueToUse && valueToUse.includes(optionValue);\n  const onOptionClicked = (selectedValue: string | number) => {\n    const newValue = isSelected(selectedValue)\n      ? valueToUse.filter((innerValue) => innerValue !== selectedValue)\n      : [...valueToUse, selectedValue];\n    onChange(newValue);\n  };\n\n  return <div\n    className={`c-multiselect ${(className || '')}`}>\n      {\n        options && options.map((option) =>\n          <BareButton key={option.value}\n            className={\n              'c-multi-select-option' + (\n                isSelected(option.value)\n                  ? ' c-multi-select-option--selected'\n                  : ''\n              )\n            }\n            onClick={() => onOptionClicked(option.value)}>\n              {option.label}\n          </BareButton>\n        )\n      }\n  </div>;\n};\n","import React, { FC } from 'react';\nimport './RadioButton.scss';\n\nexport const RadioButton: FC<{\n  className?: string,\n  defaultToChecked?: boolean,\n  groupName: string,\n  value: string,\n  label: string\n}> = ({\n  className,\n  defaultToChecked,\n  groupName,\n  value,\n  label\n}) => (\n  <label\n    data-e2e={`radio-btn-${value}`}\n    htmlFor={value}\n    className={`${(className || '')} c-radio-button${\n      defaultToChecked ? ' c-radio-button--selected' : ''\n    }`}>\n    <input\n      className='c-radio-button__input'\n      defaultChecked={defaultToChecked}\n      id={value}\n      type='radio'\n      name={groupName}\n      value={value} />\n    {label}\n  </label>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingLarge.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingLarge: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-large`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingMedium.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingMedium: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-medium`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextHeadingSmall.scss';\nimport { IText } from './Text.interface';\n\nexport const TextHeadingSmall: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-small`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextMedium.scss';\nimport { IText } from './Text.interface';\n\nexport const TextMedium: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-medium`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './TextSmall.scss';\nimport { IText } from './Text.interface';\n\nexport const TextSmall: FC<IText> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-small`}>\n    { children }\n  </span>\n);\n","import React, { FC } from 'react';\nimport './BareButton.scss';\nimport { IButton } from './Button.interface';\n\nexport const BareButton: FC<IButton> = ({\n  className,\n  children,\n  onClick,\n  type = 'button',\n  ...rest\n}) => (\n  <button\n    data-e2e={rest['data-e2e']}\n    type={type}\n    className={`${(className || '')} c-bare-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","import React, { FC } from 'react';\nimport './PrimaryButton.scss';\nimport { IButton } from './Button.interface';\n\nexport const PrimaryButton: FC<IButton> = ({\n  className,\n  children,\n  onClick,\n  type = 'button',\n  ...rest\n}) => (\n  <button\n    data-e2e={rest['data-e2e']}\n    type={type} className={`${(className || '')} c-primary-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","export * from './Buttons';\n\nexport * from './Icons';\n\nexport * from './Input';\n\nexport * from './LoadingSpinner/LoadingSpinner';\n\nexport * from './Text';\n","import React, { FC } from 'react';\n\nexport const Checkbox: FC<{\n  className?: string,\n  onChange: (newValue: boolean) => void,\n  value: boolean\n}> = ({\n  className,\n  onChange,\n  value\n}) => (\n  <input\n    className={`${(className || '')}`}\n    type='checkbox'\n    checked={value}\n    onChange={(event) => onChange(event.target.checked)} />\n);\n","import React, { FC } from 'react';\nimport { TextMedium } from '../Text';\nimport './ValidationMessage.scss';\n\nexport const ValidationMessage: FC<{\n  className?: string\n}> = ({\n  className,\n  children\n}) => (\n  <TextMedium\n    className={`${(className || '')} c-validation-message`}>\n      {children}\n  </TextMedium>\n);\n","import React, { FC } from 'react';\n\nimport { RadioButton } from './RadioButton';\n\nimport './RadioButtonGroup.scss';\n\nexport const RadioButtonGroup: FC<{\n  className?: string,\n  radioButtonClassName?: string,\n  groupName: string,\n  radioButtons: Array<{\n    value: string,\n    label: string\n  }>,\n  selectedValue?: string,\n  onChange: (newValue: string) => void\n}> = ({\n  className,\n  radioButtonClassName,\n  selectedValue,\n  groupName,\n  radioButtons,\n  onChange\n}) => (\n  <div\n    className={`${(className || '')} c-radio-button-group`}\n    onChange={\n      (event) => onChange((event.target as HTMLInputElement).value)\n    }>\n    {\n      radioButtons.map(({ value, label }) => (\n        <RadioButton\n          key={value}\n          className={radioButtonClassName}\n          defaultToChecked={selectedValue === value}\n          groupName={groupName}\n          value={value}\n          label={label}\n        />\n      ))\n    }\n  </div>\n);\n","import React, { FC } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport './Select.scss';\n\nexport const Select: FC<{\n  className?: string,\n  onChange: (newValue: string) => void,\n  options: ISelectOption[],\n  value: string | number\n}> = ({\n  className,\n  onChange,\n  options,\n  value\n}) => (\n  <select\n    className={`${(className || '')} c-select`}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}>\n      {\n        options.map((option) =>\n          <option key={option.value} value={option.value}>{option.label}</option>\n        )\n      }\n  </select>\n);\n","import React, { FC, Fragment, useState, KeyboardEventHandler } from 'react';\nimport { ISelectOption } from './select-option.interface';\nimport { Multiselect } from './Multiselect';\nimport { Input } from './Input';\nimport './SearchableMultiselect.scss';\n\nexport const SearchableMultiselect: FC<{\n  className?: string,\n  onChange: (newValue: Array<(string | number)>) => void,\n  options: ISelectOption[],\n  value: Array<(string | number)>\n}> = (inputs) => {\n\n  const [filteredOptions, setFilteredOptions] =\n    useState<ISelectOption[]>(inputs.options);\n\n  const searchUpdated = (searchValue: string) => {\n    const filtered = inputs.options\n      .filter((option) => option.label\n        .toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredOptions(filtered);\n  };\n\n  const handleKeyPress: KeyboardEventHandler = (\n    event\n  ) => {\n    if (event.keyCode === 13) {\n      const inputValue = inputs.value || [];\n      const visibleOptions = filteredOptions.map((option) => option.value);\n      const areAllOptionsSelected = visibleOptions\n        .every((option) => inputValue.includes(option));\n      if (areAllOptionsSelected) {\n        const withOptionsRemoved = inputValue\n          .filter((value) => !visibleOptions.includes(value));\n        inputs.onChange(withOptionsRemoved);\n      } else {\n        const optionsToAdd = visibleOptions\n          .filter((value) => !inputValue.includes(value));\n        inputs.onChange([\n          ...inputValue,\n          ...optionsToAdd\n        ]);\n      }\n    }\n  };\n\n  return <Fragment>\n    <Input\n      className='c-searchable-multiselect__search'\n      placeholder='Search'\n      onKeyDown={handleKeyPress}\n      onChange={searchUpdated} />\n    <Multiselect {...{\n      ...inputs,\n      className: (inputs.className || '')\n        + ' c-searchable-multiselect__multi-select',\n      options: filteredOptions\n    }} />\n  </Fragment>;\n};\n","import React, { FC } from 'react';\n\nimport './LoadingSpinner.scss';\n\nexport const LoadingSpinner: FC<{}> = () => (\n  <div className='c-loading-spinner' data-e2e='loading-spinner'>\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n  </div>\n);\n","export * from './required.validation';\n\nexport * from './validation.interface';\n","import { IValidation } from './validation.interface';\n\nexport const requiredValidation: IValidation = (\n  value: string | string[] | number | boolean | null | undefined\n): string | null => (\n  value === null\n  || value === undefined\n  || value === ''\n  || ((value as string[]).length !== undefined && (value as string[]).length === 0)\n  ? 'Required'\n  : null\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const ArrowIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon${className ? ` ${className}` : ''}`} viewBox='0 0 24 24'>\n    <g strokeLinecap='round' strokeWidth='2' stroke='#000'>\n      <line x1='1' y1='11' x2='6' y2='5' />\n      <line x1='1' y1='11' x2='6' y2='17' />\n      <line x1='2' y1='11' x2='22' y2='11' />\n    </g>\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const BurgerIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg viewBox='0 0 24 24' className={`c-icon${className ? ` ${className}` : ''}`} >\n    <rect height='2' width='24' y='5'></rect>\n    <rect height='2' width='24' y='11'></rect>\n    <rect height='2' width='24' y='17'></rect>\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const CrossIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon ${className ? ` ${className}` : ''}`}  viewBox='0 0 24 24'>\n    {/* tslint:disable-next-line */}\n    <polygon points='19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12' />\n  </svg>\n);\n","import React, { FC } from 'react';\nimport './icon.scss';\nimport { IIcon } from './Icon.interface';\n\nexport const MagnifyingGlassIcon: FC<IIcon> = ({\n  className\n}) => (\n  <svg className={`c-icon${className ? ` ${className}` : ''}`} viewBox='0 0 32 32'>\n    {/* tslint:disable-next-line */}\n    <path d='M19.4271164,21.4271164 C18.0372495,22.4174803 16.3366522,23 14.5,23 C9.80557939,23 6,19.1944206 6,14.5 C6,9.80557939 9.80557939,6 14.5,6 C19.1944206,6 23,9.80557939 23,14.5 C23,16.3366522 22.4174803,18.0372495 21.4271164,19.4271164 L27.0119176,25.0119176 C27.5621186,25.5621186 27.5575313,26.4424687 27.0117185,26.9882815 L26.9882815,27.0117185 C26.4438648,27.5561352 25.5576204,27.5576204 25.0119176,27.0119176 L19.4271164,21.4271164 L19.4271164,21.4271164 Z M14.5,21 C18.0898511,21 21,18.0898511 21,14.5 C21,10.9101489 18.0898511,8 14.5,8 C10.9101489,8 8,10.9101489 8,14.5 C8,18.0898511 10.9101489,21 14.5,21 L14.5,21 Z' />\n  </svg>\n);\n","export * from './components';\n\nexport * from './validation';\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./BareButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-bare-button{border:none;cursor:pointer;font-family:\\\"Roboto\\\",sans-serif}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./PrimaryButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-primary-button{cursor:pointer;background-color:#5CB5CD;border:none;padding:1rem;color:#fff;border-radius:5px;box-shadow:1px 1px 3px 1px rgba(0,0,0,0.2);font-family:\\\"Roboto\\\",sans-serif;transition:background-color .2s;font-size:1.125rem;min-width:175px}.c-primary-button:hover{transition-duration:0s;background-color:#83c7d9}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-icon{width:100%}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingLarge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-large{font-size:2rem;font-weight:300}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingMedium.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-medium{font-weight:500;font-size:1.5rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextHeadingSmall.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-heading-small{font-weight:500;font-size:1.2rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextMedium.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-medium{font-weight:300;font-size:0.9rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./TextSmall.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-text-small{font-weight:300;font-size:0.75rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./ValidationMessage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-validation-message{color:#E34040;margin-top:0.5rem;display:inline-block}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Input.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-input{border:1px solid #d1cdcd;border-radius:5px;padding:0.5rem;color:rgba(0,0,0,0.85)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Multiselect.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-multiselect{cursor:pointer;height:200px;overflow-y:auto;border:1px solid #d1cdcd;border-radius:5px;padding:0.25rem 0}.c-multi-select-option{padding:0.25rem;color:rgba(0,0,0,0.85);display:block;width:100%;text-align:left}.c-multi-select-option--selected{background-color:#5CB5CD;color:#fff}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./RadioButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-radio-button{display:block;width:100%;display:flex;justify-content:center;align-items:center;cursor:pointer;min-height:30px;transition:background-color .2s}.c-radio-button:hover{transition-duration:0s;background-color:rgba(238,238,238,0.5)}.c-radio-button--selected{background-color:#eee}.c-radio-button__input{display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./RadioButtonGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-radio-button-group{width:100%;display:flex;justify-content:space-between}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Select.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-select{border:1px solid #d1cdcd;border-radius:5px;color:rgba(0,0,0,0.85);background:none;height:2.375rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./SearchableMultiselect.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".c-searchable-multiselect__search{width:100%;border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.c-searchable-multiselect__multi-select{border-top-left-radius:0;border-top-right-radius:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./LoadingSpinner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"@keyframes growAnimation{0%,80%,100%{transform:scale(.5);background:#80888b}20%{transform:scale(1);background:#D0D3D4}}.c-loading-spinner{display:inline-block}.c-loading-spinner__dot{display:inline-block;width:12px;height:12px;background-color:#D0D3D4;border-radius:50%;animation-name:growAnimation;animation-duration:1.75s;animation-iteration-count:infinite}.c-loading-spinner__dot:nth-child(1){animation-delay:0s}.c-loading-spinner__dot:nth-child(2){animation-delay:.23s}.c-loading-spinner__dot:nth-child(3){animation-delay:.46s}.c-loading-spinner__dot:nth-child(4){animation-delay:.69s}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./get-all-seasons-with-food\"));\n__export(require(\"./get-all-seasons-with-recipes\"));\n__export(require(\"./get-all-seasons\"));\n__export(require(\"./get-badge-details-data\"));\n__export(require(\"./get-countries\"));\n__export(require(\"./get-current-season-index\"));\n__export(require(\"./get-data-that-contains-search-term\"));\n__export(require(\"./get-food-details-data\"));\n__export(require(\"./get-nearest-region-from-lat-lng\"));\n__export(require(\"./get-query-string\"));\n__export(require(\"./get-season-with-food\"));\n__export(require(\"./get-season-with-recipes\"));\n__export(require(\"./handle-errors\"));\n__export(require(\"./now\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleErrors = (resp) => __awaiter(void 0, void 0, void 0, function* () {\n    const result = yield resp.json();\n    if (resp.status !== 200) {\n        throw result;\n    }\n    return result;\n});\n//# sourceMappingURL=handle-errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getQueryString = (isVegetarian, isVegan, regionId) => {\n    const query = [\n        isVegetarian && 'is-vegetarian=true',\n        isVegan && 'is-vegan=true',\n        regionId && `region-id=${regionId}`\n    ].filter(Boolean).join('&');\n    const queryString = query && `?${query}`;\n    return queryString;\n};\n//# sourceMappingURL=get-query-string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_V2 = 'v2';\nexports.ENDPOINT_ADMIN = 'admin';\nexports.ENDPOINT_REPORTS = 'reports';\nexports.ENDPOINT_SEASON = 'season';\nexports.ENDPOINT_BADGE_DETAILS = 'badge';\nexports.ENDPOINT_FOOD_DETAILS = 'food';\nexports.ENDPOINT_SEASON_WITH_FOOD = 'season-with-food';\nexports.ENDPOINT_SEASON_WITH_RECIPES = 'season-with-recipes';\nexports.ENDPOINT_COUNTRY = 'country';\nexports.ENDPOINT_BADGE = 'badge';\nexports.ENDPOINT_COUNTRY_FOOD_NAME_MAP = 'country-food-name-map';\nexports.ENDPOINT_LOGIN = 'login';\nexports.ENDPOINT_COUNTRY_RECIPE_NAME_MAP = 'country-recipe-name-map';\nexports.ENDPOINT_RECIPE = 'recipe';\nexports.ENDPOINT_REGION = 'region';\nexports.ENDPOINT_REGION_FOOD_SEASON_MAP = 'region-food-season-map';\nexports.ENDPOINT_USER = 'user';\nexports.ENDPOINT_FOOD_WITH_NO_RECIPES = 'food-with-no-recipes';\n//# sourceMappingURL=endpoint-urls.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.now = () => new Date();\n//# sourceMappingURL=now.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./diet-type.enum\"));\n__export(require(\"./user-roles.enum\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DIET_TYPE;\n(function (DIET_TYPE) {\n    DIET_TYPE[\"VEGETARIAN\"] = \"VEGETARIAN\";\n    DIET_TYPE[\"VEGAN\"] = \"VEGAN\";\n    DIET_TYPE[\"ALL\"] = \"ALL\";\n})(DIET_TYPE = exports.DIET_TYPE || (exports.DIET_TYPE = {}));\n//# sourceMappingURL=diet-type.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar USER_ROLES;\n(function (USER_ROLES) {\n    USER_ROLES[\"ADMIN\"] = \"admin\";\n    USER_ROLES[\"EDITOR\"] = \"editor\";\n})(USER_ROLES = exports.USER_ROLES || (exports.USER_ROLES = {}));\n//# sourceMappingURL=user-roles.enum.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./env-vars\"));\n__export(require(\"./endpoint-urls\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst endpoint_urls_1 = require(\"./endpoint-urls\");\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL\n    || `https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/${endpoint_urls_1.ENDPOINT_V2}`;\nexports.SEASON_URL = process.env.SEASON_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_SEASON}`;\nexports.BADGE_DETAILS_URL = process.env.BADGE_DETAILS_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_BADGE_DETAILS}`;\nexports.FOOD_DETAILS_URL = process.env.FOOD_DETAILS_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_FOOD_DETAILS}`;\nexports.SEASON_WITH_FOOD_URL = process.env.SEASON_WITH_FOOD_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_SEASON_WITH_FOOD}`;\nexports.SEASON_WITH_RECIPES_URL = process.env.SEASON_WITH_RECIPES_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_SEASON_WITH_RECIPES}`;\nexports.COUNTRY_URL = process.env.COUNTRY_URL || `${BACKEND_URL}/${endpoint_urls_1.ENDPOINT_COUNTRY}`;\n//# sourceMappingURL=env-vars.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getAllSeasonsWithFood = (regionId) => {\n    const queryString = get_query_string_1.getQueryString(undefined, undefined, regionId);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}${queryString}`)\n        .then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-all-seasons-with-food.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getAllSeasonsWithRecipes = (isVegetarian, isVegan, regionId) => {\n    const queryString = get_query_string_1.getQueryString(isVegetarian, isVegan, regionId);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}${queryString}`)\n        .then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-all-seasons-with-recipes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getAllSeasons = (regionId) => {\n    const queryString = get_query_string_1.getQueryString(undefined, undefined, regionId);\n    return fetch(`${seasonal_shared_models_1.SEASON_URL}${queryString}`).then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-all-seasons.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getBadgeDetailsData = (badgeId, regionId) => {\n    const queryString = get_query_string_1.getQueryString(undefined, undefined, regionId);\n    return fetch(`${seasonal_shared_models_1.BADGE_DETAILS_URL}/${badgeId}${queryString}`)\n        .then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-badge-details-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getCountries = () => fetch(seasonal_shared_models_1.COUNTRY_URL).then(handle_errors_1.handleErrors);\n//# sourceMappingURL=get-countries.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst now_1 = require(\"./now\");\nexports.getCurrentSeasonIndex = () => now_1.now().getUTCMonth();\n//# sourceMappingURL=get-current-season-index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDataThatContainsSearchTerm = (searchTerm, data) => data && data.filter(({ name }) => (!searchTerm || name.toLowerCase().includes(searchTerm)));\n//# sourceMappingURL=get-data-that-contains-search-term.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getFoodDetailsData = (foodId, isVegetarian, isVegan, regionId) => {\n    const queryString = get_query_string_1.getQueryString(isVegetarian, isVegan, regionId);\n    return fetch(`${seasonal_shared_models_1.FOOD_DETAILS_URL}/${foodId}${queryString}`)\n        .then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-food-details-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst convertDegressToRadians = (deg) => deg * (Math.PI / 180);\nconst distanceBetweenLatLngInKm = (latLng1, latLng2) => {\n    const dLat = convertDegressToRadians(latLng2.lat - latLng1.lat);\n    const dLng = convertDegressToRadians(latLng2.lng - latLng1.lng);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        + Math.cos(convertDegressToRadians(latLng1.lat))\n            * Math.cos(convertDegressToRadians(latLng2.lat))\n            * Math.sin(dLng / 2)\n            * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const radiusOfEarthInKm = 6371;\n    return radiusOfEarthInKm * c;\n};\nexports.getNearestRegionFromLatLng = (regions, latLng) => regions && regions.reduce((prevRegion, nextRegion) => (distanceBetweenLatLngInKm(latLng, prevRegion.latLng)\n    < distanceBetweenLatLngInKm(latLng, nextRegion.latLng)\n    ? prevRegion\n    : nextRegion));\n//# sourceMappingURL=get-nearest-region-from-lat-lng.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getSeasonWithFood = (seasonIndex, regionId) => {\n    const queryString = get_query_string_1.getQueryString(undefined, undefined, regionId);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}/${seasonIndex}${queryString}`).then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-season-with-food.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst get_query_string_1 = require(\"./get-query-string\");\nconst handle_errors_1 = require(\"./handle-errors\");\nexports.getSeasonWithRecipes = (seasonIndex, isVegetarian, isVegan, regionId) => {\n    const queryString = get_query_string_1.getQueryString(isVegetarian, isVegan, regionId);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}/${seasonIndex}${queryString}`).then(handle_errors_1.handleErrors);\n};\n//# sourceMappingURL=get-season-with-recipes.js.map","export enum ROUTES {\n  BADGES = 'badges',\n  CREATE = 'create',\n  COUNTRY = 'country',\n  COUNTRY_FOOD_NAME_MAP = 'country-food-name-map',\n  COUNTRY_RECIPE_NAME_MAP = 'country-recipe-name-map',\n  EDIT = 'edit',\n  FOOD = 'food',\n  HOME = 'home',\n  LOGIN = '',\n  RECIPE = 'recipe',\n  REGION = 'region',\n  REGION_FOOD_SEASON_MAP = 'region-food-season-map',\n  REPORTS_FOOD_MISSING_RECIPES = 'report-food-missing-recipes',\n  USER = 'user'\n}\n","export enum FORM_BUTTON_TEXT {\n  CREATE = 'Create',\n  UPDATE = 'Update'\n}\n","import {\n  ENDPOINT_LOGIN,\n  ENDPOINT_COUNTRY,\n  ENDPOINT_COUNTRY_FOOD_NAME_MAP,\n  ENDPOINT_REGION_FOOD_SEASON_MAP,\n  ENDPOINT_COUNTRY_RECIPE_NAME_MAP,\n  ENDPOINT_FOOD_DETAILS,\n  ENDPOINT_RECIPE,\n  ENDPOINT_REGION,\n  ENDPOINT_USER,\n  ENDPOINT_BADGE,\n  ENDPOINT_FOOD_WITH_NO_RECIPES,\n  ENDPOINT_REPORTS\n} from '@chrisb-dev/seasonal-shared-models';\n\nconst ADMIN_BACKEND_URL = process.env.REACT_APP_ADMIN_BACKEND_URL\n  || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/admin';\n\nexport const LOGIN_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_LOGIN}`;\n\nexport const BADGE_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_BADGE}`;\n\nexport const COUNTRY_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_COUNTRY}`;\n\nexport const COUNTRY_FOOD_NAME_MAP_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_COUNTRY_FOOD_NAME_MAP}`;\n\nexport const REGION_FOOD_SEASON_MAP_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_REGION_FOOD_SEASON_MAP}`;\n\nexport const COUNTRY_RECIPE_NAME_MAP_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_COUNTRY_RECIPE_NAME_MAP}`;\n\nexport const FOOD_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_FOOD_DETAILS}`;\n\nexport const RECIPE_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_RECIPE}`;\n\nexport const REGION_URL = `${ADMIN_BACKEND_URL}/${ENDPOINT_REGION}`;\n\nexport const USER_URL =\n  process.env.REACT_APP_USER_URL || `${ADMIN_BACKEND_URL}/${ENDPOINT_USER}`;\n\nexport const FOOD_WITH_NO_RECIPES_URL =\n  `${ADMIN_BACKEND_URL}/${ENDPOINT_REPORTS}/${ENDPOINT_FOOD_WITH_NO_RECIPES}`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Checkbox,\n  Input,\n  ISelectOption,\n  Multiselect,\n  SearchableMultiselect,\n  Select,\n  IValidation,\n  LoadingSpinner,\n  PrimaryButton,\n  TextMedium,\n  ValidationMessage\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './DataForm.scss';\nimport { FORM_BUTTON_TEXT } from '../../consts';\n\nexport interface IFormField {\n  name?: string;\n  options?: ISelectOption[];\n  type: 'text' | 'number' | 'password' | 'checkbox' | 'select'\n    | 'multiselect'| 'searchable-multiselect';\n  validation?: IValidation[];\n}\nexport type IDataFormConfigProps<T> = { [key in keyof T & string]?: IFormField };\nexport interface IDateFormProps<T> {\n  item: Partial<T>;\n  sendData?: (data: T) => Promise<T | void>;\n  formConfig: IDataFormConfigProps<T> | null;\n  processItem?: (\n    item: Partial<T>,\n    previousItem: Partial<T> | null\n  ) => Partial<T>;\n  buttonText?: string;\n  goBackOnUpdate?: boolean;\n}\n\nexport function DataForm<T>({\n  item,\n  sendData,\n  formConfig,\n  processItem,\n  buttonText = FORM_BUTTON_TEXT.UPDATE,\n  goBackOnUpdate = true\n}: IDateFormProps<T>) {\n  const [itemState, setItemState] = useState<Partial<T>>(item);\n\n  useEffect(() => {\n    // Select first item from select if not set\n    if (formConfig && item) {\n      const selectFields = Object.entries(formConfig)\n        .filter(([, field]) => (field as IFormField).type === 'select');\n      const newItem = Object.entries(item).reduce((builtItem, [key, value]) => {\n        const matchingField = selectFields\n          .find(([fieldKey]) => fieldKey === key);\n        const selectOptions = matchingField\n          && (matchingField[1] as IFormField).options!.map((option) => option.value);\n        return {\n          ...builtItem,\n          [key]: selectOptions && !selectOptions.includes(value as string | number)\n            ? selectOptions[0]\n            : value\n        };\n      }, {} as T);\n      setItemState(newItem);\n    }\n  }, [item, formConfig]);\n\n  const [errorState, setErrorState] = useState<string | null>(null);\n  const [validationState, setValidationState] = useState<\n    { [key in keyof T]?: string[] }\n  >({});\n  const [isLoadingState, setIsLoadingState] = useState<boolean>(false);\n\n  const updateItem = (\n    newItem: Partial<T>\n  ) => {\n    if (processItem) {\n      const processedItem = processItem(newItem, itemState);\n      setItemState(processedItem);\n    } else {\n      setItemState(newItem);\n    }\n  };\n\n  const submit = async () => {\n    try {\n      setIsLoadingState(true);\n      const updatedItem = await sendData!(itemState as T);\n      if (updatedItem) {\n        updateItem(updatedItem);\n        setIsLoadingState(false);\n        if (goBackOnUpdate) {\n          window.history.back();\n        }\n      }\n    } catch (error) {\n      setIsLoadingState(false);\n      setErrorState(error.message);\n    }\n  };\n\n  const updateField = (\n    name: keyof T,\n    value: string | string[] | number | boolean,\n    validation: IValidation[] | undefined\n  ) => {\n    if (validation) {\n      const errors = validation.map((validationFunction) =>\n        validationFunction(value)\n      );\n      setValidationState({\n        ...validationState,\n        [name]: errors\n      });\n    }\n    const newItem = {\n      ...itemState,\n      [name]: value\n    };\n    updateItem(newItem);\n  };\n\n  return (\n    <div className='c-data-form'>\n      <div>\n        {\n          formConfig && Object.entries(formConfig).map(([key, formField]) => {\n            const { options, type, validation } = formField as IFormField;\n            const prop = key as keyof T;\n            const value = itemState[prop] as any;\n            const placeholder = key[0].toUpperCase()\n              + key.replace( /([A-Z])/g, ' $1').slice(1);\n            const inputs = {\n              className: 'c-data-form__input',\n              onChange: (\n                changedValue: number | string | string[] | boolean\n              ) => updateField(prop, changedValue, validation),\n              options,\n              placeholder,\n              type,\n              value\n            };\n            const validationErrors = validationState[prop]\n              && validationState[prop]!.filter((error) => error !== null);\n            return (\n              <label key={key} className='c-data-form__field'>\n                <TextMedium className='c-data-form__label'>{placeholder}</TextMedium>\n                {\n                  (() => {\n                    switch (type) {\n                      case 'number':\n                      case 'text':\n                      case 'password':\n                        return <Input {...{\n                          ...inputs,\n                          type: inputs.type as 'text' | 'number' }\n                        } />;\n                      case 'checkbox':\n                        return <Checkbox {...{\n                          ...inputs,\n                          className: `${inputs.className} c-data-form__input--checkbox`\n                        }} />;\n                      case 'multiselect':\n                        return <Multiselect {...{\n                          ...inputs,\n                          options: inputs.options!\n                        } as any} />;\n                      case 'searchable-multiselect':\n                        return <SearchableMultiselect {...{\n                          ...inputs,\n                          options: inputs.options!\n                        } as any} />;\n                      case 'select':\n                        return <Select {...{\n                          ...inputs,\n                          options: inputs.options!\n                        }} />;\n                    }\n                  })()\n                }\n                <div>\n                  {\n                    validationErrors\n                    && validationErrors[0]\n                    && <ValidationMessage>{validationErrors[0]}</ValidationMessage>\n                  }\n                </div>\n              </label>\n            );\n          })\n        }\n      </div>\n      <PrimaryButton className='c-data-form__submit-btn' onClick={submit}>\n        {buttonText}\n      </PrimaryButton>\n      {\n        errorState && <ValidationMessage>{errorState}</ValidationMessage>\n      }\n      {\n        isLoadingState\n        && <div className='c-data-form__loading-spinner'>\n            <LoadingSpinner />\n          </div>\n      }\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype ICountryFormConfigProps = IDataFormConfigProps<ICountry>;\n\nconst countryFormConfig: ICountryFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountry: FC<IGetAuthorizedBackendDataProps<ICountry>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => (\n  <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={countryFormConfig}\n    buttonText={buttonText} />\n);\n","import { getStorage } from '../consts';\n\nexport const getAccessTokenHeaders = (): HeadersInit => {\n  const token = getStorage().accessToken;\n  return token\n  ? {\n    Authorization: `Bearer ${token}`\n  }\n  : {};\n};\n","import { getAccessTokenHeaders } from './get-access-token-headers';\n\nexport const makeAuthorizedRequest = async <T>(\n  url: string,\n  requestOptions?: RequestInit\n): Promise<T> => {\n  const response = await fetch(\n    url,\n    {\n      ...requestOptions,\n      headers: {\n        ...(requestOptions && requestOptions.headers),\n        'Content-Type': 'application/json',\n        ...getAccessTokenHeaders()\n      }\n    }\n  );\n  if (response.status === 401) {\n    window.location.href = process.env.PUBLIC_URL;\n    throw new Error('Unauthorized');\n  }\n  const result = await response.json();\n  if (result.error) {\n    throw new Error(result.error);\n  }\n  return result;\n};\n","import { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { BADGE_URL } from '../config';\n\nexport const createBadge = async (badge: IBadge): Promise<IBadge> =>\n  makeAuthorizedRequest<IBadge>(BADGE_URL, {\n    body: JSON.stringify(badge),\n    method: 'POST'\n  });\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\n\nexport const createCountryFoodNameMap = async (\n  country: ICountryFoodNameMap\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(COUNTRY_FOOD_NAME_MAP_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\n\nexport const createCountryRecipeNameMap = async (\n  country: ICountryRecipeNameMap\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(COUNTRY_RECIPE_NAME_MAP_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_URL } from '../config';\n\nexport const createCountry = async (country: ICountry): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(COUNTRY_URL, {\n    body: JSON.stringify(country),\n    method: 'POST'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { FOOD_URL } from '../config';\n\nexport const createFood = async (food: IFood): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(FOOD_URL, {\n    body: JSON.stringify(food),\n    method: 'POST'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { RECIPE_URL } from '../config';\n\nexport const createRecipe = async (recipe: IRecipe): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(RECIPE_URL, {\n    body: JSON.stringify(recipe),\n    method: 'POST'\n  });\n","import { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_FOOD_SEASON_MAP_URL } from '../config';\n\nexport const createRegionFoodSeasonMap = async (\n  regionFoodSeasonMap: IRegionFoodSeasonMap\n): Promise<IRegionFoodSeasonMap> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap>(REGION_FOOD_SEASON_MAP_URL, {\n    body: JSON.stringify(regionFoodSeasonMap),\n    method: 'POST'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_URL } from '../config';\n\nexport const createRegion = async (region: IDbRegion): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(REGION_URL, {\n    body: JSON.stringify(region),\n    method: 'POST'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { USER_URL } from '../config';\n\nexport const createUser = async (user: IUser): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(USER_URL, {\n    body: JSON.stringify(user),\n    method: 'POST'\n  });\n","import { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { BADGE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteBadge = async (id: string): Promise<IBadge> =>\n  makeAuthorizedRequest<IBadge>(`${BADGE_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountryToFoodNameMap = async (\n  id: string\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(`${COUNTRY_FOOD_NAME_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountryToRecipeNameMap = async (\n  id: string\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(`${COUNTRY_RECIPE_NAME_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteCountry = async (id: string): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(`${COUNTRY_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteFood = async (id: string): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(`${FOOD_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRecipe = async (id: string): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(`${RECIPE_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_FOOD_SEASON_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRegionFoodSeasonMap = async (\n  id: string\n): Promise<IRegionFoodSeasonMap> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap>(`${REGION_FOOD_SEASON_MAP_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteRegion = async (id: string): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(`${REGION_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const deleteUser = async (id: string): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(`${USER_URL}/${id}`, {\n    method: 'DELETE'\n  });\n","import { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { BADGE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllBadges = async (): Promise<IBadge[]> =>\n  makeAuthorizedRequest<IBadge[]>(BADGE_URL);\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountries = async (): Promise<ICountry[]> =>\n  makeAuthorizedRequest<ICountry[]>(COUNTRY_URL);\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountryFoodNameMap = async (): Promise<ICountryFoodNameMap[]> =>\n  makeAuthorizedRequest<ICountryFoodNameMap[]>(COUNTRY_FOOD_NAME_MAP_URL);\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllCountryRecipeNameMap = async (): Promise<ICountryRecipeNameMap[]> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap[]>(COUNTRY_RECIPE_NAME_MAP_URL);\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllFood = async (): Promise<IFood[]> =>\n  makeAuthorizedRequest<IFood[]>(FOOD_URL);\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllRecipes = async (): Promise<IRecipe[]> =>\n  makeAuthorizedRequest<IRecipe[]>(RECIPE_URL);\n","import { REGION_FOOD_SEASON_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport const getAllRegionFoodSeasonMap = async (): Promise<IRegionFoodSeasonMap[]> =>\n  makeAuthorizedRequest<IRegionFoodSeasonMap[]>(\n    REGION_FOOD_SEASON_MAP_URL\n  );\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllRegions = async (): Promise<IDbRegion[]> =>\n  makeAuthorizedRequest<IDbRegion[]>(REGION_URL);\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getAllUsers = async (): Promise<IUser[]> =>\n  makeAuthorizedRequest<IUser[]>(USER_URL);\n","import { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { BADGE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneBadge = async (id: string): Promise<IBadge> =>\n  makeAuthorizedRequest<IBadge>(`${BADGE_URL}/${id}`);\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneCountry = async (id: string): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(`${COUNTRY_URL}/${id}`);\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneCountryFoodNameMap = async (id: string): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(`${COUNTRY_FOOD_NAME_MAP_URL}/${id}`);\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneCountryRecipeNameMap = async (id: string): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(`${COUNTRY_RECIPE_NAME_MAP_URL}/${id}`);\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneFood = async (id: string): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(`${FOOD_URL}/${id}`);\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneRecipe = async (id: string): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(`${RECIPE_URL}/${id}`);\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { REGION_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneRegion = async (id: string): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(`${REGION_URL}/${id}`);\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { USER_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getOneUser = async (id: string): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(`${USER_URL}/${id}`);\n","import { LOGIN_URL } from '../config';\nimport { setAccessToken } from './set-access-token';\n\nexport const loginRequest = async (\n  username: string, password: string\n): Promise<void> => {\n  const response = await fetch(LOGIN_URL, {\n    body: JSON.stringify({\n      password,\n      username\n    }),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  });\n  const result = await response.json();\n  if (result.error) {\n    throw new Error(result.error);\n  }\n  setAccessToken(result.token);\n  return;\n};\n","import { getStorage } from '../consts';\n\nexport const setAccessToken = (token: string) => {\n  getStorage().accessToken = token;\n};\n","import { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { BADGE_URL } from '../config';\n\nexport const updateBadge = async (badge: IBadge): Promise<IBadge> =>\n  makeAuthorizedRequest<IBadge>(BADGE_URL, {\n    body: JSON.stringify(badge),\n    method: 'PATCH'\n  });\n","import { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_URL } from '../config';\n\nexport const updateCountry = async (country: ICountry): Promise<ICountry> =>\n  makeAuthorizedRequest<ICountry>(COUNTRY_URL, {\n    body: JSON.stringify(country),\n    method: 'PATCH'\n  });\n","import { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_FOOD_NAME_MAP_URL } from '../config';\n\nexport const updateCountryFoodNameMap = async (\n  countryFoodNameMap: ICountryFoodNameMap\n): Promise<ICountryFoodNameMap> =>\n  makeAuthorizedRequest<ICountryFoodNameMap>(COUNTRY_FOOD_NAME_MAP_URL, {\n    body: JSON.stringify(countryFoodNameMap),\n    method: 'PATCH'\n  });\n","import { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { COUNTRY_RECIPE_NAME_MAP_URL } from '../config';\n\nexport const updateCountryRecipeNameMap = async (\n  countryRecipeNameMap: ICountryRecipeNameMap\n): Promise<ICountryRecipeNameMap> =>\n  makeAuthorizedRequest<ICountryRecipeNameMap>(COUNTRY_RECIPE_NAME_MAP_URL, {\n    body: JSON.stringify(countryRecipeNameMap),\n    method: 'PATCH'\n  });\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { FOOD_URL } from '../config';\n\nexport const updateFood = async (food: IFood): Promise<IFood> =>\n  makeAuthorizedRequest<IFood>(FOOD_URL, {\n    body: JSON.stringify(food),\n    method: 'PATCH'\n  });\n","import { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { RECIPE_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const updateRecipe = async (recipe: IRecipe): Promise<IRecipe> =>\n  makeAuthorizedRequest<IRecipe>(RECIPE_URL, {\n    body: JSON.stringify(recipe),\n    method: 'PATCH'\n  });\n","import { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { REGION_URL } from '../config';\n\nexport const updateRegion = async (region: IDbRegion): Promise<IDbRegion> =>\n  makeAuthorizedRequest<IDbRegion>(REGION_URL, {\n    body: JSON.stringify(region),\n    method: 'PATCH'\n  });\n","import { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { makeAuthorizedRequest } from './make-authorized-request';\nimport { USER_URL } from '../config';\n\nexport const updateUser = async (user: IUser): Promise<IUser> =>\n  makeAuthorizedRequest<IUser>(USER_URL, {\n    body: JSON.stringify(user),\n    method: 'PATCH'\n  });\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryRecipeNameMap, ICountry, IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { getAllCountries, getAllRecipes } from '../../services';\n\ntype ICountryRecipeNameMapFormConfigProps =\n  IDataFormConfigProps<ICountryRecipeNameMap>;\n\nconst initialCountryRecipeNameMapFormConfig: ICountryRecipeNameMapFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountryRecipeNameMap: FC<\n  IGetAuthorizedBackendDataProps<ICountryRecipeNameMap>\n> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [\n    config,\n    setConfig\n  ] = useState<ICountryRecipeNameMapFormConfigProps | null>(null);\n\n  const updateConfigWithDropdowns = (\n    countries: ICountry[],\n    recipes: IRecipe[]\n  ) => {\n    const countryOptions = countries.map((country) => ({\n      label: country.name,\n      value: country.id\n    }));\n    const recipeOptions = recipes.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialCountryRecipeNameMapFormConfig,\n      countryId: {\n        options: countryOptions,\n        type: 'select'\n      },\n      recipeId: {\n        options: recipeOptions,\n        type: 'select'\n      }\n    });\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllCountries(),\n      getAllRecipes()\n    ]).then(([countries, recipes]) =>\n      updateConfigWithDropdowns(countries, recipes)\n    );\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood, IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllFood, getAllBadges } from '../../services';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IFoodFormConfigProps = IDataFormConfigProps<IFood>;\n\nconst initialFoodFormConfig: IFoodFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  imageUrlSmall: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  description: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormFood: FC<IGetAuthorizedBackendDataProps<IFood>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [config, setConfig] = useState<IFoodFormConfigProps | null>(null);\n\n  const updateConfig = (\n    food: IFood[],\n    badges: IBadge[]\n  ) => {\n    const foodOptions = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    const badgeOptions = badges.map((badge) => ({\n      label: badge.name,\n      value: badge.id\n    }));\n    setConfig({\n      ...initialFoodFormConfig,\n      substituteFoodIds: {\n        options: foodOptions,\n        type: 'searchable-multiselect'\n      },\n\n      badgeIds: {\n        options: badgeOptions,\n        type: 'searchable-multiselect'\n      }\n    });\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllFood(),\n      getAllBadges()\n    ]).then(([food, badges]) => updateConfig(\n      food as IFood[], badges as IBadge[]\n    ));\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { getAllFood } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IRecipe, IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { DataForm, IDataFormConfigProps } from '../DataForm/DataForm';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IRecipeFormConfigProps = IDataFormConfigProps<IRecipe>;\n\nconst initialRecipeFormConfig: IRecipeFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  linkUrl: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  imageUrlSmall: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  isVegan: {\n    type: 'checkbox'\n  },\n\n  isVegetarian: {\n    type: 'checkbox'\n  }\n};\n\nexport const BaseFormRecipe: FC<IGetAuthorizedBackendDataProps<IRecipe>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [config, setConfig] = useState<IRecipeFormConfigProps | null>(null);\n\n  const updateConfigWithFoodDropdowns = (food: IFood[]) => {\n    const options = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialRecipeFormConfig,\n      primaryFoodInRecipeIds: {\n        options,\n        type: 'searchable-multiselect'\n      },\n      secondaryFoodInRecipeIds: {\n        options,\n        type: 'searchable-multiselect'\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllFood()\n      .then((food) => updateConfigWithFoodDropdowns(food));\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllCountries } from '../../services';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport type IDbRegionFormConfigProps = IDataFormConfigProps<IDbRegion>;\n\nconst initialRegionFormConfig: IDbRegionFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  isDisabled: {\n    type: 'checkbox'\n  },\n\n  lat: {\n    type: 'number',\n    validation: [requiredValidation]\n  },\n  lng: {\n    type: 'number',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormRegion: FC<IGetAuthorizedBackendDataProps<IDbRegion>> = ({\n  items,\n  updateMethod,\n  buttonText,\n  additionalConfig\n}) => {\n  const [config, setConfig] = useState<IDbRegionFormConfigProps | null>(null);\n\n  useEffect(() => {\n    getAllCountries()\n      .then((countries) => {\n        const options = countries.map((country) => ({\n          label: country.name,\n          value: country.id\n        }));\n        setConfig({\n          ...additionalConfig,\n          ...initialRegionFormConfig,\n          countryId: {\n            options,\n            type: 'select',\n            validation: [requiredValidation]\n          }\n        });\n      });\n  }, [additionalConfig]);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllSeasons } from '@chrisb-dev/seasonal-shared-frontend-utilities';\nimport {\n  getAllFood,\n  getAllRegions,\n  deleteRegionFoodSeasonMap,\n  createRegionFoodSeasonMap,\n  getAllRegionFoodSeasonMap\n} from '../../services';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport interface IRegionFoodSeasonMapForm {\n  regionId: string;\n  foodId: string;\n  seasonIds: string[];\n}\n\ntype IRegionFoodSeasonMapFormConfigProps =\n  IDataFormConfigProps<IRegionFoodSeasonMapForm>;\n\nexport const BaseFormRegionFoodSeasonMap: FC<{}> = () => {\n  const [itemData, setItemData] =\n    useState<Partial<IRegionFoodSeasonMapForm | null>>(null);\n  const [config, setConfig] =\n    useState<IRegionFoodSeasonMapFormConfigProps | null>(null);\n  const [allRegionFoodSeasonMaps, setAllRegionFoodSeasonMaps] =\n    useState<IRegionFoodSeasonMap[] | null>(null);\n\n  const updateRegionFoodSeasonMap = async (\n    form: IRegionFoodSeasonMapForm\n  ) => {\n    const existingItemsForRegionAndSeason =\n      allRegionFoodSeasonMaps!\n        .filter((item) =>\n          item.regionId === form.regionId\n          && item.foodId === form.foodId\n        ).map((item) => item.id);\n    const generateItems = (seasonIds: string[]): IRegionFoodSeasonMap[] =>\n      seasonIds.map((seasonId) => ({\n        foodId: form.foodId,\n        regionId: form.regionId,\n        seasonId\n      }) as IRegionFoodSeasonMap);\n    const toCreate = generateItems(form.seasonIds);\n\n    for (const id of existingItemsForRegionAndSeason) {\n      await deleteRegionFoodSeasonMap(id);\n    }\n    for (const item of toCreate) {\n      await createRegionFoodSeasonMap(item);\n    }\n    const allRegionFoodSeasonMap = await getAllRegionFoodSeasonMap();\n    setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n    return form;\n  };\n\n  const updateSeasonIds = (\n    item: Partial<IRegionFoodSeasonMap>,\n    previousItem: Partial<IRegionFoodSeasonMap> | null,\n    allRegionFoodSeasonMapsResult: IRegionFoodSeasonMap[] | null\n  ) => {\n    if (\n      previousItem === null\n      || item.foodId !== previousItem.foodId\n      || item.regionId !== previousItem.regionId\n    ) {\n      const seasonIds = allRegionFoodSeasonMapsResult\n        ? allRegionFoodSeasonMapsResult.filter((regionFoodSeason) =>\n          regionFoodSeason.regionId === item.regionId\n          && regionFoodSeason.foodId === item.foodId\n        ).map((regionFoodSeason) => regionFoodSeason.seasonId)\n        : undefined;\n      return {\n        ...item,\n        seasonIds\n      };\n    }\n    return item;\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllRegions(),\n      getAllFood(),\n      getAllSeasons(),\n      getAllRegionFoodSeasonMap()\n    ]).then(([\n      regions, food, seasons,\n      allRegionFoodSeasonMap\n    ]) => {\n      setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n      const regionOptions = regions.map((region) => ({\n        label: region.name,\n        value: region.id\n      }));\n      const foodOptions = food.map((foodItem) => ({\n        label: foodItem.name,\n        value: foodItem.id\n      }));\n      const seasonOptions = seasons.map((season) => ({\n        label: season.name,\n        value: season.id\n      }));\n      setItemData((item) => updateSeasonIds({\n        ...item,\n        regionId: regionOptions[0].value,\n\n        foodId: foodOptions[0].value\n      }, null, allRegionFoodSeasonMap));\n      setConfig((currentConfig) => ({\n        ...currentConfig,\n        regionId: {\n          options: regionOptions,\n          type: 'select'\n        },\n\n        foodId: {\n          options: foodOptions,\n          type: 'select'\n        },\n\n        seasonIds: {\n          options: seasonOptions,\n          type: 'multiselect'\n        }\n      }));\n    });\n  }, [setAllRegionFoodSeasonMaps]);\n\n  return itemData && <DataForm item={itemData}\n    sendData={updateRegionFoodSeasonMap}\n    formConfig={config}\n    processItem={(item, previousItem) => updateSeasonIds(\n      item, previousItem, allRegionFoodSeasonMaps\n    )}\n    buttonText='Create'\n    goBackOnUpdate={false} />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport { getAllSeasons } from '@chrisb-dev/seasonal-shared-frontend-utilities';\nimport {\n  getAllFood,\n  getAllRegions,\n  deleteRegionFoodSeasonMap,\n  createRegionFoodSeasonMap,\n  getAllRegionFoodSeasonMap\n} from '../../services';\nimport { IRegionFoodSeasonMap } from '@chrisb-dev/seasonal-shared-models';\n\nexport interface IRegionSeasonFoodMapForm {\n  regionId: string;\n  seasonId: string;\n  foodIds: string[];\n}\n\ntype IRegionSeasonFoodMapFormConfigProps =\n  IDataFormConfigProps<IRegionSeasonFoodMapForm>;\n\nexport const BaseFormRegionSeasonFoodMap: FC<{}> = () => {\n  const [itemData, setItemData] =\n    useState<Partial<IRegionSeasonFoodMapForm | null>>(null);\n  const [config, setConfig] =\n    useState<IRegionSeasonFoodMapFormConfigProps | null>(null);\n  const [allRegionFoodSeasonMaps, setAllRegionFoodSeasonMaps] =\n    useState<IRegionFoodSeasonMap[] | null>(null);\n\n  const updateRegionFoodSeasonMap = async (\n    form: IRegionSeasonFoodMapForm\n  ) => {\n    const existingItemsForRegionAndSeason =\n      allRegionFoodSeasonMaps!\n        .filter((item) =>\n          item.regionId === form.regionId\n          && item.seasonId === form.seasonId\n        ).map((item) => item.id);\n    const generateItems = (foodIds: string[]): IRegionFoodSeasonMap[] =>\n      foodIds.map((foodId) => ({\n        foodId,\n        regionId: form.regionId,\n        seasonId: form.seasonId\n      }) as IRegionFoodSeasonMap);\n    const toCreate = generateItems(form.foodIds);\n\n    for (const id of existingItemsForRegionAndSeason) {\n      await deleteRegionFoodSeasonMap(id);\n    }\n    for (const item of toCreate) {\n      await createRegionFoodSeasonMap(item);\n    }\n    const allRegionFoodSeasonMap = await getAllRegionFoodSeasonMap();\n    setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n    return form;\n  };\n\n  const updateFoodIds = (\n    item: Partial<IRegionFoodSeasonMap>,\n    previousItem: Partial<IRegionFoodSeasonMap> | null,\n    allRegionFoodSeasonMapsResult: IRegionFoodSeasonMap[] | null\n  ) => {\n    if (\n      previousItem === null\n      || item.seasonId !== previousItem.seasonId\n      || item.regionId !== previousItem.regionId\n    ) {\n      const foodIds = allRegionFoodSeasonMapsResult\n        ? allRegionFoodSeasonMapsResult.filter((regionFoodSeason) =>\n          regionFoodSeason.regionId === item.regionId\n          && regionFoodSeason.seasonId === item.seasonId\n        ).map((regionFoodSeason) => regionFoodSeason.foodId)\n        : undefined;\n      return {\n        ...item,\n        foodIds\n      };\n    }\n    return item;\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllRegions(),\n      getAllFood(),\n      getAllSeasons(),\n      getAllRegionFoodSeasonMap()\n    ]).then(([\n      regions, food, seasons,\n      allRegionFoodSeasonMap\n    ]) => {\n      setAllRegionFoodSeasonMaps(allRegionFoodSeasonMap);\n      const regionOptions = regions.map((region) => ({\n        label: region.name,\n        value: region.id\n      }));\n      const foodOptions = food.map((foodItem) => ({\n        label: foodItem.name,\n        value: foodItem.id\n      }));\n      const seasonOptions = seasons.map((season) => ({\n        label: season.name,\n        value: season.id\n      }));\n      setItemData((data) => updateFoodIds({\n        ...data,\n        regionId: regionOptions[0].value,\n\n        seasonId: seasonOptions[0].value\n      }, null, allRegionFoodSeasonMap));\n      setConfig((currentConfig) => ({\n        ...currentConfig,\n        regionId: {\n          options: regionOptions,\n          type: 'select'\n        },\n\n        seasonId: {\n          options: seasonOptions,\n          type: 'select'\n        },\n\n        foodIds: {\n          options: foodOptions,\n          type: 'searchable-multiselect'\n        }\n      }));\n    });\n  }, [setAllRegionFoodSeasonMaps]);\n\n  return itemData && <DataForm item={itemData}\n    sendData={updateRegionFoodSeasonMap}\n    formConfig={config}\n    processItem={(item, previousItem) => updateFoodIds(\n      item, previousItem, allRegionFoodSeasonMaps\n    )}\n    buttonText='Create'\n    goBackOnUpdate={false} />;\n};\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IUser, USER_ROLES } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IUserFormConfigProps = IDataFormConfigProps<IUser>;\n\nconst userFormConfig: IUserFormConfigProps = {\n  username: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  password: {\n    type: 'password',\n    validation: [requiredValidation]\n  },\n\n  roles: {\n    options: Object.values(USER_ROLES).map((role) => ({\n      label: role,\n      value: role\n    })),\n    type: 'multiselect'\n  }\n};\n\nexport const BaseFormUser: FC<IGetAuthorizedBackendDataProps<IUser>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => (\n  <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={userFormConfig}\n    buttonText={buttonText} />\n);\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\ntype IBadgeFormConfigProps = IDataFormConfigProps<IBadge>;\n\nconst badgeFormConfig: IBadgeFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormBadge: FC<IGetAuthorizedBackendDataProps<IBadge>> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => (\n  <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={badgeFormConfig}\n    buttonText={buttonText} />\n);\n","import React, { FC } from 'react';\nimport './LayoutWithTitle.scss';\nimport { TextHeadingMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\n\ninterface ILayoutWithTitle {\n  title?: string;\n}\n\nexport const LayoutWithTitle: FC<ILayoutWithTitle> = ({\n  children,\n  title\n}) => (\n  <div className='c-layout-with-title'>\n    {\n      title\n      && <TextHeadingMedium className='c-layout-with-title__title'>\n        {title}\n      </TextHeadingMedium>\n    }\n    { children }\n  </div>\n);\n","import React, { FC } from 'react';\nimport './MainPageLayout.scss';\n\nexport const MainPageLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-main-page-layout'>\n    { children }\n  </div>\n);\n","import React, { FC } from 'react';\nimport './ModalLayout.scss';\n\nexport const ModalLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-modal-layout'>\n    { children }\n  </div>\n);\n","import React, { FC } from 'react';\nimport { createBadge } from '../../services';\nimport { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormBadge } from '../BaseFormBadge/BaseFormBadge';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyBadgeItem = (): IBadge => ({\n  name: ''\n} as IBadge);\n\nexport const CreateBadgeForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Badge'>\n    <BaseFormBadge\n      items={createEmptyBadgeItem()}\n      updateMethod={createBadge}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC, useEffect, useState } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryFoodNameMap, ICountry, IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { IDataFormConfigProps, DataForm } from '../DataForm/DataForm';\nimport {\n  requiredValidation\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { getAllCountries, getAllFood } from '../../services';\n\ntype ICountryFoodNameMapFormConfigProps =\n  IDataFormConfigProps<ICountryFoodNameMap>;\n\nconst initialCountryFoodNameMapFormConfig: ICountryFoodNameMapFormConfigProps = {\n  name: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const BaseFormCountryFoodNameMap: FC<\n  IGetAuthorizedBackendDataProps<ICountryFoodNameMap>\n> = ({\n  items,\n  updateMethod,\n  buttonText\n}) => {\n  const [\n    config,\n    setConfig\n  ] = useState<ICountryFoodNameMapFormConfigProps | null>(null);\n\n  const updateConfigWithDropdowns = (\n    countries: ICountry[],\n    food: IFood[]\n  ) => {\n    const countryOptions = countries.map((country) => ({\n      label: country.name,\n      value: country.id\n    }));\n    const foodOptions = food.map((foodItem) => ({\n      label: foodItem.name,\n      value: foodItem.id\n    }));\n    setConfig({\n      ...initialCountryFoodNameMapFormConfig,\n      countryId: {\n        options: countryOptions,\n        type: 'select'\n      },\n      foodId: {\n        options: foodOptions,\n        type: 'select'\n      }\n    });\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getAllCountries(),\n      getAllFood()\n    ]).then(([countries, food]) =>\n      updateConfigWithDropdowns(countries, food)\n    );\n  }, []);\n\n  return <DataForm item={items}\n    sendData={updateMethod}\n    formConfig={config}\n    buttonText={buttonText} />;\n};\n","import React, { FC } from 'react';\nimport { createCountryFoodNameMap } from '../../services';\nimport { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport {\n  BaseFormCountryFoodNameMap\n} from '../BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryFoodNameMapItem = (): ICountryFoodNameMap => ({\n  countryId: '',\n  foodId: '',\n  name: ''\n} as ICountryFoodNameMap);\n\nexport const CreateCountryFoodNameMapForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country Food Name Map'>\n    <BaseFormCountryFoodNameMap\n        items={createEmptyCountryFoodNameMapItem()}\n        updateMethod={createCountryFoodNameMap}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createCountry } from '../../services';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormCountry } from '../BaseFormCountry/BaseFormCountry';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryItem = (): ICountry => ({\n  name: ''\n} as ICountry);\n\nexport const CreateCountryForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country'>\n    <BaseFormCountry\n      items={createEmptyCountryItem()}\n      updateMethod={createCountry}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createCountryRecipeNameMap } from '../../services';\nimport { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport {\n  BaseFormCountryRecipeNameMap\n} from '../BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyCountryRecipeNameMapItem = (): ICountryRecipeNameMap => ({\n  countryId: '',\n  name: '',\n  recipeId: ''\n} as ICountryRecipeNameMap);\n\nexport const CreateCountryRecipeNameMapForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Country Recipe Name Map'>\n    <BaseFormCountryRecipeNameMap\n      items={createEmptyCountryRecipeNameMapItem()}\n      updateMethod={createCountryRecipeNameMap}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createFood } from '../../services';\nimport { BaseFormFood } from '../BaseFormFood/BaseFormFood';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyFoodItem = (): IFood => ({\n  description: '',\n  imageUrlSmall: '',\n  name: '',\n  substituteFoodIds: [] as string[]\n} as IFood);\n\nexport const CreateFoodForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Food'>\n    <BaseFormFood items={createEmptyFoodItem()}\n      updateMethod={createFood}\n      buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createRecipe } from '../../services';\nimport { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormRecipe } from '../BaseFormRecipe/BaseFormRecipe';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyRecipeItem = (): IRecipe => ({\n  imageUrlSmall: '',\n  isVegan: false,\n  isVegetarian: false,\n  linkUrl: '',\n  name: '',\n  primaryFoodInRecipeIds: [] as string[],\n  secondaryFoodInRecipeIds: [] as string[]\n} as IRecipe);\n\nexport const CreateRecipeForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Recipe'>\n    <BaseFormRecipe items={createEmptyRecipeItem()}\n        updateMethod={createRecipe}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createRegion } from '../../services';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormRegion, IDbRegionFormConfigProps } from '../BaseFormRegion/BaseFormRegion';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst createEmptyRegionItem = (): IDbRegion => ({\n  id: '',\n\n  countryId: undefined,\n  isDisabled: false,\n  lat: 0,\n  lng: 0,\n  name: ''\n} as IDbRegion);\n\nconst createOnlyFields: IDbRegionFormConfigProps = {\n  id: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  code: {\n    type: 'text',\n    validation: [requiredValidation]\n  }\n};\n\nexport const CreateRegionForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create Region'>\n    <BaseFormRegion items={createEmptyRegionItem()}\n      updateMethod={createRegion}\n      buttonText={FORM_BUTTON_TEXT.CREATE}\n      additionalConfig={createOnlyFields} />\n  </LayoutWithTitle>;\n","import React, { FC } from 'react';\nimport { createUser } from '../../services';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { BaseFormUser } from '../BaseFormUser/BaseFormUser';\nimport { FORM_BUTTON_TEXT } from '../../consts';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst createEmptyUserItem = (): IUser => ({\n  password: '',\n  roles: [] as string[],\n  username: ''\n} as IUser);\n\nexport const CreateUserForm: FC<{}> = () =>\n  <LayoutWithTitle title='Create User'>\n    <BaseFormUser items={createEmptyUserItem()}\n        updateMethod={createUser}\n        buttonText={FORM_BUTTON_TEXT.CREATE} />\n  </LayoutWithTitle>;\n","import React, { FC, useState, useEffect } from 'react';\nimport { IDataFormConfigProps } from '../DataForm/DataForm';\nimport { LoadingSpinner } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './GetAuthorizedBackendData.scss';\n\nexport interface IGetAuthorizedBackendDataProps<T> {\n  items: T;\n  reload?: () => void;\n  updateMethod?: (item: T) => Promise<T>;\n  buttonText?: string;\n  additionalConfig?: IDataFormConfigProps<T>;\n}\n\ninterface IGetAuthorizedBackendDataState<T> {\n  isLoading: boolean;\n  items: T | null;\n  error: string | null;\n}\n\nexport function GetAuthorizedBackendData<T>({\n  InnerComponent,\n  requestDataMethod,\n  updateMethod,\n  buttonText,\n  additionalConfig\n}: {\n  InnerComponent: FC<IGetAuthorizedBackendDataProps<T>>,\n  requestDataMethod: () => Promise<T>,\n  updateMethod?: (item: T) => Promise<T>,\n  buttonText?: string,\n  additionalConfig?: IDataFormConfigProps<T>\n}) {\n\n  const [state, setState] = useState<IGetAuthorizedBackendDataState<T>>({\n    error: null,\n    isLoading: true,\n    items: null\n  });\n\n  const requestNewData = () => {\n    requestDataMethod()\n      .then((items) => setState({\n        error: null,\n        isLoading: false,\n        items\n      })).catch((error) => setState({\n        error: error.message,\n        isLoading: false,\n        items: null\n      }));\n  };\n\n  useEffect(requestNewData, []);\n\n  return (\n    <div>\n      {\n        state.isLoading\n          ? <div className='c-get-authorized-backend-data__loading'>\n            <LoadingSpinner />\n          </div>\n          : <div>\n            {\n              !state.error && state.items\n                ? <InnerComponent\n                    items={state.items}\n                    reload={requestNewData}\n                    updateMethod={updateMethod}\n                    buttonText={buttonText}\n                    additionalConfig={additionalConfig}\n                  />\n                : <div>{state.error}</div>\n            }\n          </div>\n      }\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneBadge, updateBadge } from '../../services';\nimport { BaseFormBadge } from '../BaseFormBadge/BaseFormBadge';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditBadgeForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Badge'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormBadge}\n        requestDataMethod={() => getOneBadge(id as string)}\n        updateMethod={updateBadge}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneCountryFoodNameMap, updateCountryFoodNameMap } from '../../services';\nimport { BaseFormCountryFoodNameMap } from '../BaseFormCountryFoodNameMap/BaseFormCountryFoodNameMap';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryFoodNameMapForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Country Food Name Map'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormCountryFoodNameMap}\n        requestDataMethod={() => getOneCountryFoodNameMap(id as string)}\n        updateMethod={updateCountryFoodNameMap}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneCountry, updateCountry } from '../../services';\nimport { BaseFormCountry } from '../BaseFormCountry/BaseFormCountry';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Country'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormCountry}\n        requestDataMethod={() => getOneCountry(id as string)}\n        updateMethod={updateCountry}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneCountryRecipeNameMap, updateCountryRecipeNameMap } from '../../services';\nimport { BaseFormCountryRecipeNameMap } from '../BaseFormCountryRecipeNameMap/BaseFormCountryRecipeNameMap';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditCountryRecipeNameMapForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Country Recipe Name Map'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormCountryRecipeNameMap}\n        requestDataMethod={() => getOneCountryRecipeNameMap(id as string)}\n        updateMethod={updateCountryRecipeNameMap}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneFood, updateFood } from '../../services';\nimport { BaseFormFood } from '../BaseFormFood/BaseFormFood';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditFoodForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Food'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormFood}\n        requestDataMethod={() => getOneFood(id as string)}\n        updateMethod={updateFood}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport { getOneRecipe, updateRecipe } from '../../services';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { BaseFormRecipe } from '../BaseFormRecipe/BaseFormRecipe';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditRecipeForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Recipe'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormRecipe}\n        requestDataMethod={() => getOneRecipe(id as string)}\n        updateMethod={updateRecipe}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { BaseFormRegionFoodSeasonMap } from '../BaseFormRegionFoodSeasonMap/BaseFormRegionFoodSeasonMap';\nimport { BaseFormRegionSeasonFoodMap } from '../BaseFormRegionSeasonFoodMap/BaseFormRegionSeasonFoodMap';\nimport { BareButton } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport './EditRegionFoodSeasonMapForm.scss';\n\nexport const EditRegionFoodSeasonMapForm: FC = () => {\n  const [isInFoodFirstMode, setIsInFoodFirstMode] = useState(true);\n\n  const flipForm = () => setIsInFoodFirstMode(!isInFoodFirstMode);\n\n  return (\n    <div>\n      <BareButton\n        className='c-edit-region-food-season-map__flip-btn'\n        onClick={flipForm}>\n          {isInFoodFirstMode ? 'Select by season' : 'Select by food'}\n        </BareButton>\n      {\n        isInFoodFirstMode\n          ? <BaseFormRegionFoodSeasonMap />\n          : <BaseFormRegionSeasonFoodMap />\n      }\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneRegion, updateRegion } from '../../services';\nimport { BaseFormRegion } from '../BaseFormRegion/BaseFormRegion';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditRegionForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit Region'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormRegion}\n        requestDataMethod={() => getOneRegion(id as string)}\n        updateMethod={updateRegion}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { useParams } from 'react-router-dom';\nimport { getOneUser, updateUser } from '../../services';\nimport { BaseFormUser } from '../BaseFormUser/BaseFormUser';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nexport const EditUserForm: FC<{}> = () => {\n  const { id } = useParams();\n  return (\n    <LayoutWithTitle title='Edit User'>\n      <GetAuthorizedBackendData\n        InnerComponent={BaseFormUser}\n        requestDataMethod={async () => {\n          const user = await getOneUser(id as string);\n          return {\n            ...user,\n            password: ''\n          };\n        }}\n        updateMethod={updateUser}\n        />\n    </LayoutWithTitle>\n  );\n};\n","import React, { useState } from 'react';\nimport './DeleteModal.scss';\nimport { LoadingSpinner, BareButton, TextSmall, TextMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { ModalLayout } from '../../components-layouts';\n\nexport interface IDeleteModal<T> {\n  deleteItem: () => Promise<T>;\n  cancel: () => void;\n}\n\nexport const DeleteModal = <T extends {}> ({\n  deleteItem,\n  cancel\n}: IDeleteModal<T>) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const deleteButtonPressed = async () => {\n    setIsLoading(true);\n    await deleteItem();\n    setIsLoading(false);\n  };\n\n  return (\n    <ModalLayout>\n      <div className='c-delete-modal'>\n        <TextMedium>Are you sure you want to delete this item?</TextMedium>\n        <div className='c-delete-modal__btns'>\n          <BareButton onClick={cancel}>\n            <TextSmall>Cancel</TextSmall>\n          </BareButton>\n          <BareButton onClick={(deleteButtonPressed)}>\n            <TextSmall>Delete</TextSmall>\n          </BareButton>\n        </div>\n        {\n          isLoading\n          && <div className='c-delete-modal__spinner'><LoadingSpinner /></div>\n        }\n      </div>\n    </ModalLayout>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextSmall, TextMedium, BareButton } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { Redirect } from 'react-router-dom';\nimport './FullList.scss';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { DeleteModal } from '../DeleteModal/DeleteModal';\n\nexport interface IFullListProps<T> {\n  title: string;\n  items: T[] | undefined;\n  getItemId: (item: T) => string;\n  getItemName: (item: T) => string;\n  getItemEditUrl: (item: T) => string;\n  deleteItemFunc: (item: T) => Promise<T>;\n}\n\nexport const FullList = <T extends {}>({\n  title,\n  items,\n  getItemId,\n  getItemName,\n  getItemEditUrl,\n  deleteItemFunc\n}: IFullListProps<T>) => {\n  const [goToEditLink, setGoToEditLink] = useState<null | string>(null);\n  const [\n    deleteItemModalId,\n    setDeleteItemModalId\n  ] = useState<string | null>();\n\n  if (goToEditLink) {\n    return <Redirect to={goToEditLink} push={true} />;\n  }\n\n  return (\n    <div className='c-full-list'>\n      <LayoutWithTitle title={title}>\n        {\n          items && items.map((item) =>\n            <div className='c-full-list__item' key={getItemId(item)}>\n              <TextMedium className='c-full-list__item-name'>{getItemName(item)}</TextMedium>\n              <div className='c-full-list-item__options'>\n                <BareButton className='c-full-list-item__edit'\n                  onClick={() => setGoToEditLink(getItemEditUrl(item))}>\n                  <TextSmall>\n                    Edit\n                  </TextSmall>\n                </BareButton>\n                <BareButton\n                  onClick={() => setDeleteItemModalId(getItemId(item))}>\n                  <TextSmall>\n                    Delete\n                  </TextSmall>\n                </BareButton>\n              </div>\n              {\n                deleteItemModalId\n                && deleteItemModalId === getItemId(item)\n                && <DeleteModal\n                    cancel={() => setDeleteItemModalId(null)}\n                    deleteItem={() => deleteItemFunc(item)} />\n              }\n            </div>\n          )\n        }\n      </LayoutWithTitle>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { getAllBadges, deleteBadge } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IBadge } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListBadgesInner: FC<IGetAuthorizedBackendDataProps<IBadge[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Badges'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.BADGES}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteBadge(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country;\n    })}\n  />\n);\n\nexport const FullListBadges: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListBadgesInner}\n    requestDataMethod={getAllBadges}\n  />;\n","import React, { FC } from 'react';\nimport { getAllCountries, deleteCountry } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountry } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListCountriesInner: FC<IGetAuthorizedBackendDataProps<ICountry[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Countries'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountry(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country;\n    })}\n  />\n);\n\nexport const FullListCountries: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListCountriesInner}\n    requestDataMethod={getAllCountries}\n    />;\n","import React, { FC } from 'react';\nimport { getAllCountryFoodNameMap, deleteCountryToFoodNameMap, getAllFood, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryFoodNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nexport interface ICountryFoodNameMapViewItem extends ICountryFoodNameMap {\n  countryName: string | undefined;\n  foodName: string | undefined;\n}\n\nconst FullListCountryFoodNameMapInner: FC<IGetAuthorizedBackendDataProps<ICountryFoodNameMapViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Country Food Name Map'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => `${item.countryName} - ${item.foodName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY_FOOD_NAME_MAP}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountryToFoodNameMap(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country as ICountryFoodNameMapViewItem;\n    })}\n  />\n);\n\nexport const FullListCountryFoodNameMaps: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListCountryFoodNameMapInner}\n    requestDataMethod={async () => {\n      const [\n        foodNameMaps,\n        food,\n        countries\n      ] = await Promise.all([\n        getAllCountryFoodNameMap(),\n        getAllFood(),\n        getAllCountries()\n      ]);\n      return foodNameMaps.map((foodNameMap) => {\n        const matchingFood =\n          food.find((foodItem) => foodNameMap.foodId === foodItem.id);\n        const matchingCountry =\n          countries.find((country) => foodNameMap.countryId === country.id);\n        return {\n          ...foodNameMap,\n          countryName: matchingCountry && matchingCountry.name,\n          foodName: matchingFood && matchingFood.name\n        };\n      }).sort((a, b) => (\n        (a && a.countryName ? a.countryName : '') < (b && b.countryName ? b.countryName : '')\n          ? -1 : (\n            a.foodName && a.foodName ? a.foodName : ''\n          ) < (b && b.foodName ? b.foodName : '')\n            ? -1 : 1\n      ));\n    }}\n    />;\n","import React, { FC } from 'react';\nimport { getAllCountryRecipeNameMap, deleteCountryToRecipeNameMap, getAllRecipes, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { ICountryRecipeNameMap } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nexport interface ICountryRecipeNameMapViewItem extends ICountryRecipeNameMap {\n  countryName: string | undefined;\n  recipeName: string | undefined;\n}\n\nconst FullListCountryRecipeNameMapInner: FC<IGetAuthorizedBackendDataProps<ICountryRecipeNameMapViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Country Recipe Name Map'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => `${item.countryName} - ${item.recipeName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.COUNTRY_RECIPE_NAME_MAP}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteCountryToRecipeNameMap(item.id).then((country) => {\n      if (reload) {\n        reload();\n      }\n      return country as ICountryRecipeNameMapViewItem;\n    })}\n  />\n);\n\nexport const FullListCountryRecipeNameMaps: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListCountryRecipeNameMapInner}\n    requestDataMethod={async () => {\n      const [\n        recipeNameMaps,\n        recipes,\n        countries\n      ] = await Promise.all([\n        getAllCountryRecipeNameMap(),\n        getAllRecipes(),\n        getAllCountries()\n      ]);\n      return recipeNameMaps.map((recipeNameMap) => {\n        const matchingRecipe =\n          recipes.find((recipe) => recipeNameMap.recipeId === recipe.id);\n        const matchingCountry =\n          countries.find((country) => recipeNameMap.countryId === country.id);\n        return {\n          ...recipeNameMap,\n          countryName: matchingCountry && matchingCountry.name,\n          recipeName: matchingRecipe && matchingRecipe.name\n        };\n      }).sort((a, b) => (\n        (a && a.countryName ? a.countryName : '') < (b && b.countryName ? b.countryName : '')\n          ? -1\n            : (\n              a.recipeName && a.recipeName ? a.recipeName : ''\n            ) < (b && b.recipeName ? b.recipeName : '')\n              ? -1 : 1\n      ));\n    }}\n  />;\n","import React, { FC } from 'react';\nimport { getAllFood, deleteFood } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListFoodInner: FC<IGetAuthorizedBackendDataProps<IFood[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Food'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.FOOD}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteFood(item.id).then((food) => {\n      if (reload) {\n        reload();\n      }\n      return food;\n    })}\n  />\n);\nexport const FullListFood: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListFoodInner}\n    requestDataMethod={getAllFood}\n    />;\n","import React, { FC } from 'react';\nimport { getAllRecipes, deleteRecipe } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IRecipe } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListRecipesInner: FC<IGetAuthorizedBackendDataProps<IRecipe[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Recipes'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.RECIPE}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteRecipe(item.id).then((recipe) => {\n      if (reload) {\n        reload();\n      }\n      return recipe;\n    })}\n  />\n);\nexport const FullListRecipes: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListRecipesInner}\n    requestDataMethod={getAllRecipes}\n    />;\n","import React, { FC } from 'react';\nimport { getAllRegions, deleteRegion, getAllCountries } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IDbRegion } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nexport interface IRegionViewItem extends IDbRegion {\n  countryName: string | undefined;\n}\n\nconst FullListRegionsInner: FC<IGetAuthorizedBackendDataProps<IRegionViewItem[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Regions'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => `${item.countryName} - ${item.name}`}\n    getItemEditUrl={(item) => `${ROUTES.REGION}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteRegion(item.id).then((region) => {\n      if (reload) {\n        reload();\n      }\n      return region as IRegionViewItem;\n    })}\n  />\n);\n\nexport const FullListRegions: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListRegionsInner}\n    requestDataMethod={async () => {\n      const [regions, countries] = await Promise.all([\n        getAllRegions(), getAllCountries()\n      ]);\n      return regions.map((region) => {\n        const country =\n          countries.find((countryItem) => countryItem.id === region.countryId);\n        return {\n          ...region,\n          countryName: country && country.name\n        };\n      }).sort((a, b) =>\n        (a.countryName || '') < (b.countryName || '')\n          ? -1\n          : a.name < b.name ? -1 : 1\n        );\n    }}\n    />;\n","import React, { FC } from 'react';\nimport { getAllUsers, deleteUser } from '../../services';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\nimport { ROUTES } from '../../config';\nimport { FullList } from '../FullList/FullList';\n\nconst FullListUsersInner: FC<IGetAuthorizedBackendDataProps<IUser[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Users'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.username}\n    getItemEditUrl={(item) => `${ROUTES.USER}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => (\n      deleteUser(item.id).then((user) => {\n        if (reload) {\n          reload();\n        }\n        return user;\n      })\n    )}\n  />\n);\n\nexport const FullListUsers: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={FullListUsersInner}\n    requestDataMethod={getAllUsers}\n    />;\n","import React, { FC, useState } from 'react';\nimport { loginRequest } from '../../services';\nimport { Redirect } from 'react-router';\nimport { requiredValidation } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { LayoutWithTitle } from '../../components-layouts';\nimport { DataForm, IDataFormConfigProps } from '../DataForm/DataForm';\nimport { IUser } from '@chrisb-dev/seasonal-shared-models';\n\ntype ILoginFormConfigProps = IDataFormConfigProps<IUser>;\n\nconst loginFormConfig: ILoginFormConfigProps = {\n  username: {\n    type: 'text',\n    validation: [requiredValidation]\n  },\n\n  password: {\n    type: 'password',\n    validation: [requiredValidation]\n  }\n};\n\nexport const LoginForm: FC<{}> = () => {\n  const [redirectToNextPageState, setRedirectToNextPageState] = useState(\n    false\n  );\n\n  const handleSubmit = async (user: IUser) => {\n    await loginRequest(user.username, user.password);\n    setRedirectToNextPageState(true);\n    return;\n  };\n\n  if (redirectToNextPageState) {\n    return <Redirect push to='/home' />;\n  }\n  return (\n    <LayoutWithTitle title='Login'>\n      <DataForm\n        item={{ username: '', password: '' } as IUser}\n        sendData={handleSubmit}\n        formConfig={loginFormConfig}\n        buttonText='Login' />\n    </LayoutWithTitle>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { mainLinks } from '../../consts';\nimport './MainLinks.scss';\nimport { TextMedium, TextHeadingSmall } from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { LayoutWithTitle } from '../../components-layouts';\n\nconst SingleLink: FC<{\n  url: string\n}> = ({\n  children,\n  url\n}) => (\n  <Link className='c-main-links__link' to={`/${url}`}>\n    <TextMedium>{children}</TextMedium>\n  </Link>\n);\n\nexport const MainLinks: FC<{}> = () => (\n  <Fragment>\n    {\n      mainLinks.map((group) =>\n        <LayoutWithTitle key={group.title} title={group.title}>\n          {\n            group.pages.map((link) =>\n              <div key={link.sectionName} className='c-main-links__section'>\n                <TextHeadingSmall className='c-main-links__section-heading'>{ link.sectionName }</TextHeadingSmall>\n                <div className='c-main-links__options'>\n                  {\n                    link.createPageComponent && link.createLinkUrl\n                      && (\n                        <Fragment>\n                          <SingleLink url={link.createLinkUrl}>\n                            Create\n                          </SingleLink>\n                          <TextMedium>\n                            -\n                          </TextMedium>\n                        </Fragment>\n                      )\n                  }\n                  <SingleLink url={link.viewUrl}>\n                    View\n                  </SingleLink>\n                </div>\n              </div>\n            )\n          }\n        </LayoutWithTitle>\n      )\n    }\n  </Fragment>\n);\n","import { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FOOD_WITH_NO_RECIPES_URL } from '../config';\nimport { makeAuthorizedRequest } from './make-authorized-request';\n\nexport const getReportFoodWithNoRecipes = async (): Promise<IFood[]> =>\n  makeAuthorizedRequest<IFood[]>(FOOD_WITH_NO_RECIPES_URL);\n","import React, { FC } from 'react';\nimport {\n  IGetAuthorizedBackendDataProps,\n  GetAuthorizedBackendData\n} from '../GetAuthorizedBackendData/GetAuthorizedBackendData';\nimport { IFood } from '@chrisb-dev/seasonal-shared-models';\nimport { FullList } from '../FullList/FullList';\nimport { ROUTES } from '../../config';\nimport { deleteFood } from '../../services';\nimport { getReportFoodWithNoRecipes } from '../../services/get-report-food-with-no-recipes';\n\nconst ReportFoodWithNoRecipesInner: FC<IGetAuthorizedBackendDataProps<IFood[]>> = ({\n  items,\n  reload\n}) => (\n  <FullList\n    title='Food with no recipes'\n    items={items}\n    getItemId={(item) => item.id}\n    getItemName={(item) => item.name}\n    getItemEditUrl={(item) => `${ROUTES.FOOD}/${ROUTES.EDIT}/${item.id}`}\n    deleteItemFunc={(item) => deleteFood(item.id).then((food) => {\n      if (reload) {\n        reload();\n      }\n      return food;\n    })}\n  />\n);\nexport const ReportFoodWithNoRecipes: FC<{}> = () =>\n  <GetAuthorizedBackendData\n    InnerComponent={ReportFoodWithNoRecipesInner}\n    requestDataMethod={getReportFoodWithNoRecipes} />;\n","import React, { FC } from 'react';\nimport { MainLinks } from '../../components-main';\n\nexport const HomePage: FC<{}> = () => (\n  <MainLinks />\n);\n","import React, { FC } from 'react';\n\nimport { LoginForm } from '../../components-main';\n\nexport const LoginPage: FC<{}> = () => <LoginForm />;\n","import { ROUTES } from '../config';\nimport {\n  CreateBadgePage,\n  EditBadgePage,\n  ViewBadgesPage,\n  CreateCountryPage,\n  EditCountryPage,\n  ViewCountriesPage,\n  CreateFoodPage,\n  EditFoodPage,\n  ViewFoodPage,\n  CreateRecipePage,\n  EditRecipePage,\n  CreateRegionPage,\n  EditRegionPage,\n  ViewRegionsPage,\n  CreateUserPage,\n  EditUserPage,\n  ViewUsersPage,\n  ViewRecipesPage,\n  ViewCountryFoodNameMapsPage,\n  ViewCountryRecipeNameMapsPage,\n  CreateCountryFoodNameMapPage,\n  CreateCountryRecipeNameMapPage,\n  EditCountryFoodNameMapPage,\n  EditCountryRecipeNameMapPage,\n  EditRegionFoodSeasonMapPage,\n  ReportFoodWithNoRecipesPage\n} from '../components-pages';\nimport { FunctionComponent } from 'react';\n\nexport interface IMainLinkPages {\n  createLinkUrl?: string;\n  editLinkUrl?: string;\n  createPageComponent?: FunctionComponent;\n  editPageComponent?: FunctionComponent;\n  sectionName: string;\n  viewPageComponent: FunctionComponent;\n  viewUrl: string;\n}\n\nexport interface IMainLinkGroup {\n  title: string;\n  pages: IMainLinkPages[];\n}\n\nexport const mainLinks: IMainLinkGroup[] = [\n  {\n    pages: [\n      {\n        createPageComponent: CreateBadgePage,\n        editPageComponent: EditBadgePage,\n        sectionName: 'Badges',\n        viewPageComponent: ViewBadgesPage,\n        viewUrl: ROUTES.BADGES\n      },\n      {\n        createPageComponent: CreateCountryPage,\n        editPageComponent: EditCountryPage,\n        sectionName: 'Countries',\n        viewPageComponent: ViewCountriesPage,\n        viewUrl: ROUTES.COUNTRY\n      },\n      {\n        createPageComponent: CreateCountryFoodNameMapPage,\n        editPageComponent: EditCountryFoodNameMapPage,\n        sectionName: 'Country Food Name Maps',\n        viewPageComponent: ViewCountryFoodNameMapsPage,\n        viewUrl: ROUTES.COUNTRY_FOOD_NAME_MAP\n      },\n      {\n        createPageComponent: CreateCountryRecipeNameMapPage,\n        editPageComponent: EditCountryRecipeNameMapPage,\n        sectionName: 'Country Recipe Name Maps',\n        viewPageComponent: ViewCountryRecipeNameMapsPage,\n        viewUrl: ROUTES.COUNTRY_RECIPE_NAME_MAP\n      },\n      {\n        createPageComponent: CreateFoodPage,\n        editPageComponent: EditFoodPage,\n        sectionName: 'Food',\n        viewPageComponent: ViewFoodPage,\n        viewUrl: ROUTES.FOOD\n      },\n      {\n        createPageComponent: CreateRecipePage,\n        editPageComponent: EditRecipePage,\n        sectionName: 'Recipes',\n        viewPageComponent: ViewRecipesPage,\n        viewUrl: ROUTES.RECIPE\n      },\n      {\n        createPageComponent: CreateRegionPage,\n        editPageComponent: EditRegionPage,\n        sectionName: 'Regions',\n        viewPageComponent: ViewRegionsPage,\n        viewUrl: ROUTES.REGION\n      },\n      {\n        sectionName: 'Region Food Season Maps',\n        viewPageComponent: EditRegionFoodSeasonMapPage,\n        viewUrl: ROUTES.REGION_FOOD_SEASON_MAP\n      },\n      {\n        createPageComponent: CreateUserPage,\n        editPageComponent: EditUserPage,\n        sectionName: 'Users',\n        viewPageComponent: ViewUsersPage,\n        viewUrl: ROUTES.USER\n      }\n    ].map((link) => ({\n      ...link,\n      createLinkUrl: `${link.viewUrl}/${ROUTES.CREATE}`,\n      editLinkUrl: `${link.viewUrl}/${ROUTES.EDIT}/:id`\n    })),\n    title: 'Update Data'\n  },\n\n  {\n    pages: [{\n      sectionName: 'Food without recipes',\n      viewPageComponent: ReportFoodWithNoRecipesPage,\n      viewUrl: ROUTES.REPORTS_FOOD_MISSING_RECIPES\n    }],\n    title: 'Reports'\n  }\n];\n","import React, { FC } from 'react';\nimport { CreateBadgeForm } from '../../components-main';\n\nexport const CreateBadgePage: FC<{}> = () => <CreateBadgeForm />;\n","import React, { FC } from 'react';\nimport { EditBadgeForm } from '../../components-main';\n\nexport const EditBadgePage: FC<{}> = () => <EditBadgeForm />;\n","import React, { FC } from 'react';\nimport { FullListBadges } from '../../components-main';\n\nexport const ViewBadgesPage: FC<{}> = () => <FullListBadges />;\n","import React, { FC } from 'react';\nimport { CreateCountryForm } from '../../components-main';\n\nexport const CreateCountryPage: FC<{}> = () => <CreateCountryForm />;\n","import React, { FC } from 'react';\nimport { EditCountryForm } from '../../components-main';\n\nexport const EditCountryPage: FC<{}> = () => <EditCountryForm />;\n","import React, { FC } from 'react';\nimport { FullListCountries } from '../../components-main';\n\nexport const ViewCountriesPage: FC<{}> = () => <FullListCountries />;\n","import React, { FC } from 'react';\nimport { CreateCountryFoodNameMapForm } from '../../components-main';\n\nexport const CreateCountryFoodNameMapPage: FC<{}> = () =>\n  <CreateCountryFoodNameMapForm />;\n","import React, { FC } from 'react';\nimport { EditCountryFoodNameMapForm } from '../../components-main';\n\nexport const EditCountryFoodNameMapPage: FC<{}> = () => <EditCountryFoodNameMapForm />;\n","import React, { FC } from 'react';\nimport { FullListCountryFoodNameMaps } from '../../components-main';\n\nexport const ViewCountryFoodNameMapsPage: FC<{}> = () => <FullListCountryFoodNameMaps />;\n","import React, { FC } from 'react';\nimport { CreateCountryRecipeNameMapForm } from '../../components-main';\n\nexport const CreateCountryRecipeNameMapPage: FC<{}> = () =>\n  <CreateCountryRecipeNameMapForm />;\n","import React, { FC } from 'react';\nimport { EditCountryRecipeNameMapForm } from '../../components-main';\n\nexport const EditCountryRecipeNameMapPage: FC<{}> = () => <EditCountryRecipeNameMapForm />;\n","import React, { FC } from 'react';\nimport { FullListCountryRecipeNameMaps } from '../../components-main';\n\nexport const ViewCountryRecipeNameMapsPage: FC<{}> = () => <FullListCountryRecipeNameMaps />;\n","import React, { FC } from 'react';\nimport { CreateFoodForm } from '../../components-main';\n\nexport const CreateFoodPage: FC<{}> = () => <CreateFoodForm />;\n","import React, { FC } from 'react';\nimport { EditFoodForm } from '../../components-main';\n\nexport const EditFoodPage: FC<{}> = () => <EditFoodForm />;\n","import React, { FC } from 'react';\nimport { FullListFood } from '../../components-main';\n\nexport const ViewFoodPage: FC<{}> = () => <FullListFood />;\n","import React, { FC } from 'react';\nimport { CreateRecipeForm } from '../../components-main';\n\nexport const CreateRecipePage: FC<{}> = () => <CreateRecipeForm />;\n","import React, { FC } from 'react';\nimport { EditRecipeForm } from '../../components-main';\n\nexport const EditRecipePage: FC<{}> = () => <EditRecipeForm />;\n","import React, { FC } from 'react';\nimport { FullListRecipes } from '../../components-main';\n\nexport const ViewRecipesPage: FC<{}> = () => <FullListRecipes />;\n","\nimport React, { FC } from 'react';\nimport { CreateRegionForm } from '../../components-main';\n\nexport const CreateRegionPage: FC<{}> = () => <CreateRegionForm />;\n","import React, { FC } from 'react';\nimport { EditRegionForm } from '../../components-main';\n\nexport const EditRegionPage: FC<{}> = () => <EditRegionForm />;\n","import React, { FC } from 'react';\nimport { FullListRegions } from '../../components-main';\n\nexport const ViewRegionsPage: FC<{}> = () => <FullListRegions />;\n","import React, { FC } from 'react';\nimport { EditRegionFoodSeasonMapForm } from '../../components-main';\n\nexport const EditRegionFoodSeasonMapPage: FC<{}> = () =>\n  <EditRegionFoodSeasonMapForm />;\n","import React, { FC } from 'react';\nimport { CreateUserForm } from '../../components-main';\n\nexport const CreateUserPage: FC<{}> = () => <CreateUserForm />;\n","import React, { FC } from 'react';\nimport { EditUserForm } from '../../components-main';\n\nexport const EditUserPage: FC<{}> = () => <EditUserForm />;\n","import React, { FC } from 'react';\nimport { FullListUsers } from '../../components-main';\n\nexport const ViewUsersPage: FC<{}> = () => <FullListUsers />;\n","import React, { FC } from 'react';\n\nimport { ReportFoodWithNoRecipes } from '../../components-main';\n\nexport const ReportFoodWithNoRecipesPage: FC<{}> = () => <ReportFoodWithNoRecipes />;\n","export const getStorage = () => sessionStorage;\n","import React, { FC, Fragment } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { ROUTES } from '../config';\nimport { mainLinks, IMainLinkPages } from '../consts';\nimport {\n  HomePage,\n  LoginPage\n} from '../components-pages';\nimport { MainPageLayout } from '../components-layouts';\n\nexport const App: FC<{}> = () => (\n  <MainPageLayout>\n    <HashRouter>\n      <div>\n        <Route exact path={`/${ROUTES.LOGIN}`}>\n          <LoginPage />\n        </Route>\n        <Route exact path={`/${ROUTES.HOME}`}>\n          <HomePage />\n        </Route>\n\n        {\n          mainLinks.reduce((array, group) => [\n            ...array,\n            ...group.pages\n          ], [] as IMainLinkPages[]).map((link) =>\n            <Fragment key={link.viewUrl}>\n              {\n                link.viewPageComponent\n                  && <Route exact path={`/${link.viewUrl}`}\n                  component={link.viewPageComponent} />\n              }\n              {\n                link.editPageComponent\n                  && <Route exact path={`/${link.editLinkUrl}`}\n                  component={link.editPageComponent} />\n              }\n              {\n                link.createPageComponent\n                && <Route exact path={`/${link.createLinkUrl}`}\n                component={link.createPageComponent} />\n              }\n            </Fragment>\n          )\n        }\n      </div>\n    </HashRouter>\n  </MainPageLayout>\n);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './components-app/App';\nimport './index.scss';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n"],"sourceRoot":""}